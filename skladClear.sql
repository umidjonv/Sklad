-- --------------------------------------------------------
-- Хост:                         127.0.0.1
-- Версия сервера:               5.5.23 - MySQL Community Server (GPL)
-- Операционная система:         Win64
-- HeidiSQL Версия:              9.4.0.5194
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- Дамп структуры для таблица sklad.backfaktura
CREATE TABLE IF NOT EXISTS `backfaktura` (
  `backFakturaId` int(11) NOT NULL AUTO_INCREMENT,
  `fakturaDate` datetime NOT NULL,
  `providerId` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`backFakturaId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.backfaktura: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `backfaktura` DISABLE KEYS */;
/*!40000 ALTER TABLE `backfaktura` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.backrealize
CREATE TABLE IF NOT EXISTS `backrealize` (
  `backRealizeId` int(11) NOT NULL AUTO_INCREMENT,
  `backFakturaId` int(11) DEFAULT NULL,
  `prodId` int(11) DEFAULT NULL,
  `count` float DEFAULT NULL,
  `price` int(11) DEFAULT NULL,
  PRIMARY KEY (`backRealizeId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.backrealize: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `backrealize` DISABLE KEYS */;
/*!40000 ALTER TABLE `backrealize` ENABLE KEYS */;

-- Дамп структуры для представление sklad.backrealizeview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `backrealizeview` (
	`backRealizeId` INT(11) NOT NULL,
	`backFakturaId` INT(11) NOT NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`fakturaDate` DATE NULL,
	`price` DOUBLE(17,0) NULL,
	`count` VARCHAR(41) NULL COLLATE 'utf8mb4_general_ci',
	`productId` INT(11) NOT NULL
) ENGINE=MyISAM;

-- Дамп структуры для процедура sklad.BackTrigger
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `BackTrigger`(IN `id` INT)
    COMMENT 'Процедура при возврате счета'
BEGIN

	DECLARE done INT DEFAULT 0;
	DECLARE bCount float;
	DECLARE orderCount float;
	DECLARE prodsID int;
	DECLARE expeSum float;
	DECLARE termSum float ;
	DECLARE cur1 CURSOR FOR SELECT o.prodId,o.packCount FROM orders o where o.expenseId = id;
	DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
	
	OPEN cur1;
	
	REPEAT
		FETCH cur1 INTO prodsID, orderCount;
		IF NOT done THEN
			SET bCount = prodBalance(prodsID);
			UPDATE balance	SET endCount = (bCount + orderCount) where prodId = prodsID;
		END IF;
	UNTIL done END REPEAT;
	
	CLOSE cur1;

	
	SET expeSum = (SELECT ex.expSum FROM expense ex where ex.expenseId = id);
	SET termSum = (SELECT ex.terminal FROM expense ex where ex.expenseId = id);
	
	UPDATE info SET proceed = (proceed - expeSum), nal = (nal - (expeSum - termSum)), terminal = (terminal - termSum), back = (back + expeSum) where Dates = date(now());
END//
DELIMITER ;

-- Дамп структуры для представление sklad.backview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `backview` (
	`expenseDate` DATETIME NULL,
	`count` FLOAT NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`pack` INT(11) NOT NULL
) ENGINE=MyISAM;

-- Дамп структуры для таблица sklad.balance
CREATE TABLE IF NOT EXISTS `balance` (
  `balanceId` int(11) NOT NULL AUTO_INCREMENT,
  `prodId` int(11) DEFAULT NULL,
  `endCount` float DEFAULT NULL,
  `curEndCount` float DEFAULT NULL,
  `balanceDate` date DEFAULT NULL,
  PRIMARY KEY (`balanceId`)
) ENGINE=InnoDB AUTO_INCREMENT=591 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.balance: ~741 rows (приблизительно)
/*!40000 ALTER TABLE `balance` DISABLE KEYS */;
INSERT INTO `balance` (`balanceId`, `prodId`, `endCount`, `curEndCount`, `balanceDate`) VALUES
	(1, 592, 0, NULL, '2000-01-01'),
	(2, 591, 0, NULL, '2000-01-01'),
	(3, 590, 0, NULL, '2000-01-01'),
	(4, 589, 0, NULL, '2000-01-01'),
	(5, 588, 0, NULL, '2000-01-01'),
	(6, 587, 0, NULL, '2000-01-01'),
	(7, 586, 0, NULL, '2000-01-01'),
	(8, 585, 0, NULL, '2000-01-01'),
	(9, 584, 0, NULL, '2000-01-01'),
	(10, 583, 0, NULL, '2000-01-01'),
	(11, 582, 0, NULL, '2000-01-01'),
	(12, 581, 0, NULL, '2000-01-01'),
	(13, 580, 0, NULL, '2000-01-01'),
	(14, 579, 0, NULL, '2000-01-01'),
	(15, 578, 0, NULL, '2000-01-01'),
	(16, 577, 0, NULL, '2000-01-01'),
	(17, 576, 0, NULL, '2000-01-01'),
	(18, 575, 0, NULL, '2000-01-01'),
	(19, 574, 0, NULL, '2000-01-01'),
	(20, 573, 0, NULL, '2000-01-01'),
	(21, 572, 0, NULL, '2000-01-01'),
	(22, 571, 0, NULL, '2000-01-01'),
	(23, 570, 0, NULL, '2000-01-01'),
	(24, 569, 0, NULL, '2000-01-01'),
	(25, 568, 0, NULL, '2000-01-01'),
	(26, 567, 0, NULL, '2000-01-01'),
	(27, 566, 0, NULL, '2000-01-01'),
	(28, 565, 0, NULL, '2000-01-01'),
	(29, 564, 0, NULL, '2000-01-01'),
	(30, 563, 0, NULL, '2000-01-01'),
	(31, 562, 0, NULL, '2000-01-01'),
	(32, 561, 0, NULL, '2000-01-01'),
	(33, 560, 0, NULL, '2000-01-01'),
	(34, 559, 0, NULL, '2000-01-01'),
	(35, 558, 0, NULL, '2000-01-01'),
	(36, 557, 0, NULL, '2000-01-01'),
	(37, 556, 0, NULL, '2000-01-01'),
	(38, 555, 0, NULL, '2000-01-01'),
	(39, 554, 0, NULL, '2000-01-01'),
	(40, 553, 0, NULL, '2000-01-01'),
	(41, 552, 0, NULL, '2000-01-01'),
	(42, 551, 0, NULL, '2000-01-01'),
	(43, 550, 0, NULL, '2000-01-01'),
	(44, 549, 0, NULL, '2000-01-01'),
	(45, 548, 0, NULL, '2000-01-01'),
	(46, 547, 0, NULL, '2000-01-01'),
	(47, 546, 0, NULL, '2000-01-01'),
	(48, 545, 0, NULL, '2000-01-01'),
	(49, 544, 0, NULL, '2000-01-01'),
	(50, 543, 0, NULL, '2000-01-01'),
	(51, 542, 0, NULL, '2000-01-01'),
	(52, 541, 0, NULL, '2000-01-01'),
	(53, 540, 0, NULL, '2000-01-01'),
	(54, 539, 0, NULL, '2000-01-01'),
	(55, 538, 0, NULL, '2000-01-01'),
	(56, 537, 0, NULL, '2000-01-01'),
	(57, 536, 0, NULL, '2000-01-01'),
	(58, 535, 0, NULL, '2000-01-01'),
	(59, 534, 0, NULL, '2000-01-01'),
	(60, 533, 0, NULL, '2000-01-01'),
	(61, 532, 0, NULL, '2000-01-01'),
	(62, 531, 0, NULL, '2000-01-01'),
	(63, 530, 0, NULL, '2000-01-01'),
	(64, 529, 0, NULL, '2000-01-01'),
	(65, 528, 0, NULL, '2000-01-01'),
	(66, 527, 0, NULL, '2000-01-01'),
	(67, 526, 0, NULL, '2000-01-01'),
	(68, 525, 0, NULL, '2000-01-01'),
	(69, 524, 0, NULL, '2000-01-01'),
	(70, 523, 0, NULL, '2000-01-01'),
	(71, 522, 0, NULL, '2000-01-01'),
	(72, 521, 0, NULL, '2000-01-01'),
	(73, 520, 0, NULL, '2000-01-01'),
	(74, 519, 0, NULL, '2000-01-01'),
	(75, 518, 0, NULL, '2000-01-01'),
	(76, 517, 0, NULL, '2000-01-01'),
	(77, 516, 0, NULL, '2000-01-01'),
	(78, 515, 0, NULL, '2000-01-01'),
	(79, 514, 0, NULL, '2000-01-01'),
	(80, 513, 0, NULL, '2000-01-01'),
	(81, 512, 0, NULL, '2000-01-01'),
	(82, 511, 0, NULL, '2000-01-01'),
	(83, 510, 0, NULL, '2000-01-01'),
	(84, 509, 0, NULL, '2000-01-01'),
	(85, 508, 0, NULL, '2000-01-01'),
	(86, 507, 0, NULL, '2000-01-01'),
	(87, 506, 0, NULL, '2000-01-01'),
	(88, 505, 0, NULL, '2000-01-01'),
	(89, 504, 0, NULL, '2000-01-01'),
	(90, 503, 0, NULL, '2000-01-01'),
	(91, 502, 0, NULL, '2000-01-01'),
	(92, 501, 0, NULL, '2000-01-01'),
	(93, 500, 0, NULL, '2000-01-01'),
	(94, 499, 0, NULL, '2000-01-01'),
	(95, 498, 0, NULL, '2000-01-01'),
	(96, 497, 0, NULL, '2000-01-01'),
	(97, 496, 0, NULL, '2000-01-01'),
	(98, 495, 0, NULL, '2000-01-01'),
	(99, 494, 0, NULL, '2000-01-01'),
	(100, 493, 0, NULL, '2000-01-01'),
	(101, 492, 0, NULL, '2000-01-01'),
	(102, 491, 0, NULL, '2000-01-01'),
	(103, 490, 0, NULL, '2000-01-01'),
	(104, 489, 0, NULL, '2000-01-01'),
	(105, 488, 0, NULL, '2000-01-01'),
	(106, 487, 0, NULL, '2000-01-01'),
	(107, 486, 0, NULL, '2000-01-01'),
	(108, 485, 0, NULL, '2000-01-01'),
	(109, 484, 0, NULL, '2000-01-01'),
	(110, 483, 0, NULL, '2000-01-01'),
	(111, 482, 0, NULL, '2000-01-01'),
	(112, 481, 0, NULL, '2000-01-01'),
	(113, 480, 0, NULL, '2000-01-01'),
	(114, 479, 0, NULL, '2000-01-01'),
	(115, 478, 0, NULL, '2000-01-01'),
	(116, 477, 0, NULL, '2000-01-01'),
	(117, 476, 0, NULL, '2000-01-01'),
	(118, 475, 0, NULL, '2000-01-01'),
	(119, 474, 0, NULL, '2000-01-01'),
	(120, 473, 0, NULL, '2000-01-01'),
	(121, 472, 0, NULL, '2000-01-01'),
	(122, 471, 0, NULL, '2000-01-01'),
	(123, 470, 0, NULL, '2000-01-01'),
	(124, 469, 0, NULL, '2000-01-01'),
	(125, 468, 0, NULL, '2000-01-01'),
	(126, 467, 0, NULL, '2000-01-01'),
	(127, 466, 0, NULL, '2000-01-01'),
	(128, 465, 0, NULL, '2000-01-01'),
	(129, 464, 0, NULL, '2000-01-01'),
	(130, 463, 0, NULL, '2000-01-01'),
	(131, 462, 0, NULL, '2000-01-01'),
	(132, 461, 0, NULL, '2000-01-01'),
	(133, 460, 0, NULL, '2000-01-01'),
	(134, 459, 0, NULL, '2000-01-01'),
	(135, 458, 0, NULL, '2000-01-01'),
	(136, 457, 0, NULL, '2000-01-01'),
	(137, 456, 0, NULL, '2000-01-01'),
	(138, 455, 0, NULL, '2000-01-01'),
	(139, 454, 0, NULL, '2000-01-01'),
	(140, 453, 0, NULL, '2000-01-01'),
	(141, 452, 0, NULL, '2000-01-01'),
	(142, 451, 0, NULL, '2000-01-01'),
	(143, 450, 0, NULL, '2000-01-01'),
	(144, 449, 0, NULL, '2000-01-01'),
	(145, 448, 0, NULL, '2000-01-01'),
	(146, 447, 0, NULL, '2000-01-01'),
	(147, 446, 0, NULL, '2000-01-01'),
	(148, 445, 0, NULL, '2000-01-01'),
	(149, 444, 0, NULL, '2000-01-01'),
	(150, 443, 0, NULL, '2000-01-01'),
	(151, 442, 0, NULL, '2000-01-01'),
	(152, 441, 0, NULL, '2000-01-01'),
	(153, 440, 0, NULL, '2000-01-01'),
	(154, 439, 0, NULL, '2000-01-01'),
	(155, 438, 0, NULL, '2000-01-01'),
	(156, 437, 0, NULL, '2000-01-01'),
	(157, 436, 0, NULL, '2000-01-01'),
	(158, 435, 0, NULL, '2000-01-01'),
	(159, 434, 0, NULL, '2000-01-01'),
	(160, 433, 0, NULL, '2000-01-01'),
	(161, 432, 0, NULL, '2000-01-01'),
	(162, 431, 0, NULL, '2000-01-01'),
	(163, 430, 0, NULL, '2000-01-01'),
	(164, 429, 0, NULL, '2000-01-01'),
	(165, 428, 0, NULL, '2000-01-01'),
	(166, 427, 0, NULL, '2000-01-01'),
	(167, 426, 0, NULL, '2000-01-01'),
	(168, 425, 0, NULL, '2000-01-01'),
	(169, 424, 0, NULL, '2000-01-01'),
	(170, 423, 0, NULL, '2000-01-01'),
	(171, 422, 0, NULL, '2000-01-01'),
	(172, 421, 0, NULL, '2000-01-01'),
	(173, 420, 0, NULL, '2000-01-01'),
	(174, 419, 0, NULL, '2000-01-01'),
	(175, 418, 0, NULL, '2000-01-01'),
	(176, 417, 0, NULL, '2000-01-01'),
	(177, 416, 0, NULL, '2000-01-01'),
	(178, 415, 0, NULL, '2000-01-01'),
	(179, 414, 0, NULL, '2000-01-01'),
	(180, 413, 0, NULL, '2000-01-01'),
	(181, 412, 0, NULL, '2000-01-01'),
	(182, 411, 0, NULL, '2000-01-01'),
	(183, 410, 0, NULL, '2000-01-01'),
	(184, 409, 0, NULL, '2000-01-01'),
	(185, 408, 0, NULL, '2000-01-01'),
	(186, 407, 0, NULL, '2000-01-01'),
	(187, 406, 0, NULL, '2000-01-01'),
	(188, 405, 0, NULL, '2000-01-01'),
	(189, 404, 0, NULL, '2000-01-01'),
	(190, 403, 0, NULL, '2000-01-01'),
	(191, 402, 0, NULL, '2000-01-01'),
	(192, 401, 0, NULL, '2000-01-01'),
	(193, 400, 0, NULL, '2000-01-01'),
	(194, 399, 0, NULL, '2000-01-01'),
	(195, 398, 0, NULL, '2000-01-01'),
	(196, 397, 0, NULL, '2000-01-01'),
	(197, 396, 0, NULL, '2000-01-01'),
	(198, 395, 0, NULL, '2000-01-01'),
	(199, 394, 0, NULL, '2000-01-01'),
	(200, 393, 0, NULL, '2000-01-01'),
	(201, 392, 0, NULL, '2000-01-01'),
	(202, 391, 0, NULL, '2000-01-01'),
	(203, 390, 0, NULL, '2000-01-01'),
	(204, 389, 0, NULL, '2000-01-01'),
	(205, 388, 0, NULL, '2000-01-01'),
	(206, 387, 0, NULL, '2000-01-01'),
	(207, 386, 0, NULL, '2000-01-01'),
	(208, 385, 0, NULL, '2000-01-01'),
	(209, 384, 0, NULL, '2000-01-01'),
	(210, 383, 0, NULL, '2000-01-01'),
	(211, 382, 0, NULL, '2000-01-01'),
	(212, 381, 0, NULL, '2000-01-01'),
	(213, 380, 0, NULL, '2000-01-01'),
	(214, 379, 0, NULL, '2000-01-01'),
	(215, 378, 0, NULL, '2000-01-01'),
	(216, 377, 0, NULL, '2000-01-01'),
	(217, 376, 0, NULL, '2000-01-01'),
	(218, 375, 0, NULL, '2000-01-01'),
	(219, 374, 0, NULL, '2000-01-01'),
	(220, 373, 0, NULL, '2000-01-01'),
	(221, 372, 0, NULL, '2000-01-01'),
	(222, 371, 0, NULL, '2000-01-01'),
	(223, 370, 0, NULL, '2000-01-01'),
	(224, 369, 0, NULL, '2000-01-01'),
	(225, 368, 0, NULL, '2000-01-01'),
	(226, 367, 0, NULL, '2000-01-01'),
	(227, 366, 0, NULL, '2000-01-01'),
	(228, 365, 0, NULL, '2000-01-01'),
	(229, 364, 0, NULL, '2000-01-01'),
	(230, 363, 0, NULL, '2000-01-01'),
	(231, 362, 0, NULL, '2000-01-01'),
	(232, 361, 0, NULL, '2000-01-01'),
	(233, 360, 0, NULL, '2000-01-01'),
	(234, 359, 0, NULL, '2000-01-01'),
	(235, 358, 0, NULL, '2000-01-01'),
	(236, 357, 0, NULL, '2000-01-01'),
	(237, 356, 0, NULL, '2000-01-01'),
	(238, 355, 0, NULL, '2000-01-01'),
	(239, 354, 0, NULL, '2000-01-01'),
	(240, 353, 0, NULL, '2000-01-01'),
	(241, 352, 0, NULL, '2000-01-01'),
	(242, 351, 0, NULL, '2000-01-01'),
	(243, 350, 0, NULL, '2000-01-01'),
	(244, 349, 0, NULL, '2000-01-01'),
	(245, 348, 0, NULL, '2000-01-01'),
	(246, 347, 0, NULL, '2000-01-01'),
	(247, 346, 0, NULL, '2000-01-01'),
	(248, 345, 0, NULL, '2000-01-01'),
	(249, 344, 0, NULL, '2000-01-01'),
	(250, 343, 0, NULL, '2000-01-01'),
	(251, 342, 0, NULL, '2000-01-01'),
	(252, 341, 0, NULL, '2000-01-01'),
	(253, 340, 0, NULL, '2000-01-01'),
	(254, 339, 0, NULL, '2000-01-01'),
	(255, 338, 0, NULL, '2000-01-01'),
	(256, 337, 0, NULL, '2000-01-01'),
	(257, 336, 0, NULL, '2000-01-01'),
	(258, 335, 0, NULL, '2000-01-01'),
	(259, 334, 0, NULL, '2000-01-01'),
	(260, 333, 0, NULL, '2000-01-01'),
	(261, 332, 0, NULL, '2000-01-01'),
	(262, 331, 0, NULL, '2000-01-01'),
	(263, 330, 0, NULL, '2000-01-01'),
	(264, 329, 0, NULL, '2000-01-01'),
	(265, 328, 0, NULL, '2000-01-01'),
	(266, 327, 0, NULL, '2000-01-01'),
	(267, 326, 0, NULL, '2000-01-01'),
	(268, 325, 0, NULL, '2000-01-01'),
	(269, 324, 0, NULL, '2000-01-01'),
	(270, 323, 0, NULL, '2000-01-01'),
	(271, 322, 0, NULL, '2000-01-01'),
	(272, 321, 0, NULL, '2000-01-01'),
	(273, 320, 0, NULL, '2000-01-01'),
	(274, 319, 0, NULL, '2000-01-01'),
	(275, 318, 0, NULL, '2000-01-01'),
	(276, 317, 0, NULL, '2000-01-01'),
	(277, 316, 0, NULL, '2000-01-01'),
	(278, 315, 0, NULL, '2000-01-01'),
	(279, 314, 0, NULL, '2000-01-01'),
	(280, 313, 0, NULL, '2000-01-01'),
	(281, 312, 0, NULL, '2000-01-01'),
	(282, 311, 0, NULL, '2000-01-01'),
	(283, 310, 0, NULL, '2000-01-01'),
	(284, 309, 0, NULL, '2000-01-01'),
	(285, 308, 0, NULL, '2000-01-01'),
	(286, 307, 0, NULL, '2000-01-01'),
	(287, 306, 0, NULL, '2000-01-01'),
	(288, 305, 0, NULL, '2000-01-01'),
	(289, 304, 0, NULL, '2000-01-01'),
	(290, 303, 0, NULL, '2000-01-01'),
	(291, 302, 0, NULL, '2000-01-01'),
	(292, 301, 0, NULL, '2000-01-01'),
	(293, 300, 0, NULL, '2000-01-01'),
	(294, 299, 0, NULL, '2000-01-01'),
	(295, 298, 0, NULL, '2000-01-01'),
	(296, 297, 0, NULL, '2000-01-01'),
	(297, 296, 0, NULL, '2000-01-01'),
	(298, 295, 0, NULL, '2000-01-01'),
	(299, 294, 0, NULL, '2000-01-01'),
	(300, 293, 0, NULL, '2000-01-01'),
	(301, 292, 0, NULL, '2000-01-01'),
	(302, 291, 0, NULL, '2000-01-01'),
	(303, 290, 0, NULL, '2000-01-01'),
	(304, 289, 0, NULL, '2000-01-01'),
	(305, 288, 0, NULL, '2000-01-01'),
	(306, 287, 0, NULL, '2000-01-01'),
	(307, 286, 0, NULL, '2000-01-01'),
	(308, 285, 0, NULL, '2000-01-01'),
	(309, 284, 0, NULL, '2000-01-01'),
	(310, 283, 0, NULL, '2000-01-01'),
	(311, 282, 0, NULL, '2000-01-01'),
	(312, 281, 0, NULL, '2000-01-01'),
	(313, 280, 0, NULL, '2000-01-01'),
	(314, 279, 0, NULL, '2000-01-01'),
	(315, 278, 0, NULL, '2000-01-01'),
	(316, 277, 0, NULL, '2000-01-01'),
	(317, 276, 0, NULL, '2000-01-01'),
	(318, 275, 0, NULL, '2000-01-01'),
	(319, 274, 0, NULL, '2000-01-01'),
	(320, 273, 0, NULL, '2000-01-01'),
	(321, 272, 0, NULL, '2000-01-01'),
	(322, 271, 0, NULL, '2000-01-01'),
	(323, 270, 0, NULL, '2000-01-01'),
	(324, 269, 0, NULL, '2000-01-01'),
	(325, 268, 0, NULL, '2000-01-01'),
	(326, 267, 0, NULL, '2000-01-01'),
	(327, 266, 0, NULL, '2000-01-01'),
	(328, 265, 0, NULL, '2000-01-01'),
	(329, 264, 0, NULL, '2000-01-01'),
	(330, 263, 0, NULL, '2000-01-01'),
	(331, 262, 0, NULL, '2000-01-01'),
	(332, 261, 0, NULL, '2000-01-01'),
	(333, 260, 0, NULL, '2000-01-01'),
	(334, 259, 0, NULL, '2000-01-01'),
	(335, 258, 0, NULL, '2000-01-01'),
	(336, 257, 0, NULL, '2000-01-01'),
	(337, 256, 0, NULL, '2000-01-01'),
	(338, 255, 0, NULL, '2000-01-01'),
	(339, 254, 0, NULL, '2000-01-01'),
	(340, 253, 0, NULL, '2000-01-01'),
	(341, 252, 0, NULL, '2000-01-01'),
	(342, 251, 0, NULL, '2000-01-01'),
	(343, 250, 0, NULL, '2000-01-01'),
	(344, 249, 0, NULL, '2000-01-01'),
	(345, 248, 0, NULL, '2000-01-01'),
	(346, 247, 0, NULL, '2000-01-01'),
	(347, 246, 0, NULL, '2000-01-01'),
	(348, 245, 0, NULL, '2000-01-01'),
	(349, 244, 0, NULL, '2000-01-01'),
	(350, 243, 0, NULL, '2000-01-01'),
	(351, 242, 0, NULL, '2000-01-01'),
	(352, 241, 0, NULL, '2000-01-01'),
	(353, 240, 0, NULL, '2000-01-01'),
	(354, 239, 0, NULL, '2000-01-01'),
	(355, 238, 0, NULL, '2000-01-01'),
	(356, 237, 0, NULL, '2000-01-01'),
	(357, 236, 0, NULL, '2000-01-01'),
	(358, 235, 0, NULL, '2000-01-01'),
	(359, 234, 0, NULL, '2000-01-01'),
	(360, 233, 0, NULL, '2000-01-01'),
	(361, 232, 0, NULL, '2000-01-01'),
	(362, 231, 0, NULL, '2000-01-01'),
	(363, 230, 0, NULL, '2000-01-01'),
	(364, 229, 0, NULL, '2000-01-01'),
	(365, 228, 0, NULL, '2000-01-01'),
	(366, 227, 0, NULL, '2000-01-01'),
	(367, 226, 0, NULL, '2000-01-01'),
	(368, 225, 0, NULL, '2000-01-01'),
	(369, 224, 0, NULL, '2000-01-01'),
	(370, 223, 0, NULL, '2000-01-01'),
	(371, 222, 0, NULL, '2000-01-01'),
	(372, 221, 0, NULL, '2000-01-01'),
	(373, 220, 0, NULL, '2000-01-01'),
	(374, 219, 0, NULL, '2000-01-01'),
	(375, 218, 0, NULL, '2000-01-01'),
	(376, 217, 0, NULL, '2000-01-01'),
	(377, 216, 0, NULL, '2000-01-01'),
	(378, 215, 0, NULL, '2000-01-01'),
	(379, 214, 0, NULL, '2000-01-01'),
	(380, 213, 0, NULL, '2000-01-01'),
	(381, 212, 0, NULL, '2000-01-01'),
	(382, 211, 0, NULL, '2000-01-01'),
	(383, 210, 0, NULL, '2000-01-01'),
	(384, 209, 0, NULL, '2000-01-01'),
	(385, 208, 0, NULL, '2000-01-01'),
	(386, 207, 0, NULL, '2000-01-01'),
	(387, 206, 0, NULL, '2000-01-01'),
	(388, 205, 0, NULL, '2000-01-01'),
	(389, 204, 0, NULL, '2000-01-01'),
	(390, 203, 0, NULL, '2000-01-01'),
	(391, 202, 0, NULL, '2000-01-01'),
	(392, 201, 0, NULL, '2000-01-01'),
	(393, 200, 0, NULL, '2000-01-01'),
	(394, 199, 0, NULL, '2000-01-01'),
	(395, 198, 0, NULL, '2000-01-01'),
	(396, 197, 0, NULL, '2000-01-01'),
	(397, 196, 0, NULL, '2000-01-01'),
	(398, 195, 0, NULL, '2000-01-01'),
	(399, 194, 0, NULL, '2000-01-01'),
	(400, 193, 0, NULL, '2000-01-01'),
	(401, 192, 0, NULL, '2000-01-01'),
	(402, 191, 0, NULL, '2000-01-01'),
	(403, 190, 0, NULL, '2000-01-01'),
	(404, 189, 0, NULL, '2000-01-01'),
	(405, 188, 0, NULL, '2000-01-01'),
	(406, 187, 0, NULL, '2000-01-01'),
	(407, 186, 0, NULL, '2000-01-01'),
	(408, 185, 0, NULL, '2000-01-01'),
	(409, 184, 0, NULL, '2000-01-01'),
	(410, 183, 0, NULL, '2000-01-01'),
	(411, 182, 0, NULL, '2000-01-01'),
	(412, 181, 0, NULL, '2000-01-01'),
	(413, 180, 0, NULL, '2000-01-01'),
	(414, 179, 0, NULL, '2000-01-01'),
	(415, 178, 0, NULL, '2000-01-01'),
	(416, 177, 0, NULL, '2000-01-01'),
	(417, 176, 0, NULL, '2000-01-01'),
	(418, 175, 0, NULL, '2000-01-01'),
	(419, 174, 0, NULL, '2000-01-01'),
	(420, 173, 0, NULL, '2000-01-01'),
	(421, 172, 0, NULL, '2000-01-01'),
	(422, 171, 0, NULL, '2000-01-01'),
	(423, 170, 0, NULL, '2000-01-01'),
	(424, 169, 0, NULL, '2000-01-01'),
	(425, 168, 0, NULL, '2000-01-01'),
	(426, 167, 0, NULL, '2000-01-01'),
	(427, 166, 0, NULL, '2000-01-01'),
	(428, 165, 0, NULL, '2000-01-01'),
	(429, 164, 0, NULL, '2000-01-01'),
	(430, 163, 0, NULL, '2000-01-01'),
	(431, 162, 0, NULL, '2000-01-01'),
	(432, 161, 0, NULL, '2000-01-01'),
	(433, 160, 0, NULL, '2000-01-01'),
	(434, 159, 0, NULL, '2000-01-01'),
	(435, 158, 0, NULL, '2000-01-01'),
	(436, 157, 0, NULL, '2000-01-01'),
	(437, 156, 0, NULL, '2000-01-01'),
	(438, 155, 0, NULL, '2000-01-01'),
	(439, 154, 0, NULL, '2000-01-01'),
	(440, 153, 0, NULL, '2000-01-01'),
	(441, 152, 0, NULL, '2000-01-01'),
	(442, 151, 0, NULL, '2000-01-01'),
	(443, 150, 0, NULL, '2000-01-01'),
	(444, 149, 0, NULL, '2000-01-01'),
	(445, 148, 0, NULL, '2000-01-01'),
	(446, 147, 0, NULL, '2000-01-01'),
	(447, 146, 0, NULL, '2000-01-01'),
	(448, 145, 0, NULL, '2000-01-01'),
	(449, 144, 0, NULL, '2000-01-01'),
	(450, 143, 0, NULL, '2000-01-01'),
	(451, 142, 0, NULL, '2000-01-01'),
	(452, 141, 0, NULL, '2000-01-01'),
	(453, 140, 0, NULL, '2000-01-01'),
	(454, 139, 0, NULL, '2000-01-01'),
	(455, 138, 0, NULL, '2000-01-01'),
	(456, 137, 0, NULL, '2000-01-01'),
	(457, 136, 0, NULL, '2000-01-01'),
	(458, 135, 0, NULL, '2000-01-01'),
	(459, 134, 0, NULL, '2000-01-01'),
	(460, 133, 0, NULL, '2000-01-01'),
	(461, 132, 0, NULL, '2000-01-01'),
	(462, 131, 0, NULL, '2000-01-01'),
	(463, 130, 0, NULL, '2000-01-01'),
	(464, 129, 0, NULL, '2000-01-01'),
	(465, 128, 0, NULL, '2000-01-01'),
	(466, 127, 0, NULL, '2000-01-01'),
	(467, 126, 0, NULL, '2000-01-01'),
	(468, 125, 0, NULL, '2000-01-01'),
	(469, 124, 0, NULL, '2000-01-01'),
	(470, 123, 0, NULL, '2000-01-01'),
	(471, 122, 0, NULL, '2000-01-01'),
	(472, 121, 0, NULL, '2000-01-01'),
	(473, 120, 0, NULL, '2000-01-01'),
	(474, 119, 0, NULL, '2000-01-01'),
	(475, 118, 0, NULL, '2000-01-01'),
	(476, 117, 0, NULL, '2000-01-01'),
	(477, 116, 0, NULL, '2000-01-01'),
	(478, 115, 0, NULL, '2000-01-01'),
	(479, 114, 0, NULL, '2000-01-01'),
	(480, 113, 0, NULL, '2000-01-01'),
	(481, 112, 0, NULL, '2000-01-01'),
	(482, 111, 0, NULL, '2000-01-01'),
	(483, 110, 0, NULL, '2000-01-01'),
	(484, 109, 0, NULL, '2000-01-01'),
	(485, 108, 0, NULL, '2000-01-01'),
	(486, 107, 0, NULL, '2000-01-01'),
	(487, 106, 0, NULL, '2000-01-01'),
	(488, 105, 0, NULL, '2000-01-01'),
	(489, 104, 0, NULL, '2000-01-01'),
	(490, 103, 0, NULL, '2000-01-01'),
	(491, 102, 0, NULL, '2000-01-01'),
	(492, 101, 0, NULL, '2000-01-01'),
	(493, 100, 0, NULL, '2000-01-01'),
	(494, 99, 0, NULL, '2000-01-01'),
	(495, 98, 0, NULL, '2000-01-01'),
	(496, 97, 0, NULL, '2000-01-01'),
	(497, 96, 0, NULL, '2000-01-01'),
	(498, 95, 0, NULL, '2000-01-01'),
	(499, 94, 0, NULL, '2000-01-01'),
	(500, 93, 0, NULL, '2000-01-01'),
	(501, 92, 0, NULL, '2000-01-01'),
	(502, 91, 0, NULL, '2000-01-01'),
	(503, 90, 0, NULL, '2000-01-01'),
	(504, 89, 0, NULL, '2000-01-01'),
	(505, 88, 0, NULL, '2000-01-01'),
	(506, 87, 0, NULL, '2000-01-01'),
	(507, 86, 0, NULL, '2000-01-01'),
	(508, 85, 0, NULL, '2000-01-01'),
	(509, 84, 0, NULL, '2000-01-01'),
	(510, 83, 0, NULL, '2000-01-01'),
	(511, 82, 0, NULL, '2000-01-01'),
	(512, 81, 0, NULL, '2000-01-01'),
	(513, 80, 0, NULL, '2000-01-01'),
	(514, 79, 0, NULL, '2000-01-01'),
	(515, 78, 0, NULL, '2000-01-01'),
	(516, 77, 0, NULL, '2000-01-01'),
	(517, 76, 0, NULL, '2000-01-01'),
	(518, 75, 0, NULL, '2000-01-01'),
	(519, 74, 0, NULL, '2000-01-01'),
	(520, 73, 0, NULL, '2000-01-01'),
	(521, 72, 0, NULL, '2000-01-01'),
	(522, 71, 0, NULL, '2000-01-01'),
	(523, 70, 0, NULL, '2000-01-01'),
	(524, 69, 0, NULL, '2000-01-01'),
	(525, 68, 0, NULL, '2000-01-01'),
	(526, 67, 0, NULL, '2000-01-01'),
	(527, 66, 0, NULL, '2000-01-01'),
	(528, 65, 0, NULL, '2000-01-01'),
	(529, 64, 0, NULL, '2000-01-01'),
	(530, 63, 0, NULL, '2000-01-01'),
	(531, 62, 0, NULL, '2000-01-01'),
	(532, 61, 0, NULL, '2000-01-01'),
	(533, 60, 0, NULL, '2000-01-01'),
	(534, 59, 0, NULL, '2000-01-01'),
	(535, 58, 0, NULL, '2000-01-01'),
	(536, 57, 0, NULL, '2000-01-01'),
	(537, 56, 0, NULL, '2000-01-01'),
	(538, 55, 0, NULL, '2000-01-01'),
	(539, 54, 0, NULL, '2000-01-01'),
	(540, 53, 0, NULL, '2000-01-01'),
	(541, 52, 0, NULL, '2000-01-01'),
	(542, 51, 0, NULL, '2000-01-01'),
	(543, 50, 0, NULL, '2000-01-01'),
	(544, 49, 0, NULL, '2000-01-01'),
	(545, 48, 0, NULL, '2000-01-01'),
	(546, 47, 0, NULL, '2000-01-01'),
	(547, 46, 0, NULL, '2000-01-01'),
	(548, 45, 0, NULL, '2000-01-01'),
	(549, 44, 0, NULL, '2000-01-01'),
	(550, 43, 0, NULL, '2000-01-01'),
	(551, 42, 0, NULL, '2000-01-01'),
	(552, 41, 0, NULL, '2000-01-01'),
	(553, 40, 0, NULL, '2000-01-01'),
	(554, 39, 0, NULL, '2000-01-01'),
	(555, 38, 0, NULL, '2000-01-01'),
	(556, 37, 0, NULL, '2000-01-01'),
	(557, 36, 0, NULL, '2000-01-01'),
	(558, 35, 0, NULL, '2000-01-01'),
	(559, 34, 0, NULL, '2000-01-01'),
	(560, 33, 0, NULL, '2000-01-01'),
	(561, 32, 0, NULL, '2000-01-01'),
	(562, 31, 0, NULL, '2000-01-01'),
	(563, 30, 0, NULL, '2000-01-01'),
	(564, 29, 0, NULL, '2000-01-01'),
	(565, 28, 0, NULL, '2000-01-01'),
	(566, 27, 0, NULL, '2000-01-01'),
	(567, 26, 0, NULL, '2000-01-01'),
	(568, 25, 0, NULL, '2000-01-01'),
	(569, 24, 0, NULL, '2000-01-01'),
	(570, 23, 0, NULL, '2000-01-01'),
	(571, 22, 0, NULL, '2000-01-01'),
	(572, 21, 0, NULL, '2000-01-01'),
	(573, 20, 0, NULL, '2000-01-01'),
	(574, 19, 0, NULL, '2000-01-01'),
	(575, 18, 0, NULL, '2000-01-01'),
	(576, 17, 0, NULL, '2000-01-01'),
	(577, 16, 0, NULL, '2000-01-01'),
	(578, 15, 0, NULL, '2000-01-01'),
	(579, 14, 0, NULL, '2000-01-01'),
	(580, 13, 0, NULL, '2000-01-01'),
	(581, 12, 0, NULL, '2000-01-01'),
	(582, 11, 11, NULL, '2000-01-01'),
	(583, 10, 10, NULL, '2000-01-01'),
	(584, 9, 1, NULL, '2000-01-01'),
	(585, 8, 1, NULL, '2000-01-01'),
	(586, 7, 0, NULL, '2000-01-01'),
	(587, 6, 0, NULL, '2000-01-01'),
	(588, 5, 21, NULL, '2000-01-01'),
	(589, 4, 0, NULL, '2000-01-01'),
	(590, 3, 5, NULL, '2000-01-01');
/*!40000 ALTER TABLE `balance` ENABLE KEYS */;

-- Дамп структуры для процедура sklad.balanceCalc
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `balanceCalc`()
    COMMENT 'Высчитывание остатка для текущего дня'
BEGIN
/*	DECLARE i INT;
	DECLARE prodID INT;
	DECLARE eCount float;
	DECLARE cEndCount float;
	DECLARE realizes float;
	DECLARE LastDate date;
	DECLARE expenses float;
	DECLARE back float;
	DECLARE temp float;
	DECLARE cDate date DEFAULT(date(now()));
	#SET cDate = '2017-05-12';
	SET i = (select productId from product order by productId DESC limit 1);
		delete from balanceList where balanceDate = cDate;
		delete from balance where balanceDate = '2000-01-01';
	SET LastDate = (select balanceDate from balanceList order by balanceDate DESC limit 1);
	
	WHILE i > 0 DO
	#SET i = 2784;
	
		SET prodID = (select productId from product where productId = i);
		IF(prodID is not NULL) THEN
			
			# Начальный остаток продукта
			#SET cEndCount = (select b.curEndCount from balance b where b.prodId = prodID and b.balanceDate = LastDate order by balanceDate DESC limit 1);
			#IF(cEndCount is NULL) THEN		
				SET eCount = (select b.endCount from balanceList b where b.prodId = i and b.balanceDate = LastDate limit 1);
			#ELSE		
			#	SET eCount = cEndCount;
			#END IF;
			
			
			#Приход продукта
			SET realizes = (select sum(r.count) from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = prodID and date(f.fakturaDate) = cDate limit 1);
			IF (realizes is null) THEN 
				SET realizes = 0;
			END IF;
			
			#Расход товара 
			SET expenses = (select sum(o.packCount) from expense e join orders o on o.expenseId = e.expenseId where o.prodId = prodID and date(e.expenseDate) = cDate and e.expType != 1 limit 1);
			IF (expenses is null) THEN 
				SET expenses = 0;
			END IF;
			
			#Возврат товара 
			SET back = (select sum(o.packCount) from expense e join orders o on o.expenseId = e.expenseId where o.prodId = prodID and date(e.expenseDate) = cDate and e.expType = 1 limit 1);
			IF (back is null) THEN 
				SET back = 0;
			END IF;
			
			IF(eCount is null) THEN
				SET eCount = 0;
			END IF;
			
			SET temp = (eCount+realizes-expenses+back);
			#IF (cDate = LastDate) THEN
			#IF ((select b.balanceDate from balance b where b.prodId = i and b.balanceDate = LastDate limit 1) is not null) THEN
				# Insert в таблицу баланс
	#			insert into balance (`balanceDate`,`prodId`,`endCount`) values(date(now()),prodID,(eCount+realizes-expenses+back));
				#update balance  SET `endCount` = (eCount+realizes-expenses+back) where prodId = prodID and balanceDate = LastDate;
			#ELSE
				# Insert в таблицу баланс
				insert into balanceList (`balanceDate`,`prodId`,`endCount`) values(cDate,prodID,temp);
				insert into balance (`balanceDate`,`prodId`,`endCount`) values('2000-01-01',prodID,temp);
			#END IF;
			
		END IF;
		 SET i=i-1;
   END WHILE;*/

	DECLARE done INT DEFAULT 0;
	DECLARE bCount float;
	DECLARE bId float;
	DECLARE prodsID int;
	DECLARE cur1 CURSOR FOR SELECT b.prodId, b.balanceId FROM balance b;
	DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
	
	OPEN cur1;
	
	REPEAT
		FETCH cur1 INTO prodsID, bId;
		SET bId = (select b.balanceId from balance b where b.prodId = prodsID LIMIT 1);

			delete from balance where balanceId > bId and prodId = prodsID;

	UNTIL done END REPEAT;
END//
DELIMITER ;

-- Дамп структуры для таблица sklad.balancelist
CREATE TABLE IF NOT EXISTS `balancelist` (
  `balanceId` int(11) NOT NULL AUTO_INCREMENT,
  `balanceDate` date DEFAULT NULL,
  `prodId` int(11) DEFAULT NULL,
  `endCount` float DEFAULT NULL,
  `curEndCount` float DEFAULT NULL,
  PRIMARY KEY (`balanceId`)
) ENGINE=InnoDB AUTO_INCREMENT=1181 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.balancelist: ~1 184 rows (приблизительно)
/*!40000 ALTER TABLE `balancelist` DISABLE KEYS */;
INSERT INTO `balancelist` (`balanceId`, `balanceDate`, `prodId`, `endCount`, `curEndCount`) VALUES
	(1, '2017-12-28', 592, 0, NULL),
	(2, '2017-12-28', 591, 0, NULL),
	(3, '2017-12-28', 590, 0, NULL),
	(4, '2017-12-28', 589, 0, NULL),
	(5, '2017-12-28', 588, 0, NULL),
	(6, '2017-12-28', 587, 0, NULL),
	(7, '2017-12-28', 586, 0, NULL),
	(8, '2017-12-28', 585, 0, NULL),
	(9, '2017-12-28', 584, 0, NULL),
	(10, '2017-12-28', 583, 0, NULL),
	(11, '2017-12-28', 582, 0, NULL),
	(12, '2017-12-28', 581, 0, NULL),
	(13, '2017-12-28', 580, 0, NULL),
	(14, '2017-12-28', 579, 0, NULL),
	(15, '2017-12-28', 578, 0, NULL),
	(16, '2017-12-28', 577, 0, NULL),
	(17, '2017-12-28', 576, 0, NULL),
	(18, '2017-12-28', 575, 0, NULL),
	(19, '2017-12-28', 574, 0, NULL),
	(20, '2017-12-28', 573, 0, NULL),
	(21, '2017-12-28', 572, 0, NULL),
	(22, '2017-12-28', 571, 0, NULL),
	(23, '2017-12-28', 570, 0, NULL),
	(24, '2017-12-28', 569, 0, NULL),
	(25, '2017-12-28', 568, 0, NULL),
	(26, '2017-12-28', 567, 0, NULL),
	(27, '2017-12-28', 566, 0, NULL),
	(28, '2017-12-28', 565, 0, NULL),
	(29, '2017-12-28', 564, 0, NULL),
	(30, '2017-12-28', 563, 0, NULL),
	(31, '2017-12-28', 562, 0, NULL),
	(32, '2017-12-28', 561, 0, NULL),
	(33, '2017-12-28', 560, 0, NULL),
	(34, '2017-12-28', 559, 0, NULL),
	(35, '2017-12-28', 558, 0, NULL),
	(36, '2017-12-28', 557, 0, NULL),
	(37, '2017-12-28', 556, 0, NULL),
	(38, '2017-12-28', 555, 0, NULL),
	(39, '2017-12-28', 554, 0, NULL),
	(40, '2017-12-28', 553, 0, NULL),
	(41, '2017-12-28', 552, 0, NULL),
	(42, '2017-12-28', 551, 0, NULL),
	(43, '2017-12-28', 550, 0, NULL),
	(44, '2017-12-28', 549, 0, NULL),
	(45, '2017-12-28', 548, 0, NULL),
	(46, '2017-12-28', 547, 0, NULL),
	(47, '2017-12-28', 546, 0, NULL),
	(48, '2017-12-28', 545, 0, NULL),
	(49, '2017-12-28', 544, 0, NULL),
	(50, '2017-12-28', 543, 0, NULL),
	(51, '2017-12-28', 542, 0, NULL),
	(52, '2017-12-28', 541, 0, NULL),
	(53, '2017-12-28', 540, 0, NULL),
	(54, '2017-12-28', 539, 0, NULL),
	(55, '2017-12-28', 538, 0, NULL),
	(56, '2017-12-28', 537, 0, NULL),
	(57, '2017-12-28', 536, 0, NULL),
	(58, '2017-12-28', 535, 0, NULL),
	(59, '2017-12-28', 534, 0, NULL),
	(60, '2017-12-28', 533, 0, NULL),
	(61, '2017-12-28', 532, 0, NULL),
	(62, '2017-12-28', 531, 0, NULL),
	(63, '2017-12-28', 530, 0, NULL),
	(64, '2017-12-28', 529, 0, NULL),
	(65, '2017-12-28', 528, 0, NULL),
	(66, '2017-12-28', 527, 0, NULL),
	(67, '2017-12-28', 526, 0, NULL),
	(68, '2017-12-28', 525, 0, NULL),
	(69, '2017-12-28', 524, 0, NULL),
	(70, '2017-12-28', 523, 0, NULL),
	(71, '2017-12-28', 522, 0, NULL),
	(72, '2017-12-28', 521, 0, NULL),
	(73, '2017-12-28', 520, 0, NULL),
	(74, '2017-12-28', 519, 0, NULL),
	(75, '2017-12-28', 518, 0, NULL),
	(76, '2017-12-28', 517, 0, NULL),
	(77, '2017-12-28', 516, 0, NULL),
	(78, '2017-12-28', 515, 0, NULL),
	(79, '2017-12-28', 514, 0, NULL),
	(80, '2017-12-28', 513, 0, NULL),
	(81, '2017-12-28', 512, 0, NULL),
	(82, '2017-12-28', 511, 0, NULL),
	(83, '2017-12-28', 510, 0, NULL),
	(84, '2017-12-28', 509, 0, NULL),
	(85, '2017-12-28', 508, 0, NULL),
	(86, '2017-12-28', 507, 0, NULL),
	(87, '2017-12-28', 506, 0, NULL),
	(88, '2017-12-28', 505, 0, NULL),
	(89, '2017-12-28', 504, 0, NULL),
	(90, '2017-12-28', 503, 0, NULL),
	(91, '2017-12-28', 502, 0, NULL),
	(92, '2017-12-28', 501, 0, NULL),
	(93, '2017-12-28', 500, 0, NULL),
	(94, '2017-12-28', 499, 0, NULL),
	(95, '2017-12-28', 498, 0, NULL),
	(96, '2017-12-28', 497, 0, NULL),
	(97, '2017-12-28', 496, 0, NULL),
	(98, '2017-12-28', 495, 0, NULL),
	(99, '2017-12-28', 494, 0, NULL),
	(100, '2017-12-28', 493, 0, NULL),
	(101, '2017-12-28', 492, 0, NULL),
	(102, '2017-12-28', 491, 0, NULL),
	(103, '2017-12-28', 490, 0, NULL),
	(104, '2017-12-28', 489, 0, NULL),
	(105, '2017-12-28', 488, 0, NULL),
	(106, '2017-12-28', 487, 0, NULL),
	(107, '2017-12-28', 486, 0, NULL),
	(108, '2017-12-28', 485, 0, NULL),
	(109, '2017-12-28', 484, 0, NULL),
	(110, '2017-12-28', 483, 0, NULL),
	(111, '2017-12-28', 482, 0, NULL),
	(112, '2017-12-28', 481, 0, NULL),
	(113, '2017-12-28', 480, 0, NULL),
	(114, '2017-12-28', 479, 0, NULL),
	(115, '2017-12-28', 478, 0, NULL),
	(116, '2017-12-28', 477, 0, NULL),
	(117, '2017-12-28', 476, 0, NULL),
	(118, '2017-12-28', 475, 0, NULL),
	(119, '2017-12-28', 474, 0, NULL),
	(120, '2017-12-28', 473, 0, NULL),
	(121, '2017-12-28', 472, 0, NULL),
	(122, '2017-12-28', 471, 0, NULL),
	(123, '2017-12-28', 470, 0, NULL),
	(124, '2017-12-28', 469, 0, NULL),
	(125, '2017-12-28', 468, 0, NULL),
	(126, '2017-12-28', 467, 0, NULL),
	(127, '2017-12-28', 466, 0, NULL),
	(128, '2017-12-28', 465, 0, NULL),
	(129, '2017-12-28', 464, 0, NULL),
	(130, '2017-12-28', 463, 0, NULL),
	(131, '2017-12-28', 462, 0, NULL),
	(132, '2017-12-28', 461, 0, NULL),
	(133, '2017-12-28', 460, 0, NULL),
	(134, '2017-12-28', 459, 0, NULL),
	(135, '2017-12-28', 458, 0, NULL),
	(136, '2017-12-28', 457, 0, NULL),
	(137, '2017-12-28', 456, 0, NULL),
	(138, '2017-12-28', 455, 0, NULL),
	(139, '2017-12-28', 454, 0, NULL),
	(140, '2017-12-28', 453, 0, NULL),
	(141, '2017-12-28', 452, 0, NULL),
	(142, '2017-12-28', 451, 0, NULL),
	(143, '2017-12-28', 450, 0, NULL),
	(144, '2017-12-28', 449, 0, NULL),
	(145, '2017-12-28', 448, 0, NULL),
	(146, '2017-12-28', 447, 0, NULL),
	(147, '2017-12-28', 446, 0, NULL),
	(148, '2017-12-28', 445, 0, NULL),
	(149, '2017-12-28', 444, 0, NULL),
	(150, '2017-12-28', 443, 0, NULL),
	(151, '2017-12-28', 442, 0, NULL),
	(152, '2017-12-28', 441, 0, NULL),
	(153, '2017-12-28', 440, 0, NULL),
	(154, '2017-12-28', 439, 0, NULL),
	(155, '2017-12-28', 438, 0, NULL),
	(156, '2017-12-28', 437, 0, NULL),
	(157, '2017-12-28', 436, 0, NULL),
	(158, '2017-12-28', 435, 0, NULL),
	(159, '2017-12-28', 434, 0, NULL),
	(160, '2017-12-28', 433, 0, NULL),
	(161, '2017-12-28', 432, 0, NULL),
	(162, '2017-12-28', 431, 0, NULL),
	(163, '2017-12-28', 430, 0, NULL),
	(164, '2017-12-28', 429, 0, NULL),
	(165, '2017-12-28', 428, 0, NULL),
	(166, '2017-12-28', 427, 0, NULL),
	(167, '2017-12-28', 426, 0, NULL),
	(168, '2017-12-28', 425, 0, NULL),
	(169, '2017-12-28', 424, 0, NULL),
	(170, '2017-12-28', 423, 0, NULL),
	(171, '2017-12-28', 422, 0, NULL),
	(172, '2017-12-28', 421, 0, NULL),
	(173, '2017-12-28', 420, 0, NULL),
	(174, '2017-12-28', 419, 0, NULL),
	(175, '2017-12-28', 418, 0, NULL),
	(176, '2017-12-28', 417, 0, NULL),
	(177, '2017-12-28', 416, 0, NULL),
	(178, '2017-12-28', 415, 0, NULL),
	(179, '2017-12-28', 414, 0, NULL),
	(180, '2017-12-28', 413, 0, NULL),
	(181, '2017-12-28', 412, 0, NULL),
	(182, '2017-12-28', 411, 0, NULL),
	(183, '2017-12-28', 410, 0, NULL),
	(184, '2017-12-28', 409, 0, NULL),
	(185, '2017-12-28', 408, 0, NULL),
	(186, '2017-12-28', 407, 0, NULL),
	(187, '2017-12-28', 406, 0, NULL),
	(188, '2017-12-28', 405, 0, NULL),
	(189, '2017-12-28', 404, 0, NULL),
	(190, '2017-12-28', 403, 0, NULL),
	(191, '2017-12-28', 402, 0, NULL),
	(192, '2017-12-28', 401, 0, NULL),
	(193, '2017-12-28', 400, 0, NULL),
	(194, '2017-12-28', 399, 0, NULL),
	(195, '2017-12-28', 398, 0, NULL),
	(196, '2017-12-28', 397, 0, NULL),
	(197, '2017-12-28', 396, 0, NULL),
	(198, '2017-12-28', 395, 0, NULL),
	(199, '2017-12-28', 394, 0, NULL),
	(200, '2017-12-28', 393, 0, NULL),
	(201, '2017-12-28', 392, 0, NULL),
	(202, '2017-12-28', 391, 0, NULL),
	(203, '2017-12-28', 390, 0, NULL),
	(204, '2017-12-28', 389, 0, NULL),
	(205, '2017-12-28', 388, 0, NULL),
	(206, '2017-12-28', 387, 0, NULL),
	(207, '2017-12-28', 386, 0, NULL),
	(208, '2017-12-28', 385, 0, NULL),
	(209, '2017-12-28', 384, 0, NULL),
	(210, '2017-12-28', 383, 0, NULL),
	(211, '2017-12-28', 382, 0, NULL),
	(212, '2017-12-28', 381, 0, NULL),
	(213, '2017-12-28', 380, 0, NULL),
	(214, '2017-12-28', 379, 0, NULL),
	(215, '2017-12-28', 378, 0, NULL),
	(216, '2017-12-28', 377, 0, NULL),
	(217, '2017-12-28', 376, 0, NULL),
	(218, '2017-12-28', 375, 0, NULL),
	(219, '2017-12-28', 374, 0, NULL),
	(220, '2017-12-28', 373, 0, NULL),
	(221, '2017-12-28', 372, 0, NULL),
	(222, '2017-12-28', 371, 0, NULL),
	(223, '2017-12-28', 370, 0, NULL),
	(224, '2017-12-28', 369, 0, NULL),
	(225, '2017-12-28', 368, 0, NULL),
	(226, '2017-12-28', 367, 0, NULL),
	(227, '2017-12-28', 366, 0, NULL),
	(228, '2017-12-28', 365, 0, NULL),
	(229, '2017-12-28', 364, 0, NULL),
	(230, '2017-12-28', 363, 0, NULL),
	(231, '2017-12-28', 362, 0, NULL),
	(232, '2017-12-28', 361, 0, NULL),
	(233, '2017-12-28', 360, 0, NULL),
	(234, '2017-12-28', 359, 0, NULL),
	(235, '2017-12-28', 358, 0, NULL),
	(236, '2017-12-28', 357, 0, NULL),
	(237, '2017-12-28', 356, 0, NULL),
	(238, '2017-12-28', 355, 0, NULL),
	(239, '2017-12-28', 354, 0, NULL),
	(240, '2017-12-28', 353, 0, NULL),
	(241, '2017-12-28', 352, 0, NULL),
	(242, '2017-12-28', 351, 0, NULL),
	(243, '2017-12-28', 350, 0, NULL),
	(244, '2017-12-28', 349, 0, NULL),
	(245, '2017-12-28', 348, 0, NULL),
	(246, '2017-12-28', 347, 0, NULL),
	(247, '2017-12-28', 346, 0, NULL),
	(248, '2017-12-28', 345, 0, NULL),
	(249, '2017-12-28', 344, 0, NULL),
	(250, '2017-12-28', 343, 0, NULL),
	(251, '2017-12-28', 342, 0, NULL),
	(252, '2017-12-28', 341, 0, NULL),
	(253, '2017-12-28', 340, 0, NULL),
	(254, '2017-12-28', 339, 0, NULL),
	(255, '2017-12-28', 338, 0, NULL),
	(256, '2017-12-28', 337, 0, NULL),
	(257, '2017-12-28', 336, 0, NULL),
	(258, '2017-12-28', 335, 0, NULL),
	(259, '2017-12-28', 334, 0, NULL),
	(260, '2017-12-28', 333, 0, NULL),
	(261, '2017-12-28', 332, 0, NULL),
	(262, '2017-12-28', 331, 0, NULL),
	(263, '2017-12-28', 330, 0, NULL),
	(264, '2017-12-28', 329, 0, NULL),
	(265, '2017-12-28', 328, 0, NULL),
	(266, '2017-12-28', 327, 0, NULL),
	(267, '2017-12-28', 326, 0, NULL),
	(268, '2017-12-28', 325, 0, NULL),
	(269, '2017-12-28', 324, 0, NULL),
	(270, '2017-12-28', 323, 0, NULL),
	(271, '2017-12-28', 322, 0, NULL),
	(272, '2017-12-28', 321, 0, NULL),
	(273, '2017-12-28', 320, 0, NULL),
	(274, '2017-12-28', 319, 0, NULL),
	(275, '2017-12-28', 318, 0, NULL),
	(276, '2017-12-28', 317, 0, NULL),
	(277, '2017-12-28', 316, 0, NULL),
	(278, '2017-12-28', 315, 0, NULL),
	(279, '2017-12-28', 314, 0, NULL),
	(280, '2017-12-28', 313, 0, NULL),
	(281, '2017-12-28', 312, 0, NULL),
	(282, '2017-12-28', 311, 0, NULL),
	(283, '2017-12-28', 310, 0, NULL),
	(284, '2017-12-28', 309, 0, NULL),
	(285, '2017-12-28', 308, 0, NULL),
	(286, '2017-12-28', 307, 0, NULL),
	(287, '2017-12-28', 306, 0, NULL),
	(288, '2017-12-28', 305, 0, NULL),
	(289, '2017-12-28', 304, 0, NULL),
	(290, '2017-12-28', 303, 0, NULL),
	(291, '2017-12-28', 302, 0, NULL),
	(292, '2017-12-28', 301, 0, NULL),
	(293, '2017-12-28', 300, 0, NULL),
	(294, '2017-12-28', 299, 0, NULL),
	(295, '2017-12-28', 298, 0, NULL),
	(296, '2017-12-28', 297, 0, NULL),
	(297, '2017-12-28', 296, 0, NULL),
	(298, '2017-12-28', 295, 0, NULL),
	(299, '2017-12-28', 294, 0, NULL),
	(300, '2017-12-28', 293, 0, NULL),
	(301, '2017-12-28', 292, 0, NULL),
	(302, '2017-12-28', 291, 0, NULL),
	(303, '2017-12-28', 290, 0, NULL),
	(304, '2017-12-28', 289, 0, NULL),
	(305, '2017-12-28', 288, 0, NULL),
	(306, '2017-12-28', 287, 0, NULL),
	(307, '2017-12-28', 286, 0, NULL),
	(308, '2017-12-28', 285, 0, NULL),
	(309, '2017-12-28', 284, 0, NULL),
	(310, '2017-12-28', 283, 0, NULL),
	(311, '2017-12-28', 282, 0, NULL),
	(312, '2017-12-28', 281, 0, NULL),
	(313, '2017-12-28', 280, 0, NULL),
	(314, '2017-12-28', 279, 0, NULL),
	(315, '2017-12-28', 278, 0, NULL),
	(316, '2017-12-28', 277, 0, NULL),
	(317, '2017-12-28', 276, 0, NULL),
	(318, '2017-12-28', 275, 0, NULL),
	(319, '2017-12-28', 274, 0, NULL),
	(320, '2017-12-28', 273, 0, NULL),
	(321, '2017-12-28', 272, 0, NULL),
	(322, '2017-12-28', 271, 0, NULL),
	(323, '2017-12-28', 270, 0, NULL),
	(324, '2017-12-28', 269, 0, NULL),
	(325, '2017-12-28', 268, 0, NULL),
	(326, '2017-12-28', 267, 0, NULL),
	(327, '2017-12-28', 266, 0, NULL),
	(328, '2017-12-28', 265, 0, NULL),
	(329, '2017-12-28', 264, 0, NULL),
	(330, '2017-12-28', 263, 0, NULL),
	(331, '2017-12-28', 262, 0, NULL),
	(332, '2017-12-28', 261, 0, NULL),
	(333, '2017-12-28', 260, 0, NULL),
	(334, '2017-12-28', 259, 0, NULL),
	(335, '2017-12-28', 258, 0, NULL),
	(336, '2017-12-28', 257, 0, NULL),
	(337, '2017-12-28', 256, 0, NULL),
	(338, '2017-12-28', 255, 0, NULL),
	(339, '2017-12-28', 254, 0, NULL),
	(340, '2017-12-28', 253, 0, NULL),
	(341, '2017-12-28', 252, 0, NULL),
	(342, '2017-12-28', 251, 0, NULL),
	(343, '2017-12-28', 250, 0, NULL),
	(344, '2017-12-28', 249, 0, NULL),
	(345, '2017-12-28', 248, 0, NULL),
	(346, '2017-12-28', 247, 0, NULL),
	(347, '2017-12-28', 246, 0, NULL),
	(348, '2017-12-28', 245, 0, NULL),
	(349, '2017-12-28', 244, 0, NULL),
	(350, '2017-12-28', 243, 0, NULL),
	(351, '2017-12-28', 242, 0, NULL),
	(352, '2017-12-28', 241, 0, NULL),
	(353, '2017-12-28', 240, 0, NULL),
	(354, '2017-12-28', 239, 0, NULL),
	(355, '2017-12-28', 238, 0, NULL),
	(356, '2017-12-28', 237, 0, NULL),
	(357, '2017-12-28', 236, 0, NULL),
	(358, '2017-12-28', 235, 0, NULL),
	(359, '2017-12-28', 234, 0, NULL),
	(360, '2017-12-28', 233, 0, NULL),
	(361, '2017-12-28', 232, 0, NULL),
	(362, '2017-12-28', 231, 0, NULL),
	(363, '2017-12-28', 230, 0, NULL),
	(364, '2017-12-28', 229, 0, NULL),
	(365, '2017-12-28', 228, 0, NULL),
	(366, '2017-12-28', 227, 0, NULL),
	(367, '2017-12-28', 226, 0, NULL),
	(368, '2017-12-28', 225, 0, NULL),
	(369, '2017-12-28', 224, 0, NULL),
	(370, '2017-12-28', 223, 0, NULL),
	(371, '2017-12-28', 222, 0, NULL),
	(372, '2017-12-28', 221, 0, NULL),
	(373, '2017-12-28', 220, 0, NULL),
	(374, '2017-12-28', 219, 0, NULL),
	(375, '2017-12-28', 218, 0, NULL),
	(376, '2017-12-28', 217, 0, NULL),
	(377, '2017-12-28', 216, 0, NULL),
	(378, '2017-12-28', 215, 0, NULL),
	(379, '2017-12-28', 214, 0, NULL),
	(380, '2017-12-28', 213, 0, NULL),
	(381, '2017-12-28', 212, 0, NULL),
	(382, '2017-12-28', 211, 0, NULL),
	(383, '2017-12-28', 210, 0, NULL),
	(384, '2017-12-28', 209, 0, NULL),
	(385, '2017-12-28', 208, 0, NULL),
	(386, '2017-12-28', 207, 0, NULL),
	(387, '2017-12-28', 206, 0, NULL),
	(388, '2017-12-28', 205, 0, NULL),
	(389, '2017-12-28', 204, 0, NULL),
	(390, '2017-12-28', 203, 0, NULL),
	(391, '2017-12-28', 202, 0, NULL),
	(392, '2017-12-28', 201, 0, NULL),
	(393, '2017-12-28', 200, 0, NULL),
	(394, '2017-12-28', 199, 0, NULL),
	(395, '2017-12-28', 198, 0, NULL),
	(396, '2017-12-28', 197, 0, NULL),
	(397, '2017-12-28', 196, 0, NULL),
	(398, '2017-12-28', 195, 0, NULL),
	(399, '2017-12-28', 194, 0, NULL),
	(400, '2017-12-28', 193, 0, NULL),
	(401, '2017-12-28', 192, 0, NULL),
	(402, '2017-12-28', 191, 0, NULL),
	(403, '2017-12-28', 190, 0, NULL),
	(404, '2017-12-28', 189, 0, NULL),
	(405, '2017-12-28', 188, 0, NULL),
	(406, '2017-12-28', 187, 0, NULL),
	(407, '2017-12-28', 186, 0, NULL),
	(408, '2017-12-28', 185, 0, NULL),
	(409, '2017-12-28', 184, 0, NULL),
	(410, '2017-12-28', 183, 0, NULL),
	(411, '2017-12-28', 182, 0, NULL),
	(412, '2017-12-28', 181, 0, NULL),
	(413, '2017-12-28', 180, 0, NULL),
	(414, '2017-12-28', 179, 0, NULL),
	(415, '2017-12-28', 178, 0, NULL),
	(416, '2017-12-28', 177, 0, NULL),
	(417, '2017-12-28', 176, 0, NULL),
	(418, '2017-12-28', 175, 0, NULL),
	(419, '2017-12-28', 174, 0, NULL),
	(420, '2017-12-28', 173, 0, NULL),
	(421, '2017-12-28', 172, 0, NULL),
	(422, '2017-12-28', 171, 0, NULL),
	(423, '2017-12-28', 170, 0, NULL),
	(424, '2017-12-28', 169, 0, NULL),
	(425, '2017-12-28', 168, 0, NULL),
	(426, '2017-12-28', 167, 0, NULL),
	(427, '2017-12-28', 166, 0, NULL),
	(428, '2017-12-28', 165, 0, NULL),
	(429, '2017-12-28', 164, 0, NULL),
	(430, '2017-12-28', 163, 0, NULL),
	(431, '2017-12-28', 162, 0, NULL),
	(432, '2017-12-28', 161, 0, NULL),
	(433, '2017-12-28', 160, 0, NULL),
	(434, '2017-12-28', 159, 0, NULL),
	(435, '2017-12-28', 158, 0, NULL),
	(436, '2017-12-28', 157, 0, NULL),
	(437, '2017-12-28', 156, 0, NULL),
	(438, '2017-12-28', 155, 0, NULL),
	(439, '2017-12-28', 154, 0, NULL),
	(440, '2017-12-28', 153, 0, NULL),
	(441, '2017-12-28', 152, 0, NULL),
	(442, '2017-12-28', 151, 0, NULL),
	(443, '2017-12-28', 150, 0, NULL),
	(444, '2017-12-28', 149, 0, NULL),
	(445, '2017-12-28', 148, 0, NULL),
	(446, '2017-12-28', 147, 0, NULL),
	(447, '2017-12-28', 146, 0, NULL),
	(448, '2017-12-28', 145, 0, NULL),
	(449, '2017-12-28', 144, 0, NULL),
	(450, '2017-12-28', 143, 0, NULL),
	(451, '2017-12-28', 142, 0, NULL),
	(452, '2017-12-28', 141, 0, NULL),
	(453, '2017-12-28', 140, 0, NULL),
	(454, '2017-12-28', 139, 0, NULL),
	(455, '2017-12-28', 138, 0, NULL),
	(456, '2017-12-28', 137, 0, NULL),
	(457, '2017-12-28', 136, 0, NULL),
	(458, '2017-12-28', 135, 0, NULL),
	(459, '2017-12-28', 134, 0, NULL),
	(460, '2017-12-28', 133, 0, NULL),
	(461, '2017-12-28', 132, 0, NULL),
	(462, '2017-12-28', 131, 0, NULL),
	(463, '2017-12-28', 130, 0, NULL),
	(464, '2017-12-28', 129, 0, NULL),
	(465, '2017-12-28', 128, 0, NULL),
	(466, '2017-12-28', 127, 0, NULL),
	(467, '2017-12-28', 126, 0, NULL),
	(468, '2017-12-28', 125, 0, NULL),
	(469, '2017-12-28', 124, 0, NULL),
	(470, '2017-12-28', 123, 0, NULL),
	(471, '2017-12-28', 122, 0, NULL),
	(472, '2017-12-28', 121, 0, NULL),
	(473, '2017-12-28', 120, 0, NULL),
	(474, '2017-12-28', 119, 0, NULL),
	(475, '2017-12-28', 118, 0, NULL),
	(476, '2017-12-28', 117, 0, NULL),
	(477, '2017-12-28', 116, 0, NULL),
	(478, '2017-12-28', 115, 0, NULL),
	(479, '2017-12-28', 114, 0, NULL),
	(480, '2017-12-28', 113, 0, NULL),
	(481, '2017-12-28', 112, 0, NULL),
	(482, '2017-12-28', 111, 0, NULL),
	(483, '2017-12-28', 110, 0, NULL),
	(484, '2017-12-28', 109, 0, NULL),
	(485, '2017-12-28', 108, 0, NULL),
	(486, '2017-12-28', 107, 0, NULL),
	(487, '2017-12-28', 106, 0, NULL),
	(488, '2017-12-28', 105, 0, NULL),
	(489, '2017-12-28', 104, 0, NULL),
	(490, '2017-12-28', 103, 0, NULL),
	(491, '2017-12-28', 102, 0, NULL),
	(492, '2017-12-28', 101, 0, NULL),
	(493, '2017-12-28', 100, 0, NULL),
	(494, '2017-12-28', 99, 0, NULL),
	(495, '2017-12-28', 98, 0, NULL),
	(496, '2017-12-28', 97, 0, NULL),
	(497, '2017-12-28', 96, 0, NULL),
	(498, '2017-12-28', 95, 0, NULL),
	(499, '2017-12-28', 94, 0, NULL),
	(500, '2017-12-28', 93, 0, NULL),
	(501, '2017-12-28', 92, 0, NULL),
	(502, '2017-12-28', 91, 0, NULL),
	(503, '2017-12-28', 90, 0, NULL),
	(504, '2017-12-28', 89, 0, NULL),
	(505, '2017-12-28', 88, 0, NULL),
	(506, '2017-12-28', 87, 0, NULL),
	(507, '2017-12-28', 86, 0, NULL),
	(508, '2017-12-28', 85, 0, NULL),
	(509, '2017-12-28', 84, 0, NULL),
	(510, '2017-12-28', 83, 0, NULL),
	(511, '2017-12-28', 82, 0, NULL),
	(512, '2017-12-28', 81, 0, NULL),
	(513, '2017-12-28', 80, 0, NULL),
	(514, '2017-12-28', 79, 0, NULL),
	(515, '2017-12-28', 78, 0, NULL),
	(516, '2017-12-28', 77, 0, NULL),
	(517, '2017-12-28', 76, 0, NULL),
	(518, '2017-12-28', 75, 0, NULL),
	(519, '2017-12-28', 74, 0, NULL),
	(520, '2017-12-28', 73, 0, NULL),
	(521, '2017-12-28', 72, 0, NULL),
	(522, '2017-12-28', 71, 0, NULL),
	(523, '2017-12-28', 70, 0, NULL),
	(524, '2017-12-28', 69, 0, NULL),
	(525, '2017-12-28', 68, 0, NULL),
	(526, '2017-12-28', 67, 0, NULL),
	(527, '2017-12-28', 66, 0, NULL),
	(528, '2017-12-28', 65, 0, NULL),
	(529, '2017-12-28', 64, 0, NULL),
	(530, '2017-12-28', 63, 0, NULL),
	(531, '2017-12-28', 62, 0, NULL),
	(532, '2017-12-28', 61, 0, NULL),
	(533, '2017-12-28', 60, 0, NULL),
	(534, '2017-12-28', 59, 0, NULL),
	(535, '2017-12-28', 58, 0, NULL),
	(536, '2017-12-28', 57, 0, NULL),
	(537, '2017-12-28', 56, 0, NULL),
	(538, '2017-12-28', 55, 0, NULL),
	(539, '2017-12-28', 54, 0, NULL),
	(540, '2017-12-28', 53, 0, NULL),
	(541, '2017-12-28', 52, 0, NULL),
	(542, '2017-12-28', 51, 0, NULL),
	(543, '2017-12-28', 50, 0, NULL),
	(544, '2017-12-28', 49, 0, NULL),
	(545, '2017-12-28', 48, 0, NULL),
	(546, '2017-12-28', 47, 0, NULL),
	(547, '2017-12-28', 46, 0, NULL),
	(548, '2017-12-28', 45, 0, NULL),
	(549, '2017-12-28', 44, 0, NULL),
	(550, '2017-12-28', 43, 0, NULL),
	(551, '2017-12-28', 42, 0, NULL),
	(552, '2017-12-28', 41, 0, NULL),
	(553, '2017-12-28', 40, 0, NULL),
	(554, '2017-12-28', 39, 0, NULL),
	(555, '2017-12-28', 38, 0, NULL),
	(556, '2017-12-28', 37, 0, NULL),
	(557, '2017-12-28', 36, 0, NULL),
	(558, '2017-12-28', 35, 0, NULL),
	(559, '2017-12-28', 34, 0, NULL),
	(560, '2017-12-28', 33, 0, NULL),
	(561, '2017-12-28', 32, 0, NULL),
	(562, '2017-12-28', 31, 0, NULL),
	(563, '2017-12-28', 30, 0, NULL),
	(564, '2017-12-28', 29, 0, NULL),
	(565, '2017-12-28', 28, 0, NULL),
	(566, '2017-12-28', 27, 0, NULL),
	(567, '2017-12-28', 26, 0, NULL),
	(568, '2017-12-28', 25, 0, NULL),
	(569, '2017-12-28', 24, 0, NULL),
	(570, '2017-12-28', 23, 0, NULL),
	(571, '2017-12-28', 22, 0, NULL),
	(572, '2017-12-28', 21, 0, NULL),
	(573, '2017-12-28', 20, 0, NULL),
	(574, '2017-12-28', 19, 0, NULL),
	(575, '2017-12-28', 18, 0, NULL),
	(576, '2017-12-28', 17, 0, NULL),
	(577, '2017-12-28', 16, 0, NULL),
	(578, '2017-12-28', 15, 0, NULL),
	(579, '2017-12-28', 14, 0, NULL),
	(580, '2017-12-28', 13, 0, NULL),
	(581, '2017-12-28', 12, 0, NULL),
	(582, '2017-12-28', 11, 0, NULL),
	(583, '2017-12-28', 10, 0, NULL),
	(584, '2017-12-28', 9, 0, NULL),
	(585, '2017-12-28', 8, 0, NULL),
	(586, '2017-12-28', 7, 0, NULL),
	(587, '2017-12-28', 6, 0, NULL),
	(588, '2017-12-28', 5, 0, NULL),
	(589, '2017-12-28', 4, 0, NULL),
	(590, '2017-12-28', 3, 0, NULL),
	(591, '2018-01-07', 592, 0, NULL),
	(592, '2018-01-07', 591, 0, NULL),
	(593, '2018-01-07', 590, 0, NULL),
	(594, '2018-01-07', 589, 0, NULL),
	(595, '2018-01-07', 588, 0, NULL),
	(596, '2018-01-07', 587, 0, NULL),
	(597, '2018-01-07', 586, 0, NULL),
	(598, '2018-01-07', 585, 0, NULL),
	(599, '2018-01-07', 584, 0, NULL),
	(600, '2018-01-07', 583, 0, NULL),
	(601, '2018-01-07', 582, 0, NULL),
	(602, '2018-01-07', 581, 0, NULL),
	(603, '2018-01-07', 580, 0, NULL),
	(604, '2018-01-07', 579, 0, NULL),
	(605, '2018-01-07', 578, 0, NULL),
	(606, '2018-01-07', 577, 0, NULL),
	(607, '2018-01-07', 576, 0, NULL),
	(608, '2018-01-07', 575, 0, NULL),
	(609, '2018-01-07', 574, 0, NULL),
	(610, '2018-01-07', 573, 0, NULL),
	(611, '2018-01-07', 572, 0, NULL),
	(612, '2018-01-07', 571, 0, NULL),
	(613, '2018-01-07', 570, 0, NULL),
	(614, '2018-01-07', 569, 0, NULL),
	(615, '2018-01-07', 568, 0, NULL),
	(616, '2018-01-07', 567, 0, NULL),
	(617, '2018-01-07', 566, 0, NULL),
	(618, '2018-01-07', 565, 0, NULL),
	(619, '2018-01-07', 564, 0, NULL),
	(620, '2018-01-07', 563, 0, NULL),
	(621, '2018-01-07', 562, 0, NULL),
	(622, '2018-01-07', 561, 0, NULL),
	(623, '2018-01-07', 560, 0, NULL),
	(624, '2018-01-07', 559, 0, NULL),
	(625, '2018-01-07', 558, 0, NULL),
	(626, '2018-01-07', 557, 0, NULL),
	(627, '2018-01-07', 556, 0, NULL),
	(628, '2018-01-07', 555, 0, NULL),
	(629, '2018-01-07', 554, 0, NULL),
	(630, '2018-01-07', 553, 0, NULL),
	(631, '2018-01-07', 552, 0, NULL),
	(632, '2018-01-07', 551, 0, NULL),
	(633, '2018-01-07', 550, 0, NULL),
	(634, '2018-01-07', 549, 0, NULL),
	(635, '2018-01-07', 548, 0, NULL),
	(636, '2018-01-07', 547, 0, NULL),
	(637, '2018-01-07', 546, 0, NULL),
	(638, '2018-01-07', 545, 0, NULL),
	(639, '2018-01-07', 544, 0, NULL),
	(640, '2018-01-07', 543, 0, NULL),
	(641, '2018-01-07', 542, 0, NULL),
	(642, '2018-01-07', 541, 0, NULL),
	(643, '2018-01-07', 540, 0, NULL),
	(644, '2018-01-07', 539, 0, NULL),
	(645, '2018-01-07', 538, 0, NULL),
	(646, '2018-01-07', 537, 0, NULL),
	(647, '2018-01-07', 536, 0, NULL),
	(648, '2018-01-07', 535, 0, NULL),
	(649, '2018-01-07', 534, 0, NULL),
	(650, '2018-01-07', 533, 0, NULL),
	(651, '2018-01-07', 532, 0, NULL),
	(652, '2018-01-07', 531, 0, NULL),
	(653, '2018-01-07', 530, 0, NULL),
	(654, '2018-01-07', 529, 0, NULL),
	(655, '2018-01-07', 528, 0, NULL),
	(656, '2018-01-07', 527, 0, NULL),
	(657, '2018-01-07', 526, 0, NULL),
	(658, '2018-01-07', 525, 0, NULL),
	(659, '2018-01-07', 524, 0, NULL),
	(660, '2018-01-07', 523, 0, NULL),
	(661, '2018-01-07', 522, 0, NULL),
	(662, '2018-01-07', 521, 0, NULL),
	(663, '2018-01-07', 520, 0, NULL),
	(664, '2018-01-07', 519, 0, NULL),
	(665, '2018-01-07', 518, 0, NULL),
	(666, '2018-01-07', 517, 0, NULL),
	(667, '2018-01-07', 516, 0, NULL),
	(668, '2018-01-07', 515, 0, NULL),
	(669, '2018-01-07', 514, 0, NULL),
	(670, '2018-01-07', 513, 0, NULL),
	(671, '2018-01-07', 512, 0, NULL),
	(672, '2018-01-07', 511, 0, NULL),
	(673, '2018-01-07', 510, 0, NULL),
	(674, '2018-01-07', 509, 0, NULL),
	(675, '2018-01-07', 508, 0, NULL),
	(676, '2018-01-07', 507, 0, NULL),
	(677, '2018-01-07', 506, 0, NULL),
	(678, '2018-01-07', 505, 0, NULL),
	(679, '2018-01-07', 504, 0, NULL),
	(680, '2018-01-07', 503, 0, NULL),
	(681, '2018-01-07', 502, 0, NULL),
	(682, '2018-01-07', 501, 0, NULL),
	(683, '2018-01-07', 500, 0, NULL),
	(684, '2018-01-07', 499, 0, NULL),
	(685, '2018-01-07', 498, 0, NULL),
	(686, '2018-01-07', 497, 0, NULL),
	(687, '2018-01-07', 496, 0, NULL),
	(688, '2018-01-07', 495, 0, NULL),
	(689, '2018-01-07', 494, 0, NULL),
	(690, '2018-01-07', 493, 0, NULL),
	(691, '2018-01-07', 492, 0, NULL),
	(692, '2018-01-07', 491, 0, NULL),
	(693, '2018-01-07', 490, 0, NULL),
	(694, '2018-01-07', 489, 0, NULL),
	(695, '2018-01-07', 488, 0, NULL),
	(696, '2018-01-07', 487, 0, NULL),
	(697, '2018-01-07', 486, 0, NULL),
	(698, '2018-01-07', 485, 0, NULL),
	(699, '2018-01-07', 484, 0, NULL),
	(700, '2018-01-07', 483, 0, NULL),
	(701, '2018-01-07', 482, 0, NULL),
	(702, '2018-01-07', 481, 0, NULL),
	(703, '2018-01-07', 480, 0, NULL),
	(704, '2018-01-07', 479, 0, NULL),
	(705, '2018-01-07', 478, 0, NULL),
	(706, '2018-01-07', 477, 0, NULL),
	(707, '2018-01-07', 476, 0, NULL),
	(708, '2018-01-07', 475, 0, NULL),
	(709, '2018-01-07', 474, 0, NULL),
	(710, '2018-01-07', 473, 0, NULL),
	(711, '2018-01-07', 472, 0, NULL),
	(712, '2018-01-07', 471, 0, NULL),
	(713, '2018-01-07', 470, 0, NULL),
	(714, '2018-01-07', 469, 0, NULL),
	(715, '2018-01-07', 468, 0, NULL),
	(716, '2018-01-07', 467, 0, NULL),
	(717, '2018-01-07', 466, 0, NULL),
	(718, '2018-01-07', 465, 0, NULL),
	(719, '2018-01-07', 464, 0, NULL),
	(720, '2018-01-07', 463, 0, NULL),
	(721, '2018-01-07', 462, 0, NULL),
	(722, '2018-01-07', 461, 0, NULL),
	(723, '2018-01-07', 460, 0, NULL),
	(724, '2018-01-07', 459, 0, NULL),
	(725, '2018-01-07', 458, 0, NULL),
	(726, '2018-01-07', 457, 0, NULL),
	(727, '2018-01-07', 456, 0, NULL),
	(728, '2018-01-07', 455, 0, NULL),
	(729, '2018-01-07', 454, 0, NULL),
	(730, '2018-01-07', 453, 0, NULL),
	(731, '2018-01-07', 452, 0, NULL),
	(732, '2018-01-07', 451, 0, NULL),
	(733, '2018-01-07', 450, 0, NULL),
	(734, '2018-01-07', 449, 0, NULL),
	(735, '2018-01-07', 448, 0, NULL),
	(736, '2018-01-07', 447, 0, NULL),
	(737, '2018-01-07', 446, 0, NULL),
	(738, '2018-01-07', 445, 0, NULL),
	(739, '2018-01-07', 444, 0, NULL),
	(740, '2018-01-07', 443, 0, NULL),
	(741, '2018-01-07', 442, 0, NULL),
	(742, '2018-01-07', 441, 0, NULL),
	(743, '2018-01-07', 440, 0, NULL),
	(744, '2018-01-07', 439, 0, NULL),
	(745, '2018-01-07', 438, 0, NULL),
	(746, '2018-01-07', 437, 0, NULL),
	(747, '2018-01-07', 436, 0, NULL),
	(748, '2018-01-07', 435, 0, NULL),
	(749, '2018-01-07', 434, 0, NULL),
	(750, '2018-01-07', 433, 0, NULL),
	(751, '2018-01-07', 432, 0, NULL),
	(752, '2018-01-07', 431, 0, NULL),
	(753, '2018-01-07', 430, 0, NULL),
	(754, '2018-01-07', 429, 0, NULL),
	(755, '2018-01-07', 428, 0, NULL),
	(756, '2018-01-07', 427, 0, NULL),
	(757, '2018-01-07', 426, 0, NULL),
	(758, '2018-01-07', 425, 0, NULL),
	(759, '2018-01-07', 424, 0, NULL),
	(760, '2018-01-07', 423, 0, NULL),
	(761, '2018-01-07', 422, 0, NULL),
	(762, '2018-01-07', 421, 0, NULL),
	(763, '2018-01-07', 420, 0, NULL),
	(764, '2018-01-07', 419, 0, NULL),
	(765, '2018-01-07', 418, 0, NULL),
	(766, '2018-01-07', 417, 0, NULL),
	(767, '2018-01-07', 416, 0, NULL),
	(768, '2018-01-07', 415, 0, NULL),
	(769, '2018-01-07', 414, 0, NULL),
	(770, '2018-01-07', 413, 0, NULL),
	(771, '2018-01-07', 412, 0, NULL),
	(772, '2018-01-07', 411, 0, NULL),
	(773, '2018-01-07', 410, 0, NULL),
	(774, '2018-01-07', 409, 0, NULL),
	(775, '2018-01-07', 408, 0, NULL),
	(776, '2018-01-07', 407, 0, NULL),
	(777, '2018-01-07', 406, 0, NULL),
	(778, '2018-01-07', 405, 0, NULL),
	(779, '2018-01-07', 404, 0, NULL),
	(780, '2018-01-07', 403, 0, NULL),
	(781, '2018-01-07', 402, 0, NULL),
	(782, '2018-01-07', 401, 0, NULL),
	(783, '2018-01-07', 400, 0, NULL),
	(784, '2018-01-07', 399, 0, NULL),
	(785, '2018-01-07', 398, 0, NULL),
	(786, '2018-01-07', 397, 0, NULL),
	(787, '2018-01-07', 396, 0, NULL),
	(788, '2018-01-07', 395, 0, NULL),
	(789, '2018-01-07', 394, 0, NULL),
	(790, '2018-01-07', 393, 0, NULL),
	(791, '2018-01-07', 392, 0, NULL),
	(792, '2018-01-07', 391, 0, NULL),
	(793, '2018-01-07', 390, 0, NULL),
	(794, '2018-01-07', 389, 0, NULL),
	(795, '2018-01-07', 388, 0, NULL),
	(796, '2018-01-07', 387, 0, NULL),
	(797, '2018-01-07', 386, 0, NULL),
	(798, '2018-01-07', 385, 0, NULL),
	(799, '2018-01-07', 384, 0, NULL),
	(800, '2018-01-07', 383, 0, NULL),
	(801, '2018-01-07', 382, 0, NULL),
	(802, '2018-01-07', 381, 0, NULL),
	(803, '2018-01-07', 380, 0, NULL),
	(804, '2018-01-07', 379, 0, NULL),
	(805, '2018-01-07', 378, 0, NULL),
	(806, '2018-01-07', 377, 0, NULL),
	(807, '2018-01-07', 376, 0, NULL),
	(808, '2018-01-07', 375, 0, NULL),
	(809, '2018-01-07', 374, 0, NULL),
	(810, '2018-01-07', 373, 0, NULL),
	(811, '2018-01-07', 372, 0, NULL),
	(812, '2018-01-07', 371, 0, NULL),
	(813, '2018-01-07', 370, 0, NULL),
	(814, '2018-01-07', 369, 0, NULL),
	(815, '2018-01-07', 368, 0, NULL),
	(816, '2018-01-07', 367, 0, NULL),
	(817, '2018-01-07', 366, 0, NULL),
	(818, '2018-01-07', 365, 0, NULL),
	(819, '2018-01-07', 364, 0, NULL),
	(820, '2018-01-07', 363, 0, NULL),
	(821, '2018-01-07', 362, 0, NULL),
	(822, '2018-01-07', 361, 0, NULL),
	(823, '2018-01-07', 360, 0, NULL),
	(824, '2018-01-07', 359, 0, NULL),
	(825, '2018-01-07', 358, 0, NULL),
	(826, '2018-01-07', 357, 0, NULL),
	(827, '2018-01-07', 356, 0, NULL),
	(828, '2018-01-07', 355, 0, NULL),
	(829, '2018-01-07', 354, 0, NULL),
	(830, '2018-01-07', 353, 0, NULL),
	(831, '2018-01-07', 352, 0, NULL),
	(832, '2018-01-07', 351, 0, NULL),
	(833, '2018-01-07', 350, 0, NULL),
	(834, '2018-01-07', 349, 0, NULL),
	(835, '2018-01-07', 348, 0, NULL),
	(836, '2018-01-07', 347, 0, NULL),
	(837, '2018-01-07', 346, 0, NULL),
	(838, '2018-01-07', 345, 0, NULL),
	(839, '2018-01-07', 344, 0, NULL),
	(840, '2018-01-07', 343, 0, NULL),
	(841, '2018-01-07', 342, 0, NULL),
	(842, '2018-01-07', 341, 0, NULL),
	(843, '2018-01-07', 340, 0, NULL),
	(844, '2018-01-07', 339, 0, NULL),
	(845, '2018-01-07', 338, 0, NULL),
	(846, '2018-01-07', 337, 0, NULL),
	(847, '2018-01-07', 336, 0, NULL),
	(848, '2018-01-07', 335, 0, NULL),
	(849, '2018-01-07', 334, 0, NULL),
	(850, '2018-01-07', 333, 0, NULL),
	(851, '2018-01-07', 332, 0, NULL),
	(852, '2018-01-07', 331, 0, NULL),
	(853, '2018-01-07', 330, 0, NULL),
	(854, '2018-01-07', 329, 0, NULL),
	(855, '2018-01-07', 328, 0, NULL),
	(856, '2018-01-07', 327, 0, NULL),
	(857, '2018-01-07', 326, 0, NULL),
	(858, '2018-01-07', 325, 0, NULL),
	(859, '2018-01-07', 324, 0, NULL),
	(860, '2018-01-07', 323, 0, NULL),
	(861, '2018-01-07', 322, 0, NULL),
	(862, '2018-01-07', 321, 0, NULL),
	(863, '2018-01-07', 320, 0, NULL),
	(864, '2018-01-07', 319, 0, NULL),
	(865, '2018-01-07', 318, 0, NULL),
	(866, '2018-01-07', 317, 0, NULL),
	(867, '2018-01-07', 316, 0, NULL),
	(868, '2018-01-07', 315, 0, NULL),
	(869, '2018-01-07', 314, 0, NULL),
	(870, '2018-01-07', 313, 0, NULL),
	(871, '2018-01-07', 312, 0, NULL),
	(872, '2018-01-07', 311, 0, NULL),
	(873, '2018-01-07', 310, 0, NULL),
	(874, '2018-01-07', 309, 0, NULL),
	(875, '2018-01-07', 308, 0, NULL),
	(876, '2018-01-07', 307, 0, NULL),
	(877, '2018-01-07', 306, 0, NULL),
	(878, '2018-01-07', 305, 0, NULL),
	(879, '2018-01-07', 304, 0, NULL),
	(880, '2018-01-07', 303, 0, NULL),
	(881, '2018-01-07', 302, 0, NULL),
	(882, '2018-01-07', 301, 0, NULL),
	(883, '2018-01-07', 300, 0, NULL),
	(884, '2018-01-07', 299, 0, NULL),
	(885, '2018-01-07', 298, 0, NULL),
	(886, '2018-01-07', 297, 0, NULL),
	(887, '2018-01-07', 296, 0, NULL),
	(888, '2018-01-07', 295, 0, NULL),
	(889, '2018-01-07', 294, 0, NULL),
	(890, '2018-01-07', 293, 0, NULL),
	(891, '2018-01-07', 292, 0, NULL),
	(892, '2018-01-07', 291, 0, NULL),
	(893, '2018-01-07', 290, 0, NULL),
	(894, '2018-01-07', 289, 0, NULL),
	(895, '2018-01-07', 288, 0, NULL),
	(896, '2018-01-07', 287, 0, NULL),
	(897, '2018-01-07', 286, 0, NULL),
	(898, '2018-01-07', 285, 0, NULL),
	(899, '2018-01-07', 284, 0, NULL),
	(900, '2018-01-07', 283, 0, NULL),
	(901, '2018-01-07', 282, 0, NULL),
	(902, '2018-01-07', 281, 0, NULL),
	(903, '2018-01-07', 280, 0, NULL),
	(904, '2018-01-07', 279, 0, NULL),
	(905, '2018-01-07', 278, 0, NULL),
	(906, '2018-01-07', 277, 0, NULL),
	(907, '2018-01-07', 276, 0, NULL),
	(908, '2018-01-07', 275, 0, NULL),
	(909, '2018-01-07', 274, 0, NULL),
	(910, '2018-01-07', 273, 0, NULL),
	(911, '2018-01-07', 272, 0, NULL),
	(912, '2018-01-07', 271, 0, NULL),
	(913, '2018-01-07', 270, 0, NULL),
	(914, '2018-01-07', 269, 0, NULL),
	(915, '2018-01-07', 268, 0, NULL),
	(916, '2018-01-07', 267, 0, NULL),
	(917, '2018-01-07', 266, 0, NULL),
	(918, '2018-01-07', 265, 0, NULL),
	(919, '2018-01-07', 264, 0, NULL),
	(920, '2018-01-07', 263, 0, NULL),
	(921, '2018-01-07', 262, 0, NULL),
	(922, '2018-01-07', 261, 0, NULL),
	(923, '2018-01-07', 260, 0, NULL),
	(924, '2018-01-07', 259, 0, NULL),
	(925, '2018-01-07', 258, 0, NULL),
	(926, '2018-01-07', 257, 0, NULL),
	(927, '2018-01-07', 256, 0, NULL),
	(928, '2018-01-07', 255, 0, NULL),
	(929, '2018-01-07', 254, 0, NULL),
	(930, '2018-01-07', 253, 0, NULL),
	(931, '2018-01-07', 252, 0, NULL),
	(932, '2018-01-07', 251, 0, NULL),
	(933, '2018-01-07', 250, 0, NULL),
	(934, '2018-01-07', 249, 0, NULL),
	(935, '2018-01-07', 248, 0, NULL),
	(936, '2018-01-07', 247, 0, NULL),
	(937, '2018-01-07', 246, 0, NULL),
	(938, '2018-01-07', 245, 0, NULL),
	(939, '2018-01-07', 244, 0, NULL),
	(940, '2018-01-07', 243, 0, NULL),
	(941, '2018-01-07', 242, 0, NULL),
	(942, '2018-01-07', 241, 0, NULL),
	(943, '2018-01-07', 240, 0, NULL),
	(944, '2018-01-07', 239, 0, NULL),
	(945, '2018-01-07', 238, 0, NULL),
	(946, '2018-01-07', 237, 0, NULL),
	(947, '2018-01-07', 236, 0, NULL),
	(948, '2018-01-07', 235, 0, NULL),
	(949, '2018-01-07', 234, 0, NULL),
	(950, '2018-01-07', 233, 0, NULL),
	(951, '2018-01-07', 232, 0, NULL),
	(952, '2018-01-07', 231, 0, NULL),
	(953, '2018-01-07', 230, 0, NULL),
	(954, '2018-01-07', 229, 0, NULL),
	(955, '2018-01-07', 228, 0, NULL),
	(956, '2018-01-07', 227, 0, NULL),
	(957, '2018-01-07', 226, 0, NULL),
	(958, '2018-01-07', 225, 0, NULL),
	(959, '2018-01-07', 224, 0, NULL),
	(960, '2018-01-07', 223, 0, NULL),
	(961, '2018-01-07', 222, 0, NULL),
	(962, '2018-01-07', 221, 0, NULL),
	(963, '2018-01-07', 220, 0, NULL),
	(964, '2018-01-07', 219, 0, NULL),
	(965, '2018-01-07', 218, 0, NULL),
	(966, '2018-01-07', 217, 0, NULL),
	(967, '2018-01-07', 216, 0, NULL),
	(968, '2018-01-07', 215, 0, NULL),
	(969, '2018-01-07', 214, 0, NULL),
	(970, '2018-01-07', 213, 0, NULL),
	(971, '2018-01-07', 212, 0, NULL),
	(972, '2018-01-07', 211, 0, NULL),
	(973, '2018-01-07', 210, 0, NULL),
	(974, '2018-01-07', 209, 0, NULL),
	(975, '2018-01-07', 208, 0, NULL),
	(976, '2018-01-07', 207, 0, NULL),
	(977, '2018-01-07', 206, 0, NULL),
	(978, '2018-01-07', 205, 0, NULL),
	(979, '2018-01-07', 204, 0, NULL),
	(980, '2018-01-07', 203, 0, NULL),
	(981, '2018-01-07', 202, 0, NULL),
	(982, '2018-01-07', 201, 0, NULL),
	(983, '2018-01-07', 200, 0, NULL),
	(984, '2018-01-07', 199, 0, NULL),
	(985, '2018-01-07', 198, 0, NULL),
	(986, '2018-01-07', 197, 0, NULL),
	(987, '2018-01-07', 196, 0, NULL),
	(988, '2018-01-07', 195, 0, NULL),
	(989, '2018-01-07', 194, 0, NULL),
	(990, '2018-01-07', 193, 0, NULL),
	(991, '2018-01-07', 192, 0, NULL),
	(992, '2018-01-07', 191, 0, NULL),
	(993, '2018-01-07', 190, 0, NULL),
	(994, '2018-01-07', 189, 0, NULL),
	(995, '2018-01-07', 188, 0, NULL),
	(996, '2018-01-07', 187, 0, NULL),
	(997, '2018-01-07', 186, 0, NULL),
	(998, '2018-01-07', 185, 0, NULL),
	(999, '2018-01-07', 184, 0, NULL),
	(1000, '2018-01-07', 183, 0, NULL),
	(1001, '2018-01-07', 182, 0, NULL),
	(1002, '2018-01-07', 181, 0, NULL),
	(1003, '2018-01-07', 180, 0, NULL),
	(1004, '2018-01-07', 179, 0, NULL),
	(1005, '2018-01-07', 178, 0, NULL),
	(1006, '2018-01-07', 177, 0, NULL),
	(1007, '2018-01-07', 176, 0, NULL),
	(1008, '2018-01-07', 175, 0, NULL),
	(1009, '2018-01-07', 174, 0, NULL),
	(1010, '2018-01-07', 173, 0, NULL),
	(1011, '2018-01-07', 172, 0, NULL),
	(1012, '2018-01-07', 171, 0, NULL),
	(1013, '2018-01-07', 170, 0, NULL),
	(1014, '2018-01-07', 169, 0, NULL),
	(1015, '2018-01-07', 168, 0, NULL),
	(1016, '2018-01-07', 167, 0, NULL),
	(1017, '2018-01-07', 166, 0, NULL),
	(1018, '2018-01-07', 165, 0, NULL),
	(1019, '2018-01-07', 164, 0, NULL),
	(1020, '2018-01-07', 163, 0, NULL),
	(1021, '2018-01-07', 162, 0, NULL),
	(1022, '2018-01-07', 161, 0, NULL),
	(1023, '2018-01-07', 160, 0, NULL),
	(1024, '2018-01-07', 159, 0, NULL),
	(1025, '2018-01-07', 158, 0, NULL),
	(1026, '2018-01-07', 157, 0, NULL),
	(1027, '2018-01-07', 156, 0, NULL),
	(1028, '2018-01-07', 155, 0, NULL),
	(1029, '2018-01-07', 154, 0, NULL),
	(1030, '2018-01-07', 153, 0, NULL),
	(1031, '2018-01-07', 152, 0, NULL),
	(1032, '2018-01-07', 151, 0, NULL),
	(1033, '2018-01-07', 150, 0, NULL),
	(1034, '2018-01-07', 149, 0, NULL),
	(1035, '2018-01-07', 148, 0, NULL),
	(1036, '2018-01-07', 147, 0, NULL),
	(1037, '2018-01-07', 146, 0, NULL),
	(1038, '2018-01-07', 145, 0, NULL),
	(1039, '2018-01-07', 144, 0, NULL),
	(1040, '2018-01-07', 143, 0, NULL),
	(1041, '2018-01-07', 142, 0, NULL),
	(1042, '2018-01-07', 141, 0, NULL),
	(1043, '2018-01-07', 140, 0, NULL),
	(1044, '2018-01-07', 139, 0, NULL),
	(1045, '2018-01-07', 138, 0, NULL),
	(1046, '2018-01-07', 137, 0, NULL),
	(1047, '2018-01-07', 136, 0, NULL),
	(1048, '2018-01-07', 135, 0, NULL),
	(1049, '2018-01-07', 134, 0, NULL),
	(1050, '2018-01-07', 133, 0, NULL),
	(1051, '2018-01-07', 132, 0, NULL),
	(1052, '2018-01-07', 131, 0, NULL),
	(1053, '2018-01-07', 130, 0, NULL),
	(1054, '2018-01-07', 129, 0, NULL),
	(1055, '2018-01-07', 128, 0, NULL),
	(1056, '2018-01-07', 127, 0, NULL),
	(1057, '2018-01-07', 126, 0, NULL),
	(1058, '2018-01-07', 125, 0, NULL),
	(1059, '2018-01-07', 124, 0, NULL),
	(1060, '2018-01-07', 123, 0, NULL),
	(1061, '2018-01-07', 122, 0, NULL),
	(1062, '2018-01-07', 121, 0, NULL),
	(1063, '2018-01-07', 120, 0, NULL),
	(1064, '2018-01-07', 119, 0, NULL),
	(1065, '2018-01-07', 118, 0, NULL),
	(1066, '2018-01-07', 117, 0, NULL),
	(1067, '2018-01-07', 116, 0, NULL),
	(1068, '2018-01-07', 115, 0, NULL),
	(1069, '2018-01-07', 114, 0, NULL),
	(1070, '2018-01-07', 113, 0, NULL),
	(1071, '2018-01-07', 112, 0, NULL),
	(1072, '2018-01-07', 111, 0, NULL),
	(1073, '2018-01-07', 110, 0, NULL),
	(1074, '2018-01-07', 109, 0, NULL),
	(1075, '2018-01-07', 108, 0, NULL),
	(1076, '2018-01-07', 107, 0, NULL),
	(1077, '2018-01-07', 106, 0, NULL),
	(1078, '2018-01-07', 105, 0, NULL),
	(1079, '2018-01-07', 104, 0, NULL),
	(1080, '2018-01-07', 103, 0, NULL),
	(1081, '2018-01-07', 102, 0, NULL),
	(1082, '2018-01-07', 101, 0, NULL),
	(1083, '2018-01-07', 100, 0, NULL),
	(1084, '2018-01-07', 99, 0, NULL),
	(1085, '2018-01-07', 98, 0, NULL),
	(1086, '2018-01-07', 97, 0, NULL),
	(1087, '2018-01-07', 96, 0, NULL),
	(1088, '2018-01-07', 95, 0, NULL),
	(1089, '2018-01-07', 94, 0, NULL),
	(1090, '2018-01-07', 93, 0, NULL),
	(1091, '2018-01-07', 92, 0, NULL),
	(1092, '2018-01-07', 91, 0, NULL),
	(1093, '2018-01-07', 90, 0, NULL),
	(1094, '2018-01-07', 89, 0, NULL),
	(1095, '2018-01-07', 88, 0, NULL),
	(1096, '2018-01-07', 87, 0, NULL),
	(1097, '2018-01-07', 86, 0, NULL),
	(1098, '2018-01-07', 85, 0, NULL),
	(1099, '2018-01-07', 84, 0, NULL),
	(1100, '2018-01-07', 83, 0, NULL),
	(1101, '2018-01-07', 82, 0, NULL),
	(1102, '2018-01-07', 81, 0, NULL),
	(1103, '2018-01-07', 80, 0, NULL),
	(1104, '2018-01-07', 79, 0, NULL),
	(1105, '2018-01-07', 78, 0, NULL),
	(1106, '2018-01-07', 77, 0, NULL),
	(1107, '2018-01-07', 76, 0, NULL),
	(1108, '2018-01-07', 75, 0, NULL),
	(1109, '2018-01-07', 74, 0, NULL),
	(1110, '2018-01-07', 73, 0, NULL),
	(1111, '2018-01-07', 72, 0, NULL),
	(1112, '2018-01-07', 71, 0, NULL),
	(1113, '2018-01-07', 70, 0, NULL),
	(1114, '2018-01-07', 69, 0, NULL),
	(1115, '2018-01-07', 68, 0, NULL),
	(1116, '2018-01-07', 67, 0, NULL),
	(1117, '2018-01-07', 66, 0, NULL),
	(1118, '2018-01-07', 65, 0, NULL),
	(1119, '2018-01-07', 64, 0, NULL),
	(1120, '2018-01-07', 63, 0, NULL),
	(1121, '2018-01-07', 62, 0, NULL),
	(1122, '2018-01-07', 61, 0, NULL),
	(1123, '2018-01-07', 60, 0, NULL),
	(1124, '2018-01-07', 59, 0, NULL),
	(1125, '2018-01-07', 58, 0, NULL),
	(1126, '2018-01-07', 57, 0, NULL),
	(1127, '2018-01-07', 56, 0, NULL),
	(1128, '2018-01-07', 55, 0, NULL),
	(1129, '2018-01-07', 54, 0, NULL),
	(1130, '2018-01-07', 53, 0, NULL),
	(1131, '2018-01-07', 52, 0, NULL),
	(1132, '2018-01-07', 51, 0, NULL),
	(1133, '2018-01-07', 50, 0, NULL),
	(1134, '2018-01-07', 49, 0, NULL),
	(1135, '2018-01-07', 48, 0, NULL),
	(1136, '2018-01-07', 47, 0, NULL),
	(1137, '2018-01-07', 46, 0, NULL),
	(1138, '2018-01-07', 45, 0, NULL),
	(1139, '2018-01-07', 44, 0, NULL),
	(1140, '2018-01-07', 43, 0, NULL),
	(1141, '2018-01-07', 42, 0, NULL),
	(1142, '2018-01-07', 41, 0, NULL),
	(1143, '2018-01-07', 40, 0, NULL),
	(1144, '2018-01-07', 39, 0, NULL),
	(1145, '2018-01-07', 38, 0, NULL),
	(1146, '2018-01-07', 37, 0, NULL),
	(1147, '2018-01-07', 36, 0, NULL),
	(1148, '2018-01-07', 35, 0, NULL),
	(1149, '2018-01-07', 34, 0, NULL),
	(1150, '2018-01-07', 33, 0, NULL),
	(1151, '2018-01-07', 32, 0, NULL),
	(1152, '2018-01-07', 31, 0, NULL),
	(1153, '2018-01-07', 30, 0, NULL),
	(1154, '2018-01-07', 29, 0, NULL),
	(1155, '2018-01-07', 28, 0, NULL),
	(1156, '2018-01-07', 27, 0, NULL),
	(1157, '2018-01-07', 26, 0, NULL),
	(1158, '2018-01-07', 25, 0, NULL),
	(1159, '2018-01-07', 24, 0, NULL),
	(1160, '2018-01-07', 23, 0, NULL),
	(1161, '2018-01-07', 22, 0, NULL),
	(1162, '2018-01-07', 21, 0, NULL),
	(1163, '2018-01-07', 20, 0, NULL),
	(1164, '2018-01-07', 19, 0, NULL),
	(1165, '2018-01-07', 18, 0, NULL),
	(1166, '2018-01-07', 17, 0, NULL),
	(1167, '2018-01-07', 16, 0, NULL),
	(1168, '2018-01-07', 15, 0, NULL),
	(1169, '2018-01-07', 14, 0, NULL),
	(1170, '2018-01-07', 13, 0, NULL),
	(1171, '2018-01-07', 12, 0, NULL),
	(1172, '2018-01-07', 11, 11, NULL),
	(1173, '2018-01-07', 10, 10, NULL),
	(1174, '2018-01-07', 9, 1, NULL),
	(1175, '2018-01-07', 8, 1, NULL),
	(1176, '2018-01-07', 7, 0, NULL),
	(1177, '2018-01-07', 6, 0, NULL),
	(1178, '2018-01-07', 5, 0, NULL),
	(1179, '2018-01-07', 4, 0, NULL),
	(1180, '2018-01-07', 3, 5, NULL);
/*!40000 ALTER TABLE `balancelist` ENABLE KEYS */;

-- Дамп структуры для представление sklad.balanceview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `balanceview` (
	`balanceId` INT(11) NOT NULL,
	`balanceDate` DATE NULL,
	`prodId` INT(11) NULL,
	`curEndCount` DOUBLE(17,0) NULL,
	`price` INT(11) NULL,
	`endCount` DOUBLE NULL,
	`productId` INT(11) NOT NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`measureId` INT(11) NULL,
	`barcode` VARCHAR(50) NULL COLLATE 'utf8_general_ci',
	`status` INT(11) NOT NULL,
	`pack` INT(11) NOT NULL
) ENGINE=MyISAM;

-- Дамп структуры для процедура sklad.calc
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `calc`(IN `id` INT, IN `t` VARCHAR(50), IN `cnt` FLOAT)
BEGIN

	DECLARE bCount FLOAT;

	IF (t = "plus") THEN
	
			SET bCount = prodBalance(id);
			UPDATE balance	SET endCount = (bCount + cnt) where balanceDate = '2000-01-01' and prodId = id;
	
	END IF;
	
	IF (t = "minus") THEN
	
			SET bCount = prodBalance(id);
			UPDATE balance	SET endCount = (bCount - cnt) where balanceDate = '2000-01-01' and prodId = id;
	
	END IF;

END//
DELIMITER ;

-- Дамп структуры для таблица sklad.changeprice
CREATE TABLE IF NOT EXISTS `changeprice` (
  `IDChangePrice` int(11) NOT NULL AUTO_INCREMENT,
  `IDFaktura` int(11) DEFAULT NULL,
  `DateChange` date DEFAULT NULL,
  `Price` int(11) DEFAULT NULL,
  `IDProduct` int(11) DEFAULT NULL,
  PRIMARY KEY (`IDChangePrice`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.changeprice: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `changeprice` DISABLE KEYS */;
/*!40000 ALTER TABLE `changeprice` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.changesel
CREATE TABLE IF NOT EXISTS `changesel` (
  `changSelId` int(11) NOT NULL AUTO_INCREMENT,
  `userId` int(11) DEFAULT NULL,
  `startTime` datetime DEFAULT NULL,
  `endTime` datetime DEFAULT NULL,
  `summ` int(11) DEFAULT NULL,
  `terminal` int(11) DEFAULT NULL,
  `debt` int(11) DEFAULT NULL,
  `back` int(11) DEFAULT NULL,
  `expenseId` int(11) DEFAULT '0',
  PRIMARY KEY (`changSelId`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.changesel: ~2 rows (приблизительно)
/*!40000 ALTER TABLE `changesel` DISABLE KEYS */;
INSERT INTO `changesel` (`changSelId`, `userId`, `startTime`, `endTime`, `summ`, `terminal`, `debt`, `back`, `expenseId`) VALUES
	(1, 1, '2017-12-26 12:48:54', NULL, NULL, NULL, NULL, NULL, 0),
	(2, 6, '2017-12-28 18:33:16', NULL, NULL, NULL, NULL, NULL, 0);
/*!40000 ALTER TABLE `changesel` ENABLE KEYS */;

-- Дамп структуры для функция sklad.checkRealize
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `checkRealize`(`id` INT, `bCount` FLOAT) RETURNS int(11)
    DETERMINISTIC
    COMMENT 'Проверка цены продукта по фактурам'
BEGIN

	DECLARE rCount INT DEFAULT(0);
	DECLARE i Int;
	DECLARE price Int;
	DECLARE facId Int DEFAULT(0);
	
	SET i = (select count(*) from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = id);
	
	myloop: WHILE i > 0 DO
		IF(facId = 0) THEN 
			SET rCount = rCount + (select r.count from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = id order by f.fakturaDate DESC limit 1);
			SET facId = (select f.fakturaId from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = id order by f.fakturaDate DESC limit 1);
			SET price = (select r.soldPrice from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = id order by f.fakturaDate DESC limit 1);
		ELSE
			SET rCount = rCount + (select r.count from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = id AND f.fakturaId < facId order by f.fakturaDate DESC limit 1);
			SET price = (select r.soldPrice from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = id AND f.fakturaId < facId order by f.fakturaDate DESC limit 1);
			SET facId = (select f.fakturaId from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = id AND f.fakturaId < facId order by f.fakturaDate DESC limit 1);
		END IF;
		
		IF(bCount <= rCount) THEN 
			LEAVE myloop;
		END IF; 
		SET i=i-1;
   END WHILE;
	RETURN price;
END//
DELIMITER ;

-- Дамп структуры для таблица sklad.configs
CREATE TABLE IF NOT EXISTS `configs` (
  `configId` int(11) NOT NULL AUTO_INCREMENT,
  `configName` varchar(50) NOT NULL,
  `configValue` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`configId`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.configs: ~2 rows (приблизительно)
/*!40000 ALTER TABLE `configs` DISABLE KEYS */;
INSERT INTO `configs` (`configId`, `configName`, `configValue`) VALUES
	(1, 'openday', '0'),
	(2, 'currentFaktura', '0');
/*!40000 ALTER TABLE `configs` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.contragent
CREATE TABLE IF NOT EXISTS `contragent` (
  `contragentId` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `phone` varchar(50) DEFAULT NULL,
  `address` varchar(250) DEFAULT NULL,
  `bankAccount` varchar(50) DEFAULT NULL,
  `person` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`contragentId`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.contragent: ~1 rows (приблизительно)
/*!40000 ALTER TABLE `contragent` DISABLE KEYS */;
INSERT INTO `contragent` (`contragentId`, `name`, `phone`, `address`, `bankAccount`, `person`) VALUES
	(1, 'Diler1', ' (  )     ', '', '', 'Azizbek Vakhidov');
/*!40000 ALTER TABLE `contragent` ENABLE KEYS */;

-- Дамп структуры для представление sklad.curbalance
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `curbalance` (
	`prodId` INT(11) NULL,
	`curEndCount` DOUBLE NULL,
	`endCount` VARCHAR(41) NULL COLLATE 'utf8mb4_general_ci',
	`productId` INT(11) NOT NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`measureId` INT(11) NULL,
	`barcode` VARCHAR(50) NULL COLLATE 'utf8_general_ci',
	`status` INT(11) NOT NULL,
	`price` INT(11) NULL,
	`pack` INT(11) NOT NULL
) ENGINE=MyISAM;

-- Дамп структуры для таблица sklad.debt
CREATE TABLE IF NOT EXISTS `debt` (
  `debtId` int(11) NOT NULL AUTO_INCREMENT,
  `expenseId` int(11) NOT NULL,
  `payDate` date DEFAULT NULL,
  `summ` int(11) DEFAULT NULL,
  `terminal` int(11) DEFAULT NULL,
  `transfer` int(11) DEFAULT NULL,
  `cash` int(11) DEFAULT NULL,
  `IsPaid` int(11) DEFAULT NULL,
  `comment` varchar(300) DEFAULT NULL,
  PRIMARY KEY (`debtId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.debt: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `debt` DISABLE KEYS */;
/*!40000 ALTER TABLE `debt` ENABLE KEYS */;

-- Дамп структуры для представление sklad.debtview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `debtview` (
	`expenseDate` DATETIME NULL,
	`comment` VARCHAR(100) NOT NULL COLLATE 'utf8_general_ci',
	`expSum` INT(11) NULL
) ENGINE=MyISAM;

-- Дамп структуры для таблица sklad.expense
CREATE TABLE IF NOT EXISTS `expense` (
  `expenseId` int(11) NOT NULL AUTO_INCREMENT,
  `expenseDate` datetime DEFAULT NULL,
  `debt` int(11) NOT NULL,
  `comment` varchar(100) NOT NULL,
  `contragentId` int(11) DEFAULT NULL,
  `off` int(11) NOT NULL,
  `expType` int(11) DEFAULT NULL,
  `transfer` int(11) DEFAULT '0',
  `inCash` int(11) DEFAULT '0',
  `terminal` int(11) DEFAULT '0',
  `expSum` int(11) DEFAULT NULL,
  `status` int(11) NOT NULL,
  `userID` int(11) DEFAULT NULL,
  PRIMARY KEY (`expenseId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.expense: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `expense` DISABLE KEYS */;
/*!40000 ALTER TABLE `expense` ENABLE KEYS */;

-- Дамп структуры для процедура sklad.ExpenseTrigger
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `ExpenseTrigger`(IN `id` INT)
    COMMENT 'Процедура при оплате счета'
BEGIN

  	DECLARE done INT DEFAULT 0;
	DECLARE bCount float;
	DECLARE orderCount float;
	DECLARE prodsID int;
	DECLARE expeSum float;
	DECLARE termSum float ;
	DECLARE cur1 CURSOR FOR SELECT o.prodId,o.packCount FROM orders o where o.expenseId = id;
	DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
	
	OPEN cur1;
		REPEAT
			FETCH cur1 INTO prodsID, orderCount;
			IF NOT done THEN
				SET bCount = prodBalance(prodsID);
				UPDATE balance	SET endCount = (bCount - orderCount) where prodId = prodsID;
			END IF;
		UNTIL done END REPEAT;
	CLOSE cur1;
	
	SET expeSum = (SELECT ex.expSum FROM expense ex where ex.expenseId = id);
	SET termSum = (SELECT ex.terminal FROM expense ex where ex.expenseId = id);
	
	UPDATE info SET proceed = (proceed + expeSum), nal = (nal + (expeSum - termSum)), terminal = (terminal + termSum) where Dates = date(now());
		
END//
DELIMITER ;

-- Дамп структуры для представление sklad.expenseview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `expenseview` (
	`expenseDate` DATE NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`pack` INT(11) NOT NULL,
	`count` DOUBLE NULL,
	`measureId` INT(11) NULL
) ENGINE=MyISAM;

-- Дамп структуры для таблица sklad.faktura
CREATE TABLE IF NOT EXISTS `faktura` (
  `fakturaId` int(11) NOT NULL AUTO_INCREMENT,
  `fakturaDate` datetime DEFAULT NULL,
  `userId` int(11) DEFAULT NULL,
  `orgId` int(11) DEFAULT NULL,
  `providerId` int(11) DEFAULT NULL,
  `isClosed` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`fakturaId`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.faktura: ~1 rows (приблизительно)
/*!40000 ALTER TABLE `faktura` DISABLE KEYS */;
INSERT INTO `faktura` (`fakturaId`, `fakturaDate`, `userId`, `orgId`, `providerId`, `isClosed`) VALUES
	(1, '2017-12-28 10:17:06', NULL, NULL, 1, 0);
/*!40000 ALTER TABLE `faktura` ENABLE KEYS */;

-- Дамп структуры для процедура sklad.FakturaTrigger
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `FakturaTrigger`(IN `id` INT)
    COMMENT 'Процедура при оплате счета'
BEGIN

	/*DECLARE done INT DEFAULT 0;
	DECLARE bCount float;
	DECLARE realizeCount float;
	DECLARE prodsID int;
	DECLARE cur1 CURSOR FOR SELECT r.prodId,r.count FROM realize r where r.fakturaId = id;
	DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
	
	OPEN cur1;
	
	REPEAT
		FETCH cur1 INTO prodsID, realizeCount;
		IF NOT done THEN
			SET bCount = prodBalance(prodsID);
			UPDATE balance	SET endCount = (bCount + realizeCount) where balanceDate=date(now()) and prodId = prodsID;
		END IF;
	UNTIL done END REPEAT;
	
	CLOSE cur1;
*/
END//
DELIMITER ;

-- Дамп структуры для функция sklad.getPrice
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `getPrice`(`id` INT) RETURNS float
    DETERMINISTIC
    COMMENT 'Получение цены продукта на основе остатка продукта'
BEGIN
	
	DECLARE lastDate Date;
	DECLARE prodPrice Float;
	#SET LastDate = (select balanceDate from balance order by balanceDate DESC limit 1);
/*	IF workMode = 0 THEN 
		SET lastDate = (select balanceDate from balanceList where prodId = id group by balanceDate order by balanceDate desc limit 1);
		IF lastDate is not null THEN 
			SET prodPrice = checkRealize(id, prodBalance(id));
		ELSE */
			SET prodPrice = (select price from product where productId = id limit 1);
/*		END IF;
	ELSEIF workMode = 1 THEN
		SET prodPrice = (select price from product where productId = id limit 1);
	END IF;*/
	return prodPrice;
END//
DELIMITER ;

-- Дамп структуры для таблица sklad.hotkeys
CREATE TABLE IF NOT EXISTS `hotkeys` (
  `hotKeysId` int(11) NOT NULL AUTO_INCREMENT,
  `prodId` varchar(50) DEFAULT NULL,
  `btnId` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`hotKeysId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.hotkeys: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `hotkeys` DISABLE KEYS */;
/*!40000 ALTER TABLE `hotkeys` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.hotkeyslibra
CREATE TABLE IF NOT EXISTS `hotkeyslibra` (
  `hotKeysLibraId` int(11) NOT NULL AUTO_INCREMENT,
  `prodLibraId` varchar(50) DEFAULT NULL,
  `btnLibraId` varchar(50) DEFAULT NULL,
  `libraId` int(11) DEFAULT NULL,
  PRIMARY KEY (`hotKeysLibraId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.hotkeyslibra: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `hotkeyslibra` DISABLE KEYS */;
/*!40000 ALTER TABLE `hotkeyslibra` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.info
CREATE TABLE IF NOT EXISTS `info` (
  `infoId` int(11) NOT NULL AUTO_INCREMENT,
  `Dates` date DEFAULT NULL,
  `proceed` int(11) DEFAULT NULL,
  `nal` int(11) DEFAULT NULL,
  `back` int(11) DEFAULT NULL,
  `terminal` int(11) DEFAULT NULL,
  `userId` int(11) DEFAULT '0',
  PRIMARY KEY (`infoId`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.info: ~6 rows (приблизительно)
/*!40000 ALTER TABLE `info` DISABLE KEYS */;
INSERT INTO `info` (`infoId`, `Dates`, `proceed`, `nal`, `back`, `terminal`, `userId`) VALUES
	(1, '2017-12-26', 0, 0, 0, 0, 0),
	(2, '2017-12-26', 0, 0, 0, 0, 0),
	(3, '2017-12-27', 0, 0, 0, 0, 0),
	(4, '2017-12-28', 0, 0, 0, 0, 0),
	(5, '2017-12-28', 0, 0, 0, 0, 0),
	(6, '2018-01-07', 0, 0, 0, 0, 0);
/*!40000 ALTER TABLE `info` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.libra
CREATE TABLE IF NOT EXISTS `libra` (
  `libraId` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `ipAddress` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`libraId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.libra: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `libra` DISABLE KEYS */;
/*!40000 ALTER TABLE `libra` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.measure
CREATE TABLE IF NOT EXISTS `measure` (
  `measureId` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL,
  `type` int(11) NOT NULL,
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`measureId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.measure: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `measure` DISABLE KEYS */;
/*!40000 ALTER TABLE `measure` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.orders
CREATE TABLE IF NOT EXISTS `orders` (
  `orderId` int(11) NOT NULL AUTO_INCREMENT,
  `expenseId` int(11) NOT NULL,
  `prodId` int(11) NOT NULL,
  `count` float NOT NULL,
  `packCount` float DEFAULT NULL,
  `orderSumm` float DEFAULT NULL,
  PRIMARY KEY (`orderId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.orders: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `orders` DISABLE KEYS */;
/*!40000 ALTER TABLE `orders` ENABLE KEYS */;

-- Дамп структуры для представление sklad.ordersview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `ordersview` (
	`expenseId` INT(11) NOT NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`expenseDate` DATETIME NULL,
	`cnt` FLOAT NULL,
	`orderSumm` FLOAT NULL
) ENGINE=MyISAM;

-- Дамп структуры для функция sklad.prodBalance
DELIMITER //
CREATE DEFINER=`root`@`localhost` FUNCTION `prodBalance`(`id` INT) RETURNS float
    DETERMINISTIC
    COMMENT 'Высчитывание текущего остатка продукта'
BEGIN
	DECLARE prodID INT;
	DECLARE eCount FLOAT;
	DECLARE cEndCount FLOAT;
	DECLARE realizes INT;
	DECLARE i INT;
	DECLARE checks date;
	DECLARE LastDate date;
	DECLARE back INT;
	DECLARE bCnt int DEFAULT(0);
	DECLARE result float DEFAULT(null);
	DECLARE cDate date DEFAULT(date(now()));
	
	SET i = (select productId from product order by productId DESC limit 1);
	SET checks = (select balanceDate from balanceList where balanceDate = date(now()) limit 1);
	SET LastDate = (select balanceDate from balanceList order by balanceDate DESC limit 1);
	SET BCnt = (select count(*) from balanceList );
	
	IF id = 0 THEN
		IF (bCnt != 0) THEN
			IF (LastDate < cDAte ) THEN
		
				WHILE i > 0 DO
				
					SET prodID = (select productId from product where productId = i);
					IF(prodID is not NULL) THEN
						
						# Начальный остаток продукта
						#SET cEndCount = (select b.curEndCount from balance b where b.prodId = prodID and b.balanceDate = LastDate order by balanceDate DESC limit 1);
						#IF(cEndCount is NULL) THEN		
							SET eCount = (select b.endCount from balance b where b.prodId = i and b.balanceDate = '2000-01-01' limit 1);
						#ELSE		
						#	SET eCount = cEndCount;
						#END IF;
						
						# Insert в таблицу баланс
						insert into balanceList (`balanceDate`,`prodId`,`endCount`) values(date(now()),prodID,eCount);
						IF eCount <= 0 THEN
							update product set expiry = null where expiry < CONCAT(CONCAT(year(now()) ,'-',month(now())),'-','01') and productId = prodID;
						END IF;
					END IF;
					
					SET i=i-1;
				END WHILE;
				insert into info (`Dates`,`proceed`,`nal`,`back`,`terminal`) values(date(now()),0,0,0,0);
			END IF;
		ELSE
				WHILE i > 0 DO
				
					SET prodID = (select productId from product where productId = i);
					IF(prodID is not NULL) THEN
					
						#Приход продукта
						SET eCount = (select sum(r.count) from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = prodID and date(f.fakturaDate) = date(now()) limit 1);
						IF (eCOunt is null) THEN 
							SET eCount = 0;
						END IF;
					
						# Insert в таблицу баланс
						insert into balanceList (`balanceDate`,`prodId`,`endCount`) values(date(now()),prodID,eCount);
						insert into balance (`balanceDate`,`prodId`,`endCount`) values('2000-01-01',prodID,eCount);
						
					END IF;
					
					SET i=i-1;
			   END WHILE;
				insert into info (`Dates`,`proceed`,`nal`,`back`,`terminal`) values(date(now()),0,0,0,0);			
		END IF;	 
	END IF;
	IF ( LastDate > cDAte ) THEN
		SET result = 0;
	ELSE
		SET result = (select b.endCount from balance b where b.balanceDate = '2000-01-01' and b.prodId = id limit 1);
	END IF;
	return result;
		
END//
DELIMITER ;

-- Дамп структуры для процедура sklad.ProdBalanceFrom
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `ProdBalanceFrom`(IN `id` INT, IN `bDate` DATE)
BEGIN
DECLARE prodID INT;
	DECLARE eCount float;
	DECLARE eCountTemp float;
	DECLARE cEndCount float;
	Declare isBegin Tinyint;
	DECLARE realizes INT;
	DECLARE i INT;
	DECLARE BeforeDate date;
	DECLARE LastDate date;
	DECLARE tDate date;
	DECLARE back INT;
	DECLARE bCnt int DEFAULT(0);
	DECLARE result float DEFAULT(null);
	DECLARE cDate date DEFAULT(date(now()));

  SET eCountTemp = NULL;
	SET i = (select productId from product order by productId DESC limit 1);

	SET LastDate = bDate;
	SET BCnt = (select count(*) from balanceList );

	#Определение даты
  SET BeforeDate = (select balanceDate from balancelist where prodId = id order by balanceDate asc limit 1);
	#SET tDate = (select expenseDate from expense order by expenseDate asc limit 1);
 IF BeforeDate IS NULL THEN SET BeforeDate = bDate;  END IF;

  IF BeforeDate >= bDate THEN SET isBegin = 1;
	ELSE
		set isBegin = 0;

	END IF;
	IF id <> 0 THEN

				#WHILE i > 0 DO
				
				IF isBegin = 1 THEN
					SET prodID = (select productId from product where productId = id);
					IF(prodID is not NULL) THEN
					
						#Приход продукта
						SET eCount = (select sum(r.count) from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = prodID and date(f.fakturaDate) <= bDate limit 1);
						IF (eCOunt is null) THEN
							SET eCount = 0;
						END IF;
						
						#расход продукта
						SET eCountTemp = (select sum(o.packCount) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) <= bDate  and e.expType = 0  limit 1);
						IF (eCountTemp is null) THEN
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount - eCountTemp;
						
						#Возврат товара
						SET eCountTemp = (select sum(o.packCount) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) <= bDate  and e.expType = 1  limit 1);
						IF (eCountTemp is null) THEN
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount + eCountTemp;
						
						
						#Списание товара					
						SET eCountTemp = (select sum(o.packCount) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) <= bDate  and e.expType = 3  limit 1);
						IF (eCountTemp is null) THEN
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount - eCountTemp;
						
             delete from `balancelist` where `balancelist`.`prodId` = prodID and balanceDate =  adddate(bDate, 1);

						# Insert в таблицу баланс
						insert into balanceList (`balanceDate`,`prodId`,`endCount`) values(adddate(bDate, 1),prodID,eCount);
						#update into balance (`balanceDate`,`prodId`,`endCount`) values('2000-01-01',prodID,eCount);

					END IF;
				ELSE 
				SET BeforeDate = bDate - interval 1 DAY;
				

					SET prodID = (select productId from product where productId = id);
          SET BeforeDate = bDate - interval 1 DAY;
          SET tDate = NULL;
					WHILE tDate IS NULL DO

           SET tDate = (select balanceDate from balancelist as bl where bl.prodId = prodID and bl.balanceDate = BeforeDate);
						IF tDate IS NULL THEN
              SET BeforeDate = BeforeDate - interval 1 DAY;
            ELSE
              SET eCountTemp = (select endCount from balancelist as bl where bl.prodId = prodID and bl.balanceDate = BeforeDate);
              IF eCount IS NULL THEN SET eCountTemp = 0; END IF;
            END IF;
					END WHILE;
					
					IF prodID <> NULL THEN
					
						#Приход продукта
						SET eCount = (select sum(r.count) from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = prodID and date(f.fakturaDate) = bDate limit 1);
						IF (eCOunt is null) THEN 
							SET eCount = 0;
						END IF;
						SET eCount = eCountTemp + eCount;
						#расход продукта						
						SET eCountTemp = (select sum(r.count) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) = bDate  and e.expType = 0  limit 1);
						IF (eCountTemp is null) THEN 
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount - eCountTemp;
						
						#Возврат товара
						SET eCountTemp = (select sum(r.count) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) = bDate  and e.expType = 1  limit 1);
						IF (eCountTemp is null) THEN 
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount + eCountTemp;
						
						
						#Списание товара					
						SET eCountTemp = (select sum(r.count) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) = bDate  and e.expType = 3  limit 1);
						IF (eCountTemp is null) THEN 
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount - eCountTemp;

						# Insert в таблицу баланс
						insert into balanceList (`balanceDate`,`prodId`,`endCount`) values(bDate,prodID,eCount);
						insert into balance (`balanceDate`,`prodId`,`endCount`) values('2000-01-01',prodID,eCount);
				END IF;
				#	SET i=i-1;
			   #END WHILE;
				#insert into info (`Dates`,`proceed`,`nal`,`back`,`terminal`) values(bDate),0,0,0,0);			
		END IF;	 
	END IF;
	
	
END//
DELIMITER ;

-- Дамп структуры для таблица sklad.product
CREATE TABLE IF NOT EXISTS `product` (
  `productId` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) DEFAULT NULL,
  `measureId` int(11) DEFAULT NULL,
  `barcode` varchar(50) DEFAULT NULL,
  `status` int(11) NOT NULL,
  `price` int(11) DEFAULT NULL,
  `pack` int(11) NOT NULL,
  `BalanceT` int(11) DEFAULT NULL,
  `expiry` varchar(50) DEFAULT NULL,
  `providerId` int(11) DEFAULT NULL,
  PRIMARY KEY (`productId`)
) ENGINE=InnoDB AUTO_INCREMENT=593 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.product: ~549 rows (приблизительно)
/*!40000 ALTER TABLE `product` DISABLE KEYS */;
INSERT INTO `product` (`productId`, `name`, `measureId`, `barcode`, `status`, `price`, `pack`, `BalanceT`, `expiry`, `providerId`) VALUES
	(3, 'Фабрика красоты Вода мицелярная Увлажняющая 200мл', 2, '4810210002406', 0, 7500, 0, NULL, NULL, -1),
	(4, 'Фабрика красоты Демакияж для глаз и губ Мицелярный 150 мл', 2, '4810210002437', 0, 0, 0, NULL, NULL, 1),
	(5, 'Фабрика красоты Тоник Успокаивающий 200 мл', 2, '4810210002215', 0, 18500, 0, NULL, NULL, 1),
	(6, 'Фабрика красоты Молочко для снятия макияжа 200 мл', 2, '4810210002246', 0, 0, 0, NULL, NULL, -1),
	(7, 'Фабрика красоты Гель для умывания Очищающий', 2, '4810210002239', 0, 0, 0, NULL, NULL, 1),
	(8, 'Фабрика красоты Демакияж глуб и глаз Двухфазный 150 мл', 2, '4810210002338', 0, 3500, 0, NULL, NULL, 1),
	(9, 'Фабрика красоты Вода мицелярная Очищающая 200 мл', 2, '4810210002413', 0, 0, 0, NULL, NULL, 1),
	(10, 'Фабрика красоты Вода мицелярная Для сухой и чувствит. 200 мл', 2, '4810210002420', 0, 0, 0, NULL, NULL, -1),
	(11, 'Фабрика красоты Пилинг Очищающий  200 мл', 2, '4810210002253', 0, 9500, 0, NULL, NULL, 1),
	(12, 'SUN SCREEN  молочко после загара 190 мл', 2, '4811248007449', 0, 0, 0, NULL, NULL, 1),
	(13, 'SUN SCREEN Крем для загара 30 SPF 190 мл', 2, '4811248007418', 0, 0, 0, NULL, NULL, 1),
	(14, 'SUN SCREEN Гель после загара  с пантенолом 190 мл', 2, '4811248007432', 0, 0, 0, NULL, NULL, -1),
	(15, 'SUN SCREEN Крем для загара 15 SPF 190мл', 2, '4811248007401', 0, 0, 0, NULL, NULL, 1),
	(16, 'Фабрика красоты Маска плёночная " Восстановление" 75 мл', 2, '4810210002123', 0, 0, 0, NULL, NULL, 1),
	(17, 'Фабрика красоты Маска плёночная "Успокаивающая" 75 мл', 2, '4810210002147', 0, 0, 0, NULL, NULL, 1),
	(18, 'Фабрика красоты Маска плёночная "Тонизирующая" 75 мл', 2, '4810210002130', 0, 0, 0, NULL, NULL, 1),
	(19, 'Фабрика красоты Маска плёночная "Антивозрастная" 75 мл', 2, '4810210002154', 0, 0, 0, NULL, NULL, 1),
	(20, 'Фабрика красоты Маска плёночная "Очищающая" 75 мл', 2, '4810210002116', 0, 0, 0, NULL, NULL, 1),
	(21, 'Фито-комплекс Гель для деликатного очищения 190 мл', 2, '4811248006466', 0, 0, 0, NULL, NULL, 1),
	(22, 'Фито-комплекс Мицелярная вода для демакияжа 190 мл', 2, '4811248006459', 0, 0, 0, NULL, NULL, -1),
	(23, 'Фито-комплекс Тоник для жирной кожи 190 мл', 2, '4811248006442', 0, 0, 0, NULL, NULL, 1),
	(24, 'Фито-комплекс Тоник для сухой и чувствит. кожи 190 мл', 2, '4811248006435', 0, 0, 0, NULL, NULL, 1),
	(25, 'АЛОЭ-ВЕРА мицелярная вода 200 мл', 2, '4810210001713', 0, 0, 0, NULL, NULL, -1),
	(26, 'АЛОЭ-ВЕРА тоник для лица против чёрных точек 200 мл', 2, '4810210001737', 0, 0, 0, NULL, NULL, 1),
	(27, 'SUN OF LIFE Пенка для умывания Вишня со сливками 200 мл', 2, '4811248006121', 0, 0, 0, NULL, NULL, 1),
	(28, 'SUN OF LIFE Пенка для умывания Манго в йогурте 200 мл', 2, '4811248006145', 0, 0, 0, NULL, NULL, 1),
	(29, 'АЛОЭ-ВЕРА Молочко для лица 200 мл', 2, '4810210000426', 0, 0, 0, NULL, NULL, 1),
	(30, 'АЛОЭ-ВЕРА Скраб против чёрных точек 200 мл', 2, '4810210000068', 0, 0, 0, NULL, NULL, 1),
	(31, 'SUN OF LIFE Бальзам-мусс для тела Молоко и Мед 200 мл', 2, '4811248000426', 0, 0, 0, NULL, NULL, 1),
	(32, 'SUN OF LIFE Бальзам-мусс для тела Клубника со сливками 200 мл', 2, '4811248000143', 0, 0, 0, NULL, NULL, 1),
	(33, 'SUN OF LIFE Скраб для тела Кофе с лимоном 150 мл', 2, '4811248000440', 0, 0, 0, NULL, NULL, 1),
	(34, 'AROMA FANTASY Гель для душа Сочный гранат 300 мл', 2, '4811248006213', 0, 0, 0, NULL, NULL, 1),
	(35, 'AROMA FANTASY Гель для душа Медовая Груша 300 мл', 2, '4811248006206', 0, 0, 0, NULL, NULL, 1),
	(36, 'AROMA FANTASY Гель для душа Сладкий инжир 300 мл', 2, '4811248006220', 0, 0, 0, NULL, NULL, 1),
	(37, 'AROMA FANTASY Гель для душа Лайм-Малина 300 мл', 2, '4811248006244', 0, 0, 0, NULL, NULL, 1),
	(38, 'AROMA FANTASY Гель для душа Фруктоввый салат 300 мл', 2, '4811248006237', 0, 0, 0, NULL, NULL, 1),
	(39, 'GREEN STYLE Шампунь Бамбук-Апельсин 400 мл', 2, '4811248001867', 0, 0, 0, NULL, NULL, 1),
	(40, 'GREEN STYLE Шампунь Имбирь-Лайм 400 мл', 2, '4811248002000', 0, 0, 0, NULL, NULL, 1),
	(41, 'GREEN STYLE Шампунь ПАссифлора-Розмарин 400 мл', 2, '4811248001935', 0, 0, 0, NULL, NULL, 1),
	(42, 'GREEN STYLE Шампунь Мята-Ананас 400 мл', 2, '4811248001904', 0, 0, 0, NULL, NULL, 1),
	(43, 'GREEN STYLE Шампунь Авокадо-Алоэ 400 мл', 2, '4811248001973', 0, 0, 0, NULL, NULL, 1),
	(44, 'ORIENTAL TOUCH Шампунь Энергия Роста. 300 мл', 2, '4811248005971', 0, 0, 0, NULL, NULL, 1),
	(45, 'ORIENTAL TOUCH Шампунь Питание и восстан. 300 мл', 2, '4811248006008', 0, 0, 0, NULL, NULL, 1),
	(46, 'ORIENTAL TOUCH Шампунь Обьём и укрепление. 300 мл', 2, '4811248005988', 0, 0, 0, NULL, NULL, 1),
	(47, 'GENTLEMAN Шампунь против перхоти 300 мл', 2, '4811248006107', 0, 0, 0, NULL, NULL, -1),
	(48, 'GENTLEMAN Шампунь для всех типов волос 300 мл', 2, '4811248006091', 0, 0, 0, NULL, NULL, -1),
	(49, 'ORIENTAL TOUCH Бальзам Цвет и блеск 350 мл', 2, '4811248006022', 0, 0, 0, NULL, NULL, 1),
	(50, 'GREEN STYLE Маска-уход Бамбук-Апельсин 300 мл', 2, '4811248001898', 0, 0, 0, NULL, NULL, 1),
	(51, 'GREEN STYLE Маска-уход Пассифлора-Розмарин 300 мл', 2, '4811248001966', 0, 0, 0, NULL, NULL, 1),
	(52, 'CLASSIC BEAUTY Бальзам-интенсив 250 мл', 2, '4811248005766', 0, 0, 0, NULL, NULL, -1),
	(53, 'GREEN STYLE Бальзам-кондиционер Имбирь-лайм 200 мл', 2, '4811248002345', 0, 0, 0, NULL, NULL, 1),
	(54, 'GREEN STYLE Бальзам-кондиционер Бамбук-апельсин 200 мл', 2, '4811248002352', 0, 0, 0, NULL, NULL, 1),
	(55, 'GREEN STYLE Бальзам-кондиционер Пассифлора-розмарин 200 мл', 2, '4811248002321', 0, 0, 0, NULL, NULL, 1),
	(56, 'GREEN STYLE Бальзам-кондиционер Мята-Ананас 200 мл', 2, '4811248002369', 0, 0, 0, NULL, NULL, 1),
	(57, 'GREEN STYLE Бальзам-кондиционер Авокадо_алоэ 200 мл', 2, '4811248002338', 0, 0, 0, NULL, NULL, 1),
	(58, 'FLEURS DE FRANCE Крем-масло для ног Роскошь Гиацинта 75 мл', 2, '4811248007371', 0, 0, 0, NULL, NULL, 1),
	(59, 'FLEURS DE FRANCE Гель для ног Нежность пиона 75 мл', 2, '4811248007395', 0, 0, 0, NULL, NULL, 1),
	(60, 'FLEURS DE FRANCE Крем для ног Бархат фиалки 75 мл', 2, '4811248007388', 0, 0, 0, NULL, NULL, 1),
	(61, 'КЛЕОПАТРА Маска плёночная Персиковая 125 мл', 2, '4810210000129', 0, 0, 0, NULL, NULL, 1),
	(62, 'КЛЕОПАТРА Маска плёночная Травяная 125 мл', 2, '4810210000136', 0, 0, 0, NULL, NULL, 1),
	(63, 'КЛЕОПАТРА Маска плёночная Апельсиновая 125 мл', 2, '4810210000082', 0, 0, 0, NULL, NULL, 1),
	(64, 'КЛЕОПАТРА Маска плёночная Кофейная 125 мл', 2, '4810210000099', 0, 0, 0, NULL, NULL, 1),
	(65, 'GENTLEMAN Шампунь охлаждающий 300 мл', 2, '4811248007487', 0, 0, 0, NULL, NULL, -1),
	(66, 'GENTLEMAN Шампунь-гель для душа 300 мл', 2, '4811248006114', 0, 0, 0, NULL, NULL, -1),
	(67, 'GENTLEMAN Гель для душа Охлаждающий 300 мл', 2, '4811248007494', 0, 0, 0, NULL, NULL, -1),
	(68, 'GENTLEMAN Гель для душа СИТИ 300 мл', 2, '4811248006077', 0, 0, 0, NULL, NULL, -1),
	(69, 'GENTLEMAN Гель для душа СПОРТ 300 мл', 2, '4811248006084', 0, 0, 0, NULL, NULL, -1),
	(70, 'НАРРУ ВАВУ Гель-пенка для купания 300 г', 2, '4811248007555', 0, 0, 0, NULL, NULL, 1),
	(71, 'НАРРУ ВАВУ Гель для подмывания 300 г', 2, '4811248007548', 0, 0, 0, NULL, NULL, 1),
	(72, 'НАРРУ ВАВУ Шампунь без слёз 300 г', 2, '4811248007531', 0, 0, 0, NULL, NULL, -1),
	(73, 'ДОМАШНЯЯ АПТЕКА Кондиционер-ополаскиватель Козье молоко 500 мл', 2, '4810210000358', 0, 0, 0, NULL, NULL, 1),
	(74, 'ДОМАШНЯЯ АПТЕКА Крем-шампунь Прополис 500 мл', 2, '4810210000501', 0, 0, 0, NULL, NULL, 1),
	(75, 'CLASSIC BEAUTY Шампунь для ежедневного ухода 500 мл', 2, '4811248005728', 0, 0, 0, NULL, NULL, 1),
	(76, 'CLASSIC BEAUTY Шампунь для придания объёма 500 мл', 2, '4811248005759', 0, 0, 0, NULL, NULL, 1),
	(77, 'CLASSIC BEAUTY Шампунь для окрашеных волос 500 мл', 2, '4811248005735', 0, 0, 0, NULL, NULL, 1),
	(78, 'CLASSIC BEAUTY Шампунь для блеска и сияния 500 мл', 2, '4811248005742', 0, 0, 0, NULL, NULL, 1),
	(79, 'ДОМАШНЯЯ АПТЕКА Шампунь- мусс Женьшеневый 500 мл', 2, '4810210000167', 0, 0, 0, NULL, NULL, 1),
	(80, 'ДОМАШНЯЯ АПТЕКА Бальзам-маска Оливковая 500 мл', 2, '4810210000297', 0, 0, 0, NULL, NULL, 1),
	(81, 'ДОМАШНЯЯ АПТЕКА Кондиционер-ополаскиватель Прополис 500 мл', 2, '4810210000372', 0, 0, 0, NULL, NULL, 1),
	(82, 'ДОМАШНЯЯ АПТЕКА Кондиционер-Ополаскиватель Кефирный 500 мл', 2, '4810210000341', 0, 0, 0, NULL, NULL, 1),
	(83, 'ДОМАШНЯЯ АПТЕКА Бальзам-маска Берёзовые почки 500 мл', 2, '4810210000310', 0, 0, 0, NULL, NULL, 1),
	(84, 'FLEURS DE FRANCE Подарочный Набор Роскошь Гиацинта', 2, '4811248007685', 0, 0, 0, NULL, NULL, 1),
	(85, 'FLEURS DE FRANCE Подарочный Набор Бархат Фиалки', 2, '4811248007678', 0, 0, 0, NULL, NULL, 1),
	(86, 'AROMA FANTASY Подарочный Набор Фруктовый салат', 2, '4811248006824', 0, 0, 0, NULL, NULL, 1),
	(87, 'AROMA FANTASY Подарочный Набор Сочный Гранат', 2, '4811248006817', 0, 0, 0, NULL, NULL, 1),
	(88, 'AROMA FANTASY Подарочный набор Лайм-малина', 2, '4811248006831', 0, 0, 0, NULL, NULL, 1),
	(89, 'ORIENTAL TOUCH Подарочный Набор Питание и Восстановление', 2, '4811248006855', 0, 0, 0, NULL, NULL, 1),
	(90, 'ORIENTAL TOUCH Подарочный Набор Объём и укрепление', 2, '4811248006862', 0, 0, 0, NULL, NULL, 1),
	(91, 'AROMA FANTASY Спрей для тела Сочный Гранат 200 мл', 2, '4811248006169', 0, 0, 0, NULL, NULL, 1),
	(92, 'AROMA FANTASY Спрей для тела Лайм-Малина 200 мл', 2, '4811248006190', 0, 0, 0, NULL, NULL, 1),
	(93, 'AROMA FANTASY Спрей для тела Фруктовый салат 200 мл', 2, '4811248006183', 0, 0, 0, NULL, NULL, 1),
	(94, 'ФАБРИКА КРАСОТЫ Спрей для тела Вишня 200 мл', 2, '4810210001638', 0, 0, 0, NULL, NULL, 1),
	(95, 'ФАБРИКА КРАСОТЫ Спрей для тела Персик 200 мл', 2, '4810210001621', 0, 0, 0, NULL, NULL, 1),
	(96, 'ФАБРИКА КРАСОТЫ Спрей для тела Зелёный чай 200 мл', 2, '4810210000044', 0, 0, 0, NULL, NULL, 1),
	(97, 'ФАБРИКА КРАСОТЫ Спрей для тела Мандарин 200 мл', 2, '4810210001614', 0, 0, 0, NULL, NULL, 1),
	(98, 'ФАБРИКА КРАСОТЫ Спрей для тела Клубника 200 мл', 2, '4810210000037', 0, 0, 0, NULL, NULL, 1),
	(99, 'ФАБРИКА КРАСОТЫ Спрей для тела Ваниль 200 мл', 2, '4810210000013', 0, 0, 0, NULL, NULL, 1),
	(100, 'ФАБРИКА КРАСОТЫ Спрей для тела Кокос 200 мл', 2, '4810210000020', 0, 0, 0, NULL, NULL, 1),
	(101, 'ФАБРИКА КРАСОТЫ Душистый спрей для тела Лотос 200', 2, '4810210002475', 0, 0, 0, NULL, NULL, 1),
	(102, 'ФАБРИКА КРАСОТЫ Душистый спрей для тела Василёк 200', 2, '4810210002451', 0, 0, 0, NULL, NULL, 1),
	(103, 'ФАБРИКА КРАСОТЫ Душистый спрей для тела Сирень Жасмин 200', 2, '4810210002468', 0, 0, 0, NULL, NULL, 1),
	(104, 'ФАБРИКА КРАСОТЫ Душистый спрей для тела Лилия-Ландыш 200', 2, '4810210002444', 0, 0, 0, NULL, NULL, 1),
	(105, 'FLEURS DE FRANCE Спрей-Мист для тела Нежность пиона 200 мл', 2, '4811248007456', 0, 0, 0, NULL, NULL, 1),
	(106, 'FLEURS DE FRANCE Спрей-Мист для тела Роскошь Гиацинта 200 мл', 2, '4811248007470', 0, 0, 0, NULL, NULL, 1),
	(107, 'FLEURS DE FRANCE Спрей-Мист для тела Бархат Фиалки 200 мл', 2, '4811248007463', 0, 0, 0, NULL, NULL, 1),
	(108, 'ФАБРИКА КРАСОТЫ Парфюм. спрей для тела FOREST BOQUET 200 мл', 2, '4810210002499', 0, 0, 0, NULL, NULL, -1),
	(109, 'ФАБРИКА КРАСОТЫ Парфюм. спрей для тела SWEET AQUA 200 МЛ', 2, '4810210002505', 0, 0, 0, NULL, NULL, 1),
	(110, 'ФАБРИКА КРАСОТЫ Парфюм. спрей для тела SUNNY SPIRITS 200 мл', 2, '4810210002482', 0, 0, 0, NULL, NULL, 1),
	(111, 'GENTLEMAN Спрей для тела Спорт 200 мл', 2, '4811248007654', 0, 0, 0, NULL, NULL, -1),
	(112, 'GENTLEMAN Спрей для тела СИТИ 200 мл', 2, '4811248007647', 0, 0, 0, NULL, NULL, -1),
	(113, 'GENTLEMAN Спрей для ног Нейтрализатор запаха 200 мл', 2, '4811248007517', 0, 0, 0, NULL, NULL, -1),
	(114, 'FLEURS DE FRANCE Пена для ванны Нежность Пиона 730 мл', 2, '4811248007272', 0, 0, 0, NULL, NULL, 1),
	(115, 'FLEURS DE FRANCE Пена для ванны Бархат фиалки 730 мл', 2, '4811248007289', 0, 0, 0, NULL, NULL, 1),
	(116, 'FLEURS DE FRANCE Пена для ванны Роскошь гиацинта 730 мл', 2, '4811248007296', 0, 0, 0, NULL, NULL, 1),
	(117, 'FLEURS DE FRANCE Жидкое мыло Нежность Пиона 500 мл', 2, '4811248007241', 0, 0, 0, NULL, NULL, 1),
	(118, 'FLEURS DE FRANCE Жидкое мыло Бархат Фиалки 500 мл', 2, '4811248007258', 0, 0, 0, NULL, NULL, 1),
	(119, 'FLEURS DE FRANCE Жидкое мыло Роскошь Гиацинта 500 мл', 2, '4811248007265', 0, 0, 0, NULL, NULL, 1),
	(120, 'DILIS Парфюм.вода GENTLE TOUCH 75 мл', 2, '4810212014087', 0, 0, 0, NULL, NULL, 1),
	(121, 'DILIS Парфюм.вода LOOK AT ME 75 ml', 2, '4810212014063', 0, 0, 0, NULL, NULL, 1),
	(122, 'DILIS CLASSIC COLECTION № 16 30 мл', 2, '4810212010645', 0, 0, 0, NULL, NULL, 1),
	(123, 'DILIS CLASSIC COLECTION № 19 30 мл', 2, '4810212010676', 0, 0, 0, NULL, NULL, 1),
	(124, 'DILIS CLASSIC COLECTION № 30 30 мл', 2, '4810212013356', 0, 0, 0, NULL, NULL, 1),
	(125, 'DILIS CLASSIC COLECTION № 35 30 мл', 2, '4810212014216', 0, 0, 0, NULL, NULL, 1),
	(126, 'DILIS CLASSIC COLECTION № 13 30 мл', 2, '4810212010614', 0, 0, 0, NULL, NULL, 1),
	(127, 'DILIS ДУХИ Ночная фиалка 9,5 мл', 2, '4810212012236', 0, 0, 0, NULL, NULL, 1),
	(128, 'DILIS ДУХИ Жасмин 9,5 мл ', 2, '4810212012229', 0, 0, 0, NULL, NULL, 1),
	(129, 'Asalia Туалетная вода MY DREAM 75 ml', 2, '4810353004732', 0, 0, 0, NULL, NULL, 1),
	(130, 'Asalia  Парфюмерная вода GENTLE TOUCH 60 ml', 2, '4810353004817', 0, 0, 0, NULL, NULL, 1),
	(131, 'DILIS Парфюм.вода SWEET&HOT 75 ml', 2, '4810212013622', 0, 0, 0, NULL, NULL, 1),
	(132, 'DILIS Парфюм.вода AQUA DE LAGUNA 100 ml', 2, '4810212000509', 0, 0, 0, NULL, NULL, 1),
	(133, 'DILIS Парфюм.вода NUELLE INNOCENT 50 ml', 2, '4810212011918', 0, 0, 0, NULL, NULL, 1),
	(134, 'DILIS Парфюм.вода NUELLE NAIVE 50 ml', 2, '4810212014186', 0, 0, 0, NULL, NULL, 1),
	(135, 'DILIS Парфюм.вода SEXY TWENTY 100 ml', 2, '4810212011055', 0, 0, 0, NULL, NULL, 1),
	(136, 'DILIS Парфюм.вода ABSOLUTELY WILD 100 ml', 2, '4810212012557', 0, 0, 0, NULL, NULL, 1),
	(137, 'DILIS Парфюм.вода MILA 100 ml', 2, '4810212011079', 0, 0, 0, NULL, NULL, 1),
	(138, 'DILIS Парфюм.вода  ELITE ARPEGIO 100 ml', 2, '4810212011062', 0, 0, 0, NULL, NULL, 1),
	(139, 'DILIS Туалетная вода COOL AND GREY SPORT 100 ml', 2, '4810212012540', 0, 0, 0, NULL, NULL, 1),
	(140, 'DILIS  Туалетная вода ATLANTICA TABOO 100 ml', 2, '4810212009861', 0, 0, 0, NULL, NULL, 1),
	(141, 'DILIS  Туалетная вода ATLANTICA ODISSEY 100 ml', 2, '4810212012717', 0, 0, 0, NULL, NULL, 1),
	(142, 'DILIS  Туалетная вода UNIQUE SUNNY 100 ml', 2, '4810212011109', 0, 0, 0, NULL, NULL, 1),
	(143, 'DILIS  Туалетная вода TAKE A CHANCE SPORT 100 ml', 2, '4810212012533', 0, 0, 0, NULL, NULL, 1),
	(144, 'DILIS  Туалетная вода BLUE RAY 100 ml', 2, '4810212013455', 0, 0, 0, NULL, NULL, 1),
	(145, 'DILIS INTIMISSION UNO Духи 50 ml', 2, '4810212013974', 0, 0, 0, NULL, NULL, 1),
	(146, 'DILIS INTIMISSION DUE Духи 50 ml', 2, '4810212013981', 0, 0, 0, NULL, NULL, 1),
	(147, 'DILIS INTIMISSION TRE Духи 50 ml', 2, '4810212013998', 0, 0, 0, NULL, NULL, 1),
	(148, 'DILIS  Туалетная вода AROMANIA FRANCOIS 100 ml', 2, '4810212014308', 0, 0, 0, NULL, NULL, 1),
	(149, 'DILIS  Туалетная вода FRESH 100 ml', 2, '4810212009441', 0, 0, 0, NULL, NULL, 1),
	(150, 'DILIS Парфюм. вода MIDNIGHT FEVER 75 ml', 2, '4810212014094', 0, 0, 0, NULL, NULL, 1),
	(151, 'LA ROSEE Освежитель воздуха Лесные Ягоды 300 мл', 2, '4780049290179', 0, 0, 0, NULL, NULL, 1),
	(152, 'LA ROSEE Освежитель воздуха Аромат Франции 300 мл', 2, '4780049290032', 0, 0, 0, NULL, NULL, 1),
	(153, 'LA ROSEE Освежитель воздуха Свежесть Океана 300 мл', 2, '4780049290186', 0, 0, 0, NULL, NULL, 1),
	(154, 'LA ROSEE Освежитель воздуха Утренняя роса 300 мл', 2, '4780049290049', 0, 0, 0, NULL, NULL, 1),
	(155, 'LA ROSEE Освежитель воздуха Цитрусовая Свежесть 300 мл', 2, '4780049290056', 0, 0, 0, NULL, NULL, 1),
	(156, 'LA ROSEE Освежитель воздуха Цветочный Букет 300 мл', 2, '4780049290063', 0, 0, 0, NULL, NULL, 1),
	(157, 'LA ROSEE Освежитель воздуха Шоколадный Гурман 300 мл', 2, '4780049290070', 0, 0, 0, NULL, NULL, 1),
	(158, 'CLEMANCE Дезодорант Женск. NATURE 150 ml', 2, '4780049290087', 0, 0, 0, NULL, NULL, -1),
	(159, 'CLEMANCE Дезодорант Женск. PINK 150 ml', 2, '4780049290094', 0, 0, 0, NULL, NULL, 1),
	(160, 'CLEMANCE Дезодорант Женск. MUSC 150 ml', 2, '4780049290100', 0, 0, 0, NULL, NULL, 1),
	(161, 'LEADER MEN Дезодорант Мужск. NATURE 150 ml', 2, '4780049290117', 0, 0, 0, NULL, NULL, 1),
	(162, 'LEADER MEN Дезодорант Мужск. SPORT 150 ml', 2, '4780049290124', 0, 0, 0, NULL, NULL, 1),
	(163, 'LEADER MEN Дезодорант Мужск. INTENSE 150 ml', 2, '4780049290131', 0, 0, 0, NULL, NULL, 1),
	(164, 'LEADER MEN Пена для Бритья с Алоэ 200 мл', 2, '4780049290018', 0, 0, 0, NULL, NULL, -1),
	(165, 'LEADER MEN Пена для бритья 200 мл', 2, '4780049290162', 0, 0, 0, NULL, NULL, 1),
	(166, 'CLEMANCE Пена для бритья Женск. для чувствит.кож 200 мл', 2, '4780049290193', 0, 0, 0, NULL, NULL, 1),
	(167, 'CLEMANCE Пена для бритья Женск. увлажнение 200 мл', 2, '4780049290155', 0, 0, 0, NULL, NULL, 1),
	(168, 'CLEMANCE Лак для волос 4Gold 150 ml', 2, '4780049290209', 0, 0, 0, NULL, NULL, 1),
	(169, 'CLEMANCE Лак для волос 4 300 ml', 2, '4780049290148', 0, 0, 0, NULL, NULL, -1),
	(170, 'CLEMANCE Подарочный Набор для Женщин', 2, '4780049290216', 0, 0, 0, NULL, NULL, 1),
	(171, 'LEADER MEN Подарочный набор для Мужчин', 2, '4780049290223', 0, 0, 0, NULL, NULL, 1),
	(172, 'BELLA Шампунь для волос 1000 мл', 2, '4780024070055', 0, 0, 0, NULL, NULL, 1),
	(173, 'CLIFF STUDIO Фито-Шампунь Чеснок 400 ml', 2, '4780024070307', 0, 0, 0, NULL, NULL, -1),
	(174, 'HUNDRED DRAGONS Чай Зелёный FOP 100 gr', 2, '6930922501566', 0, 0, 0, NULL, NULL, 1),
	(175, 'HUNDRED DRAGONS Чай Молочный Улун 100 гр', 2, '6930922501580', 0, 0, 0, NULL, NULL, 1),
	(176, 'HUNDRED DRAGONS Зелёный чай ОРА 100 гр', 2, '6930922501573', 0, 0, 0, NULL, NULL, 1),
	(177, 'HUNDRED DRAGONS Чай Белый 50 гр', 2, '6930922501542', 0, 0, 0, NULL, NULL, 1),
	(178, 'HUNDRED DRAGONS Чай Чёрный YUNNAN 100 gr', 2, '6930922501603', 0, 0, 0, NULL, NULL, 1),
	(179, 'HUNDRED DRAGONS Чай GENMAICHA 100 gr', 2, '6930922501535', 0, 0, 0, NULL, NULL, 1),
	(180, 'HUNDRED DRAGONS Чай Чёрный YUNNAN SNAIL 100 gr', 2, '6930922501597', 0, 0, 0, NULL, NULL, 1),
	(181, 'HUNDRED DRAGONS Жасминовый Чай Зелёный', 2, '6930922501559', 0, 0, 0, NULL, NULL, 1),
	(182, ' BABY BOOM Фруктовый Напиток Лесные Ягоды 0,33мл', 2, '4780047810324', 0, 0, 0, NULL, NULL, -1),
	(183, 'BABY BOOM Газированный Напиток Кола 0,33 мл', 2, '4780047810089', 0, 0, 0, NULL, NULL, 1),
	(184, 'BABY BOOM Газированный напиток Лимонад 0,33', 2, '4780047810126', 0, 0, 0, NULL, NULL, 1),
	(185, 'BABY BOOM Фруктовый Напиток Вишня 0,33 мл', 2, '4780047810331', 0, 0, 0, NULL, NULL, 1),
	(186, 'BABY BOOM Фруктовый Напиток Апельсин 0,33 мл', 2, '4780047810317', 0, 0, 0, NULL, NULL, 1),
	(187, 'BABY BOOM Газированный Напиток Груша 0,33 мл', 2, '4780047810102', 0, 0, 0, NULL, NULL, 1),
	(188, 'BABY BOOM Газированный напиток Персик 0,33 мл', 2, '4780047810133', 0, 0, 0, NULL, NULL, 1),
	(189, 'BABY BOOM Газированный напиток Апельсин 0,33 мл', 2, '4780047810096', 0, 0, 0, NULL, NULL, 1),
	(190, 'BABY BOOM Фруктовый Напиток Мультифрукт 0,33 мл', 2, '4780047810300', 0, 0, 0, NULL, NULL, 1),
	(191, 'ДОШИРАК ЛБП Со вкусом Курицы (Лоток)', 2, '4607065580223', 0, 0, 0, NULL, NULL, 1),
	(192, 'ДОШИРАК ЛБП Со вкусом Говядины (Лоток)', 2, '4607065580216', 0, 0, 0, NULL, NULL, 1),
	(193, 'ДОШИРАК ЛБП Со вкусом Говядины YAMMY 80gr', 2, '4607065580889', 0, 0, 0, NULL, NULL, 1),
	(194, 'ДОШИРАК ЛБП Со вкусом Курицы YAMMY 80gr', 2, '4607065580872', 0, 0, 0, NULL, NULL, 1),
	(195, 'ДОШИРАК ЛБП Со вкусом Грибов Квисти 70gr', 2, '4607065580094', 0, 0, 0, NULL, NULL, 1),
	(196, 'ДОШИРАК ЛБП Со вкусом Говядины Квисти 70g', 2, '4607065580070', 0, 0, 0, NULL, NULL, 1),
	(197, 'ДОШИРАК ЛБП Со вкусом Курицы Квисти 70g', 2, '4607065580087', 0, 0, 0, NULL, NULL, 1),
	(198, 'EVELINE MEN LINE КРЕМ ДЛЯ БРИТЬЯ С АЛОЭ ВЕРА 100 МЛ', 2, '5901964003128', 0, 0, 0, NULL, NULL, 1),
	(199, 'EVELINE MEN LINE КРЕМ ДЛЯ БРИТЬЯ С МОРСКИМИ МИНЕРАЛАМИ 100 МЛ', 2, '5901964003135', 0, 0, 0, NULL, NULL, 1),
	(200, 'EVELINE LACTA MED Гель для Интимной гигиены для Ежеднев.ухода 250 мл', 2, '5901761900750', 0, 0, 0, NULL, NULL, 1),
	(201, 'EVELINE LACTA MED Гель для Интимной гигиены Антибактериальны 250 мл', 2, '5907609397645', 0, 0, 0, NULL, NULL, 1),
	(202, 'EVELINE MEN Extreme Гель после бритья 5в1 Sensitive Q10+r 200 мл', 2, '5907609344236', 0, 0, 0, NULL, NULL, 1),
	(203, 'EVELINE MEN Extreme Бальзам после бритья 5в1 Sensitive Q10+r 200 мл', 2, '5907609344601', 0, 0, 0, NULL, NULL, 1),
	(204, 'EVELINE MEN Extreme Гель после бритья 5в1 ACTIVE Q10+r 200 мл', 2, '5907609344243', 0, 0, 0, NULL, NULL, 1),
	(205, 'EVELINE MEN Extreme Бальзам после бритья 5в1 ACTIVE Q10+r 200 мл', 2, '5907609344618', 0, 0, 0, NULL, NULL, 1),
	(206, 'EVELINE MEN Extreme Бальзам после бритья +Крем энергетик Sensitive 150 ml', 2, '5901761933130', 0, 0, 0, NULL, NULL, 1),
	(207, 'EVELINE MEN Extreme Гель после бритья 6в1 Sensitive 150 ml', 2, '5901761933147', 0, 0, 0, NULL, NULL, 1),
	(208, 'EVELINE MEN Extreme Крем для бритья 3в1 Q10+R 100 ml', 2, '5907609313270', 0, 0, 0, NULL, NULL, 1),
	(209, 'BELLE JARDIN Шампунь Репейное Масло+Протеины Шёлка 400 мл', 2, '5907582902843', 0, 0, 0, NULL, NULL, 1),
	(210, 'BELLE JARDIN Шампунь Женьшень 400 мл', 2, '5907582903420', 0, 0, 0, NULL, NULL, 1),
	(211, 'BELLE JARDIN Шампунь Травяной сбор 400 мл', 2, '5907582903192', 0, 0, 0, NULL, NULL, 1),
	(212, 'BELLE JARDIN Шампунь Алоэ+Кератин 400 мл', 2, '5907582903208', 0, 0, 0, NULL, NULL, 1),
	(213, 'BELLE JARDIN Шампунь Крапива+Кератин 400 мл', 2, '5907582902829', 0, 0, 0, NULL, NULL, 1),
	(214, 'BELLE JARDIN Шампунь Ромашка+Кератин 400 мл', 2, '5907582902850', 0, 0, 0, NULL, NULL, 1),
	(215, 'BELLE JARDIN Шампунь Козье Молоко+Арника Горная 400 мл', 2, '5907582902836', 0, 0, 0, NULL, NULL, 1),
	(216, 'BELLE JARDIN Шампунь Лесной 400 мл', 2, '5907582903437', 0, 0, 0, NULL, NULL, 1),
	(217, 'EVELINE SLIM EXTREME Крем-Концентрат для похудения 200мл', 2, '5907609352071', 0, 0, 0, NULL, NULL, 1),
	(218, 'EVELINE SLIM EXTREME Антицеллюлитный Концентрат  200мл', 2, '5907609352040', 0, 0, 0, NULL, NULL, 1),
	(219, 'EVELINE SLIM EXTREME Термоактивная сываротка для похудения 200мл', 2, '5907609352057', 0, 0, 0, NULL, NULL, 1),
	(220, 'EVELINE Q10+R Средство для снятия макияжа 3в1 245 мл', 2, '5907609335029', 0, 0, 0, NULL, NULL, 1),
	(221, 'EVELINE NEW HYALURON Омолаживающая эмульсия для демакияжа 3в1 245 мл', 2, '5907609336194', 0, 0, 0, NULL, NULL, 1),
	(222, 'EVELINE Активный отбеливающий крем в коробке 50 мл', 2, '5907609343437', 0, 0, 0, NULL, NULL, 1),
	(223, 'EVELINE NEW HYALURON 40+ Крем-филлер против морщин 50мл', 2, '5907609336156', 0, 0, 0, NULL, NULL, -1),
	(224, 'EVELINE GOLD LIFT EXPERT 40+ крем-сыворотка 50 мл', 2, '5901761941937', 0, 0, 0, NULL, NULL, 1),
	(225, 'BELLE JARDIN Activ White отбеливающий крем в коробке 60 мл', 2, '5907582903628', 0, 0, 0, NULL, NULL, 1),
	(226, 'EVELINE JUST EPIL увлажняющий депиляторный крем SENSiTIVE 125 ml', 2, '5907609316110', 0, 0, 0, NULL, NULL, 1),
	(227, 'EVELINE JUST EPIL Ультранежный увлажняющий депиляторный крем 9в1 ноги 125 мл', 2, '5907609395313', 0, 0, 0, NULL, NULL, 1),
	(228, 'EVELINE JUST EPIL Ультранежный депиляторный крем 3 в1 с Алоэ Вера 125 мл', 2, '5901964016555', 0, 0, 0, NULL, NULL, 1),
	(229, 'EVELINE Bio Depil Ультраувлажняющий крем для депиляции 3 мин. 125 мл', 2, '5907609336965', 0, 0, 0, NULL, NULL, 1),
	(230, 'EVELINE Q10+R 9в1 Ульртанежный депиляторный крем 125 мл', 2, '5901964016302', 0, 0, 0, NULL, NULL, 1),
	(231, 'EVELINE Q10+R Крем для депиляции 9в1 100 мl', 2, '5901761914399', 0, 0, 0, NULL, NULL, 1),
	(232, 'EVELINE Ультрабыстрый депиляторный крем 3 мин. 100 мл', 2, '5901964051556', 0, 0, 0, NULL, NULL, 1),
	(233, 'EVELINE Ультранежный депиляторный крем 3в1 125 мл', 2, '5901964016746', 0, 0, 0, NULL, NULL, 1),
	(234, 'EVELINE BODY THERAPY Крем для депиляции 8в1 125 мл', 2, '5907609367310', 0, 0, 0, NULL, NULL, 1),
	(235, 'EVELINE Q10+R Бальза замедляющий рост волос 100 мл', 2, '5901964013622', 0, 0, 0, NULL, NULL, 1),
	(236, 'BELLE JARDIN Anti-Aging Line Средство для снятия макияжа 3в1 Лепестки розы 150 мл', 2, '5907582903048', 0, 0, 0, NULL, NULL, 1),
	(237, 'BELLE JARDIN Anti-Aging Line крем-Лифтинг Орхидея 150мл', 2, '5907582903024', 0, 0, 0, NULL, NULL, 1),
	(238, 'BELLE JARDIN Anti-Aging Line Крем Эхинацея 150 мл', 2, '5907582903017', 0, 0, 0, NULL, NULL, 1),
	(239, 'BELLE JARDIN Репейное масло 100 мл', 2, '5907582903789', 0, 0, 0, NULL, NULL, 1),
	(240, 'BELLE JARDIN Касторовое масло 100 мл', 2, '5907582903734', 0, 0, 0, NULL, NULL, 1),
	(241, 'BELLE JARDIN Аргановое масло 100 мл', 2, '5907582903727', 0, 0, 0, NULL, NULL, 1),
	(242, 'BELLE JARDIN Быстродействующий депиляторный крем с Алоэ Вера 75 мл', 2, '5907582901068', 0, 0, 0, NULL, NULL, 1),
	(243, 'BELLE JARDIN Быстродействующий депиляторный крем с Ромашкой 75 мл', 2, '5907582901075', 0, 0, 0, NULL, NULL, 1),
	(244, 'EVELINE DOUBLE WHITE Молочко для лица и шеи 3в1 200 мл', 2, '5901964013516', 0, 0, 0, NULL, NULL, 1),
	(245, 'EVELINE DOUBLE WHITE ночной крем 3в1 75мл', 2, '5901964013509', 0, 0, 0, NULL, NULL, 1),
	(246, 'EVELINE DOUBLE WHITE дневной крем 3в1', 2, '5901964013493', 0, 0, 0, NULL, NULL, 1),
	(247, 'EVELINE Био Репейная Аптека Бальзам-маска репейная 200 мл', 2, '5907609338938', 0, 0, 0, NULL, NULL, 1),
	(248, 'EVELINE Био Репейная Аптека Натуральное репеное масло 150мл', 2, '5907609338907', 0, 0, 0, NULL, NULL, 1),
	(249, 'EVELINE Био Репейная Аптека активный Репейный Шампунь 150 мл', 2, '5907609338921', 0, 0, 0, NULL, NULL, 1),
	(250, 'EVELINE Био Репейная Аптека Сыворотка-спрей 150мл', 2, '5907609338914', 0, 0, 0, NULL, NULL, 1),
	(251, 'EVELINE NEW HYALURON Мицелярная Вода Для жирной и комбинир.кожи 200 мл', 2, '5907609345684', 0, 0, 0, NULL, NULL, 1),
	(252, 'EVELINE NEW HYALURON Мицелярная Вода Для сухой и чувствит.кожи 200 мл', 2, '5907609345677', 0, 0, 0, NULL, NULL, 1),
	(253, 'EVELINE PURE CONTROL Глубокоочищающий тоник 200 мл ', 2, '5907609315335', 0, 0, 0, NULL, NULL, 1),
	(254, 'EVELINE PURE CONTROL Успокаивающий тоник 200 мл', 2, '5907609315342', 0, 0, 0, NULL, NULL, 1),
	(255, 'BELLE JARDIN ACTIVE NATURE ECO Мягкий очищающий тоник 250мл', 2, '5907582904779', 0, 0, 0, NULL, NULL, 1),
	(256, 'EVELINE Козье молоко Эмульсия для демакияжа 3в1 125мл ', 2, '5907609393012', 0, 0, 0, NULL, NULL, 1),
	(257, 'EVELINE Козье молоко Омолаживающий Крем для рук и ногтей 125 мл', 2, '5907609393043', 0, 0, 0, NULL, NULL, 1),
	(258, 'EVELINE Козье молоко Ночной крем-лифтинг 100 мл', 2, '5907609392954', 0, 0, 0, NULL, NULL, 1),
	(259, 'BELLE JARDIN FITO ENERGIA Антивозрастной крем Оливковое масло 200 мл', 2, '5907582902218', 0, 0, 0, NULL, NULL, 1),
	(260, 'BELLE JARDIN FITO ENERGIA Крем против морщин Козье молоко полужирный 200 мл', 2, '5907582902195', 0, 0, 0, NULL, NULL, 1),
	(261, 'BELLE JARDIN active Nature Осветляющий крем для лица 85 мл ', 2, '5907582904175', 0, 0, 0, NULL, NULL, 1),
	(262, 'BELLE JARDIN active Nature Смягчающий крем для ступней 85 мл', 2, '5907582904137', 0, 0, 0, NULL, NULL, 1),
	(263, 'BELLE JARDIN active Nature Интенсивный омолаживающий крем для лица 85 мл', 2, '5907582904144', 0, 0, 0, NULL, NULL, 1),
	(264, 'BELLE JARDIN active Nature Интенсивный восстанавливающий крем для рук 85 мл', 2, '5907582904106', 0, 0, 0, NULL, NULL, 1),
	(265, 'BELLE JARDIN active Nature Скраб для лица 85 мл', 2, '5907582905905', 0, 0, 0, NULL, NULL, 1),
	(266, 'BELLE JARDIN active Nature Защитный крем для рук 85 мл', 2, '5907582904113', 0, 0, 0, NULL, NULL, 1),
	(267, 'BELLE JARDIN active Nature Средство для снятия макияжа 85 мл', 2, '5907582904090', 0, 0, 0, NULL, NULL, 1),
	(268, 'BELLE JARDIN active Nature Регенерирующий крем для рук 85 мл', 2, '5907582904120', 0, 0, 0, NULL, NULL, 1),
	(269, 'BELLE JARDIN BIO SPA Крем от морщин 200 мл', 2, '5907582900269', 0, 0, 0, NULL, NULL, -1),
	(270, 'BELLE JARDIN BIO SPA Экстракт огурца 200 мл', 2, '5907582900252', 0, 0, 0, NULL, NULL, -1),
	(271, 'BELLE JARDIN BIO SPA  Ростки пшеницы 200 мл', 2, '5907582900290', 0, 0, 0, NULL, NULL, -1),
	(272, 'BELLE JARDIN BIO SPA Алоэ-Вера 200 мл', 2, '5907582900214', 0, 0, 0, NULL, NULL, -1),
	(273, 'BELLE JARDIN BIO SPA Козье молоко 200 мл', 2, '5907582900283', 0, 0, 0, NULL, NULL, -1),
	(274, 'BELLE JARDIN BIO SPA Ромашка 200 мл', 2, '5907582900221', 0, 0, 0, NULL, NULL, 1),
	(275, 'EVELINE Рецепты Природы Ромашка 125 мл', 2, '5907609314529', 0, 0, 0, NULL, NULL, 1),
	(276, 'EVELINE Рецепты Природы Оливковое масло 125 мл', 2, '5907609314512', 0, 0, 0, NULL, NULL, 1),
	(277, 'EVELINE Рецепты Природы Мумиё 125 мл', 2, '5907609305145', 0, 0, 0, NULL, NULL, 1),
	(278, 'EVELINE Рецепты Природы Сок Огурца 125 мл', 2, '5907609314536', 0, 0, 0, NULL, NULL, 1),
	(279, 'EVELINE Рецепты Природы Лимон 125 мл', 2, '5907609305152', 0, 0, 0, NULL, NULL, 1),
	(280, 'EVELINE Рецепты Природы Ромашка для детей 125 мл', 2, '5907609314505', 0, 0, 0, NULL, NULL, 1),
	(281, 'EVELINE Рецепты Природы Золотая пшеница 125 мл', 2, '5907609305121', 0, 0, 0, NULL, NULL, 1),
	(282, 'EVELINE EXTRA SOFT Отбеливающий крем 200 мл', 2, '5907609329448', 0, 0, 0, NULL, NULL, -1),
	(283, 'EVELINE EXTRA SOFT Bio Оливки 200 мл', 2, '5907609338105', 0, 0, 0, NULL, NULL, 1),
	(284, 'EVELINE EXTRA SOFT Питательный крем антиаллерген 200 мл', 2, '5907609328748', 0, 0, 0, NULL, NULL, 1),
	(285, 'EVELINE MEN X-TREME Мультифункциональный крем 200 мл', 2, '5901761933154', 0, 0, 0, NULL, NULL, 1),
	(286, 'TANGO FOR MEN №1005  150 ml', 2, '8692641006569', 0, 0, 0, NULL, NULL, 1),
	(287, 'TANGO FOR MEN №1004  150 ml', 2, '8692641006552', 0, 0, 0, NULL, NULL, 1),
	(288, 'TANGO FOR MEN №1002  150 ml', 2, '8692641006538', 0, 0, 0, NULL, NULL, 1),
	(289, 'Аэрозоль от насекомых 200 мл', 2, '8692641006705', 0, 0, 0, NULL, NULL, 1),
	(290, 'Salon Professional Лак для волос 265 мл', 2, '5012233163112', 0, 0, 0, NULL, NULL, 1),
	(291, 'BELLE JARDIN BIO SPA Крем для лица Ромашка 125 мл', 2, '5907582900375', 0, 0, 0, NULL, NULL, 1),
	(292, 'BELLE JARDIN BIO SPA Крем для лица от морщин 125 мл', 2, '5907582900412', 0, 0, 0, NULL, NULL, 1),
	(293, 'BELLE JARDIN BIO SPA Крем для лица Экстракт зелёного чая 125 мл', 2, '5907582900382', 0, 0, 0, NULL, NULL, 1),
	(294, 'BELLE JARDIN BIO SPA Крем для лица Оливковое масло 125 мл', 2, '5907582900429', 0, 0, 0, NULL, NULL, 1),
	(295, 'BELLE JARDIN BIO SPA Крем для лица Женьшень 125 мл', 2, '5907582900399', 0, 0, 0, NULL, NULL, 1),
	(296, 'BELLE JARDIN BIO SPA Крем для лица Мумиё 125 мл', 2, '5907582902492', 0, 0, 0, NULL, NULL, 1),
	(297, 'BELLE JARDIN BIO SPA Крем для лица Ростки пшеницы 125 мл', 2, '5907582900443', 0, 0, 0, NULL, NULL, 1),
	(298, 'BELLE JARDIN BIO SPA Крем для лица Экстракт огурца 125 мл', 2, '5907582900405', 0, 0, 0, NULL, NULL, 1),
	(299, 'BELLE JARDIN BIO SPA Крем для лица Козье молоко 125 мл', 2, '5907582900436', 0, 0, 0, NULL, NULL, 1),
	(300, 'BELLE JARDIN HAND CREAM Крем для рук и ногтей Козье молоко 125 мл', 2, '5907582901884', 0, 0, 0, NULL, NULL, -1),
	(301, 'BELLE JARDIN Food Cream Крем для ступней интенсивно смягчающий Алоэ вера 125 мл', 2, '5907582903413', 0, 0, 0, NULL, NULL, -1),
	(302, 'BELLE JARDIN Food Cream противопотный Шалфей и Лаванда 125 мл', 2, '5907582901129', 0, 0, 0, NULL, NULL, 1),
	(303, 'BELLE JARDIN Food Cream от трещин смягч Лаванда и Пчелиный воск 125 мл', 2, '5907582901143', 0, 0, 0, NULL, NULL, 1),
	(304, 'BELLE JARDIN Food Cream Венозный гель для усталых ног 125 мл', 2, '5907582901136', 0, 0, 0, NULL, NULL, 1),
	(305, 'BELLE JARDIN BIO SPA Скраб Персиковый 200 мл', 2, '5907582901099', 0, 0, 0, NULL, NULL, 1),
	(306, 'BELLE JARDIN BIO SPA Скраб Ореховый 200 мл', 2, '5907582901082', 0, 0, 0, NULL, NULL, 1),
	(307, 'BELLE JARDIN Anti-Aging Line Антивозрастной крем Пион 200 мл', 2, '5907582903123', 0, 0, 0, NULL, NULL, 1),
	(308, 'EVELINE ФИТО ЛИНИЯ Крем Цветок Лотоса 210 мл', 2, '5907609339065', 0, 0, 0, NULL, NULL, 1),
	(309, 'CARLO BOSSI Порфюм.вода INDILA 100 ml', 2, '5907776002908', 0, 0, 0, NULL, NULL, 1),
	(310, 'CARLO BOSSI Порфюм.вода TEARS OF SUN 100 ml', 2, '5907776002175', 0, 0, 0, NULL, NULL, 1),
	(311, 'CARLO BOSSI Порфюм.вода TEARS OF GREEN  100 ml', 2, '5907776001253', 0, 0, 0, NULL, NULL, 1),
	(312, 'CARLO BOSSI Порфюм.вода ECLATEE PINK 100 ml', 2, '5907776001550', 0, 0, 0, NULL, NULL, 1),
	(313, 'CARLO BOSSI Порфюм.вода ECLATEE VIOLET 100 ml', 2, '5907776000997', 0, 0, 0, NULL, NULL, 1),
	(314, 'CARLO BOSSI Порфюм.вода JASALLI 100 ml', 2, '5907776001666', 0, 0, 0, NULL, NULL, 1),
	(315, 'CARLO BOSSI Порфюм.вода LAMORE 100 ml', 2, '5907776002335', 0, 0, 0, NULL, NULL, 1),
	(316, 'CARLO BOSSI Порфюм.вода BLUE LIGHT 100 ml', 2, '5907776001239', 0, 0, 0, NULL, NULL, 1),
	(317, 'CARLO BOSSI Порфюм.вода BRIGHT LIGHT 100 ml', 2, '5907776001222', 0, 0, 0, NULL, NULL, 1),
	(318, 'CARLO BOSSI Порфюм.вода RED LIGHT 100 ml', 2, '5907776002250', 0, 0, 0, NULL, NULL, 1),
	(319, 'CARLO BOSSI Порфюм.вода GHIA 100 ml', 2, '5907776002007', 0, 0, 0, NULL, NULL, 1),
	(320, 'CARLO BOSSI Порфюм.вода GHIA MINI 10 ml', 2, '5902399821042', 0, 0, 0, NULL, NULL, 1),
	(321, 'CARLO BOSSI Порфюм.вода KOMODA 100 ml', 2, '5907776002212', 0, 0, 0, NULL, NULL, 1),
	(322, 'CARLO BOSSI Порфюм.вода BEL CANTO 100 ml', 2, '5907776001734', 0, 0, 0, NULL, NULL, 1),
	(323, 'CARLO BOSSI Порфюм.вода B&W SPORT 100 ml', 2, '5907776002205', 0, 0, 0, NULL, NULL, 1),
	(324, 'CARLO BOSSI Порфюм.вода B&W BLUE 100 ml', 2, '5907776002311', 0, 0, 0, NULL, NULL, 1),
	(325, 'NICE Ватные диски 120 шт', 2, '4751023292601', 0, 0, 0, NULL, NULL, 1),
	(326, 'NICE Ватные диски 50 шт', 2, '4751023293080', 0, 0, 0, NULL, NULL, 1),
	(327, 'OLEA Ватные диски 120+20 шт', 2, '4751023296562', 0, 0, 0, NULL, NULL, -1),
	(328, 'OLEA Ватные диски 80+20 шт', 2, '4751023296555', 0, 0, 0, NULL, NULL, 1),
	(329, 'OLEA Ватные палочки 200 шт', 2, '4751023296548', 0, 0, 0, NULL, NULL, 1),
	(330, 'VERONA SOFT Крем яблоко 200 мл', 2, '5906489392795', 0, 0, 0, NULL, NULL, 1),
	(331, 'VERONA SOFT Крем пшеница 200 мл', 2, '5906489392887', 0, 0, 0, NULL, NULL, 1),
	(332, 'VERONA SOFT Крем персик 200 мл', 2, '5906489392801', 0, 0, 0, NULL, NULL, 1),
	(333, 'VERONA SOFT Крем огурец 200 мл', 2, '5906489392726', 0, 0, 0, NULL, NULL, 1),
	(334, 'VERONA SOFT Крем мультивитаминый 200 мл', 2, '5906489392863', 0, 0, 0, NULL, NULL, 1),
	(335, 'VERONA SOFT Крем Алоэ 200 мл', 2, '5906489392870', 0, 0, 0, NULL, NULL, 1),
	(336, 'VERONA SOFT Крем Ночной 200 мл', 2, '5906489392740', 0, 0, 0, NULL, NULL, 1),
	(337, 'VERONA SOFT Крем Ромашка 200 мл', 2, '5906489392825', 0, 0, 0, NULL, NULL, 1),
	(338, 'VERONA SOFT Крем для рук 200 мл', 2, '5906489392757', 0, 0, 0, NULL, NULL, 1),
	(339, 'VERONA SOFT Крем Миндаль 200 мл', 2, '5906489392849', 0, 0, 0, NULL, NULL, 1),
	(340, 'VERONA SOFT Крем ног  200 мл', 2, '5906489392764', 0, 0, 0, NULL, NULL, 1),
	(341, 'VERONA SOFT Крем Оливки 200 мл', 2, '5906489390432', 0, 0, 0, NULL, NULL, 1),
	(342, 'VERONA SOFT Крем Мёд и молоко 200 мл', 2, '5906489392832', 0, 0, 0, NULL, NULL, 1),
	(343, 'VERONA SOFT Крем Козье молоко 200 мл', 2, '5906489390425', 0, 0, 0, NULL, NULL, 1),
	(344, 'Освежитель для унитазов 40 мл', 2, '5900785120007', 0, 0, 0, NULL, NULL, 1),
	(345, 'EVELINE Сыворотка для увеличения объема губ 12 мл', 2, '5901761928983', 0, 0, 0, NULL, NULL, -1),
	(346, 'EVELINE Бриллиантовый востан.комплекс для ногтей 12 мл', 2, '5907609329721', 0, 0, 0, NULL, NULL, 1),
	(347, 'EVELINE Увлажняющее средство с кальцием и молоком для ногтей 12 мл', 2, '5901761938340', 0, 0, 0, NULL, NULL, 1),
	(348, 'EVELINE Vitamin Booster 6в1 для ногтей 12 мл', 2, '5901761941562', 0, 0, 0, NULL, NULL, 1),
	(349, 'EVELINE Golden Shine 8в1 здоровые ногти 12 мл', 2, '5901761939323', 0, 0, 0, NULL, NULL, 1),
	(350, 'EVELINE Супер сушка для ногтей 12 мл', 2, '5901761928990', 0, 0, 0, NULL, NULL, 1),
	(351, 'EVELINE Концентрированная Сыворотка для губ 8в1 12 мл', 2, '5901761916164', 0, 0, 0, NULL, NULL, 1),
	(352, 'EVELINE Ультрастойкий маникюр №1 2х5 мл', 2, '5901761920451', 0, 0, 0, NULL, NULL, -1),
	(353, 'EVELINE Ультрастойкий маникюр №2  2х5 мл', 2, '5901761921977', 0, 0, 0, NULL, NULL, 1),
	(354, 'EVELINE Ультрастойкий маникюр №3 2х5 мл', 2, '5901761921984', 0, 0, 0, NULL, NULL, 1),
	(355, 'EVELINE Ультрастойкий маникюр №4 2х5 мл', 2, '5901761921991', 0, 0, 0, NULL, NULL, 1),
	(356, 'EVELINE Ультрастойкий маникюр №5 2х5 мл', 2, '5901761922004', 0, 0, 0, NULL, NULL, 1),
	(357, 'EVELINE Ультрастойкий маникюр №6 2х5 мл', 2, '5901761922011', 0, 0, 0, NULL, NULL, 1),
	(358, 'EVELINE Super Match Full HD 2в1 Тональный крем Натуральный 30 мл', 2, '5901761945256', 0, 0, 0, NULL, NULL, -1),
	(359, 'EVELINE art professional Make-UP тональный крем бежевый 40 мл', 2, '5907609334046', 0, 0, 0, NULL, NULL, 1),
	(360, 'EVELINE art professional Make-UP тональный крем слоновая кость 30 мл', 2, '5907609336675', 0, 0, 0, NULL, NULL, 1),
	(361, 'EVELINE art professional Make-UP тональный крем Натуральный 30 мл', 2, '5907609336699', 0, 0, 0, NULL, NULL, 1),
	(362, 'EVELINE MATT COVER Тональный крем Бежевый 30 мл', 2, '5907609323620', 0, 0, 0, NULL, NULL, 1),
	(363, 'EVELINE MATT COVER Тональный крем Натуральный 30 мл', 2, '5907609323644', 0, 0, 0, NULL, NULL, 1),
	(364, 'EVELINE Кашемир эффект тональный крем Песочный 30 мл', 2, '5907609322838', 0, 0, 0, NULL, NULL, -1),
	(365, '*', 2, '5907609384409', 0, 0, 0, NULL, NULL, -1),
	(366, '*', 2, '5907609384362', 0, 0, 0, NULL, NULL, -1),
	(367, 'EVELINE Q10 Отбеливающий тональный крем 30 мл', 2, '5901964051488', 0, 0, 0, NULL, NULL, 1),
	(368, 'EVELINE Finish Show 3в1 Тональный крем Натуральный 40 мл', 2, '5907609310866', 0, 0, 0, NULL, NULL, 1),
	(369, 'EVELINE Finish Show 3в1 Тональный крем Песочный 40 мл', 2, '5907609319678', 0, 0, 0, NULL, NULL, 1),
	(370, 'EVELINE Кашемир эффект тональный крем Слоновая кость 30 мл', 2, '5907609322845', 0, 0, 0, NULL, NULL, 1),
	(371, 'EVELINE Кашемир эффект тональный крем Теплый Бежевый 30 мл', 2, '5907609322821', 0, 0, 0, NULL, NULL, 1),
	(372, 'EVELINE Комактная пудра №15 9 мл', 2, '5907609321220', 0, 0, 0, NULL, NULL, 1),
	(373, 'EVELINE Комактная пудра №10 9 мл', 2, '5907609306265', 0, 0, 0, NULL, NULL, 1),
	(374, 'EVELINE Комактная пудра №12 9 мл', 2, '5901964019778', 0, 0, 0, NULL, NULL, 1),
	(375, 'EVELINE Тени для век №8 5,2 мл', 2, '5901761906080', 0, 0, 0, NULL, NULL, -1),
	(376, 'EVELINE Тени для век №6 5,2 мл', 2, '5901761906066', 0, 0, 0, NULL, NULL, 1),
	(377, 'EVELINE Тени для век №7 5,2 мл', 2, '5901761906073', 0, 0, 0, NULL, NULL, 1),
	(378, 'EVELINE Корректор для бровей 5в1 9 мл', 2, '5901761911138', 0, 0, 0, NULL, NULL, 1),
	(379, 'EVELINE Корректирующий карандаш №4 ', 2, '5901761940596', 0, 0, 0, NULL, NULL, -1),
	(380, 'EVELINE Корректирующий карандаш №2', 2, '5907609335388', 0, 0, 0, NULL, NULL, 1),
	(381, 'EVELINE Корректирующий карандаш №3', 2, '5907609335395', 0, 0, 0, NULL, NULL, 1),
	(382, 'EVELINE Помада карандаш №4 ', 2, '5901761930498', 0, 0, 0, NULL, NULL, 1),
	(383, 'EVELINE Автоматический карандаш для глаз черный', 2, '5901761915112', 0, 0, 0, NULL, NULL, 1),
	(384, 'EVELINE Контурный карандаш для глаз черный с точилкой', 2, '5901761903591', 0, 0, 0, NULL, NULL, 1),
	(385, 'EVELINE Контурный карандаш для бровей черный', 2, '5901761918786', 0, 0, 0, NULL, NULL, 1),
	(386, 'EVELINE Контурный карандаш для глаз коричневый', 2, '5907609301512', 0, 0, 0, NULL, NULL, 1),
	(387, 'EVELINE Контурный карандаш для губ №18 ', 2, '5901761941142', 0, 0, 0, NULL, NULL, 1),
	(388, 'EVELINE Подводка маркер черная', 2, '5907609339218', 0, 0, 0, NULL, NULL, -1),
	(389, 'BELLE JARDIN Контурный карандаш для глаз черный', 2, '3891380286262', 1, 0, 0, NULL, NULL, 1),
	(390, 'EVELINE Holografic блеск для губ №54 9 мл', 2, '5907609351166', 0, 0, 0, NULL, NULL, 1),
	(391, 'EVELINE Holografic блеск для губ №79 9 мл', 2, '5907609316967', 0, 0, 0, NULL, NULL, 1),
	(392, 'EVELINE Holografic блеск для губ №53 9 мл', 2, '5907609351142', 0, 0, 0, NULL, NULL, -1),
	(393, 'EVELINE Holografic блеск для губ №69 9 мл', 2, '5907609308849', 0, 0, 0, NULL, NULL, 1),
	(394, 'EVELINE Holografic блеск для губ №53 9 мл', 2, '5907609308771', 0, 0, 0, NULL, NULL, 1),
	(395, 'EVELINE Holografic блеск для губ №72 9 мл', 2, '5907609308870', 0, 0, 0, NULL, NULL, 1),
	(396, 'EVELINE Holografic блеск для губ №72 9 мл', 2, '5907609351302', 0, 0, 0, NULL, NULL, 1),
	(397, 'EVELINE Holografic блеск для губ №55 9 мл', 2, '5907609308795', 0, 0, 0, NULL, NULL, 1),
	(398, 'EVELINE BB блеск для губ №1 9 мл', 2, '5901761917673', 0, 0, 0, NULL, NULL, 1),
	(399, 'EVELINE BB блеск для губ №102 9 мл', 2, '5901761920567', 0, 0, 0, NULL, NULL, 1),
	(400, 'EVELINE BB блеск для губ №100 9 мл', 2, '5901761914900', 0, 0, 0, NULL, NULL, 1),
	(401, 'EVELINE BB блеск для губ №103 9 мл', 2, '5901761914931', 0, 0, 0, NULL, NULL, 1),
	(402, 'EVELINE BB блеск для губ №5 9 мл', 2, '5901761917710', 0, 0, 0, NULL, NULL, 1),
	(403, 'EVELINE BB блеск для губ №2 9 мл', 2, '5901761915921', 0, 0, 0, NULL, NULL, 1),
	(404, 'EVELINE BB блеск для губ №100 9 мл', 2, '5901761920512', 0, 0, 0, NULL, NULL, 1),
	(405, 'EVELINE BB блеск для губ №102 9 мл', 2, '5901761914924', 0, 0, 0, NULL, NULL, 1),
	(406, 'EVELINE BB блеск для губ №5 9 мл', 2, '5901761915952', 0, 0, 0, NULL, NULL, 1),
	(407, 'EVELINE BB блеск для губ №1 9 мл', 2, '5901761915914', 0, 0, 0, NULL, NULL, 1),
	(408, 'EVELINE Корректирующий карандаш №1', 2, '5907609335371', 0, 0, 0, NULL, NULL, 1),
	(409, 'EVELINE Корректирующий карандаш №1', 2, '5907609354204', 0, 0, 0, NULL, NULL, 1),
	(410, 'EVELINE Корректирующий карандаш №3', 2, '5907609354228', 0, 0, 0, NULL, NULL, 1),
	(411, 'EVELINE Big Vol.Explosion 12 ml', 2, '5901761904413', 0, 0, 0, NULL, NULL, 1),
	(412, 'EVELINE Big Vol.Bio Formula 10 ml', 2, '5907609340573', 0, 0, 0, NULL, NULL, 1),
	(413, 'EVELINE Big Vol.Waterproof 9 ml', 2, '5907609337191', 0, 0, 0, NULL, NULL, 1),
	(414, 'EVELINE Big Vol.LASH MASCARA 10 ml', 2, '5907609331472', 0, 0, 0, NULL, NULL, 1),
	(415, 'EVELINE Big Vol.100% Black 10 ml', 2, '5907609340566', 0, 0, 0, NULL, NULL, 1),
	(416, 'EVELINE Сurl up Volume Mascara 10 ml', 2, '5901761912876', 0, 0, 0, NULL, NULL, 1),
	(417, 'EVELINE So Glamour vol. 10 ml', 2, '5901761912883', 0, 0, 0, NULL, NULL, 1),
	(418, 'EVELINE Master Volume Sensation 10 ml', 2, '5901761915990', 0, 0, 0, NULL, NULL, 1),
	(419, 'EVELINE Magnetic Look 10 ml', 2, '5907609389206', 0, 0, 0, NULL, NULL, 1),
	(420, 'EVELINE Maxi Сurl  10 ml', 2, '5901761919103', 0, 0, 0, NULL, NULL, 1),
	(421, 'EVELINE All in One 10 ml', 2, '5901761941548', 0, 0, 0, NULL, NULL, 1),
	(422, 'BELLE JARDIN 5D Водостойкая тушь 7 мл', 2, '5907582903864', 0, 0, 0, NULL, NULL, 1),
	(423, 'EVELINE Extra SOFTСмягчающий крем для потрескавшихся пяток 100 мл', 2, '5907609363022', 0, 0, 0, NULL, NULL, 1),
	(424, 'BOND Подарочный набор SPEEDMASTER', 2, '5901501015966', 0, 0, 0, NULL, NULL, 1),
	(425, 'ЗА Крем для лица Рсостки пшеницы 200 мл', 2, '4823015907678', 0, 0, 0, NULL, NULL, 1),
	(426, 'ЗА Крем для лица Алоэ 200 мл', 2, '4823015907647', 0, 0, 0, NULL, NULL, 1),
	(427, 'ЗА Крем для лица Мультивитаминный 200 мл', 2, '4823015907661', 0, 0, 0, NULL, NULL, 1),
	(428, 'ЗА Крем для лица Козье молоко 200 мл', 2, '4823015907685', 0, 0, 0, NULL, NULL, 1),
	(429, 'ЗА Крем для лица Оливковый 200 мл', 2, '4823015914560', 0, 0, 0, NULL, NULL, 1),
	(430, 'ЗА Крем для лица Ромашка 200 мл', 2, '4823015907654', 0, 0, 0, NULL, NULL, 1),
	(431, 'ЗА Крем для рук для экстримально сухой кожи 300 мл', 2, '4823015914690', 0, 0, 0, NULL, NULL, 1),
	(432, 'ЗА Крем для рук и ногтей с морскими водорослями 300 мл', 2, '4823015914706', 0, 0, 0, NULL, NULL, 1),
	(433, 'ЗА Крем для Рук и ногтей с мальвой и растит. церамидами 300 мл', 2, '4823015914683', 0, 0, 0, NULL, NULL, 1),
	(434, 'ЗА Крем для ног Профилактика варикоза 300 мл', 2, '4823015914720', 0, 0, 0, NULL, NULL, 1),
	(435, 'ЗА Крем для рук и ногтей Миндаль и календула 100 мл', 2, '4823015923944', 0, 0, 0, NULL, NULL, 1),
	(436, 'ЗА Крем для лица Мультивитаминный 100 мл', 2, '4823015925177', 0, 0, 0, NULL, NULL, 1),
	(437, 'ЗА Крем для рук и ногтей Оливковое масло и годжи 100 мл', 2, '4823015905827', 0, 0, 0, NULL, NULL, 1),
	(438, 'ЗА Крем для рук и ногтей Чистотел и липовый цвет 100 мл', 2, '4823015916687', 0, 0, 0, NULL, NULL, 1),
	(439, 'ЗА Крем для лица отбеливающий 100 мл', 2, '4823015925160', 0, 0, 0, NULL, NULL, 1),
	(440, 'ЗА Крем для рук и ногтей Ромашка и масло льна 100 мл', 2, '4823015905810', 0, 0, 0, NULL, NULL, 1),
	(441, 'ЗА Крем для рук и ногтей Лотос и оливка 100 мл', 2, '4823015923937', 0, 0, 0, NULL, NULL, 1),
	(442, 'ЗА Крем для лица омолаживающий против морщин 100 мл', 2, '4823015907005', 0, 0, 0, NULL, NULL, 1),
	(443, 'ЗА Крем для лица экстрапитательный 100 мл', 2, '4823015925184', 0, 0, 0, NULL, NULL, 1),
	(444, 'ЗА Крем для лица рук и ногтей Алоэ и масло авокадо 100 мл', 2, '4823015905797', 0, 0, 0, NULL, NULL, 1),
	(445, 'ЗА Крем для лица увлажняющий 100 мл', 2, '4823015906992', 0, 0, 0, NULL, NULL, 1),
	(446, 'ЗА Шампунь липовый цвет и масло облипихи 350 мл', 2, '4823015934339', 0, 0, 0, NULL, NULL, 1),
	(447, 'ЗА Бальзам-кондиционер липовый цвет и масло облипихи 300 мл', 2, '4823015934582', 0, 0, 0, NULL, NULL, 1),
	(448, 'ЗА Шампунь Ромашка лекарственная и льняное масло 350 мл', 2, '4823015904998', 0, 0, 0, NULL, NULL, 1),
	(449, 'ЗА Шампунь крапива двудомная и репейное масло 350 мл', 2, '4823015904967', 0, 0, 0, NULL, NULL, 1),
	(450, 'ЗА Бальзам-кондиционер Берёзовые почки и Касторовое масло 300 мл', 2, '4823015934605', 0, 0, 0, NULL, NULL, 1),
	(451, 'ЗА Бальзам-кондиционер Крапива двудомная и репейное масло 300 мл', 2, '4823015934568', 0, 0, 0, NULL, NULL, 1),
	(452, 'ЗА БАльзам-кондиционер Календула лекарств. и розмариновое масло 300 мл', 2, '4823015934599', 0, 0, 0, NULL, NULL, 1),
	(453, 'ЗА Бальзам-кондиционер Ромашка и льняное масло 300 мл', 2, '4823015934575', 0, 0, 0, NULL, NULL, 1),
	(454, 'ЗА Шампунь Календула лек. и розмариновое масло 350 мл', 2, '4823015904974', 0, 0, 0, NULL, NULL, 1),
	(455, 'ЗА Бальзам-маска Лопух большой и протеины пшеницы 300 мл', 2, '4823015908019', 0, 0, 0, NULL, NULL, 1),
	(456, 'ЗА Косметический набор Хорошее настроение', 2, '4823015934049', 0, 0, 0, NULL, NULL, 1),
	(457, 'ЗА Косметический набор Расслабление ', 2, '4823015934117', 0, 0, 0, NULL, NULL, 1),
	(458, 'ЗА Масло косметическое Ромашка и шалфей 75 гр', 2, '8588005625906', 0, 0, 0, NULL, NULL, 1),
	(459, 'ЗА Скраб для ног 100 мл', 2, '4823015908767', 0, 0, 0, NULL, NULL, 1),
	(460, 'ЗА Крем для ног с Конским каштаном 100 мл', 2, '4823015908750', 0, 0, 0, NULL, NULL, 1),
	(461, 'ЗА Шампунь для сухих волос Липовый цвет и облепиховое масло 1000 мл', 2, '4823015934346', 0, 0, 0, NULL, NULL, 1),
	(462, 'ЗА Шампунь для норм.волос Крапива двудомная и репейное масло 1000 мл', 2, '4823015933721', 0, 0, 0, NULL, NULL, 1),
	(463, 'ЗА Шампунь для окраш.волос Ромашка лекарственная и льяное масло 1000 мл', 2, '4823015933752', 0, 0, 0, NULL, NULL, 1),
	(464, 'ЗА Шампунь для жирных волос Календула лекарственная и розмариновое масло 1000 мл', 2, '4823015934384', 0, 0, 0, NULL, NULL, 1),
	(465, 'ЗА Травяной настой для принятия ванн№38 Сладкий сон 580 мл', 2, '4823015901096', 0, 0, 0, NULL, NULL, 1),
	(466, 'ЗА Массажное масло Разогревающее 200 мл', 2, '4823015918841', 0, 0, 0, NULL, NULL, -1),
	(467, 'ЗА Массажное масло Нейтральное 200 мл', 2, '4823015918865', 0, 0, 0, NULL, NULL, 1),
	(468, 'ЗА Масло для принятия ванн и душа Кедр,кипарис 250 мл', 2, '4823015917943', 0, 0, 0, NULL, NULL, 1),
	(469, 'ЗА Масло для принятия ванн и душа Мандарин,корица 250 мл', 2, '4823015917967', 0, 0, 0, NULL, NULL, 1),
	(470, 'ЗА Массажное масло Антицеллюлитное 200 мл', 2, '4823015918858', 0, 0, 0, NULL, NULL, 1),
	(471, 'Dr.Sante Нежный шелк для рук 500 мл', 2, '4823015933417', 0, 0, 0, NULL, NULL, 1),
	(472, 'FJ Освежающая вода Охлаждающая мята150 мл ', 2, '4823015936555', 0, 0, 0, NULL, NULL, -1),
	(473, 'FJ Освежающая вода Клубничная роса 150 мл ', 2, '4823015936579', 0, 0, 0, NULL, NULL, 1),
	(474, 'FJ Освежающая вода Цитрусовый всплеск 150 мл ', 2, '4823015936562', 0, 0, 0, NULL, NULL, 1),
	(475, 'FJ Крем-гель для душа Драконов фрукт и макадамия 300 мл', 2, '4823015922961', 0, 0, 0, NULL, NULL, 1),
	(476, 'FJ Крем-гель для душа Авокадо и рисовое молочко 300 мл', 2, '4823015917752', 0, 0, 0, NULL, NULL, 1),
	(477, 'FJ Крем-гель для душа Тайская дыня и белый лимон 300 мл', 2, '4823015922978', 0, 0, 0, NULL, NULL, 1),
	(478, 'FJ Лосьон для тела Лимон и мята 250 мл', 2, '4823015915529', 0, 0, 0, NULL, NULL, 1),
	(479, 'FJ Душ-пилинг Лимон и мята 250 мл', 2, '4823015914669', 0, 0, 0, NULL, NULL, 1),
	(480, 'FJ Средство для принятия ванн Бусинки Фрезия и кокос 450 мл', 2, '4823015925139', 0, 0, 0, NULL, NULL, 1),
	(481, 'FJ Средство для принятия ванн Бусинки Вишня и гранат  450 мл', 2, '4823015925146', 0, 0, 0, NULL, NULL, 1),
	(482, 'ЗА Шампунь против выпадения волос Лопух большой и протеины пшеницы 200 мл', 2, '4823015924095', 0, 0, 0, NULL, NULL, 1),
	(483, 'FJ Сахарный скраб для тела Апельсин и манго 225 мл', 2, '4823015925771', 0, 0, 0, NULL, NULL, 1),
	(484, 'FJ Сахарный скраб для тела Шоколад и марципан 225 мл', 2, '4823015925788', 0, 0, 0, NULL, NULL, 1),
	(485, 'FJ Сахарный скраб для тела Маракуйя и Макадамия  225 мл', 2, '4823015936425', 0, 0, 0, NULL, NULL, 1),
	(486, 'FJ Крем-масло для тела Азиатская груша и папайя 225 мл', 2, '4823015936395', 0, 0, 0, NULL, NULL, 1),
	(487, 'FJ Крем-масло для тела Апельсин и манго 225 мл', 2, '4823015925818', 0, 0, 0, NULL, NULL, 1),
	(488, 'Dr.Sante Пенка для интимной гигиены для чувствительной кожи 150 мл', 2, '4823015922930', 0, 0, 0, NULL, NULL, 1),
	(489, 'FJ Сахарный скраб для тела Рамбутан и Клубника 225 мл', 2, '4823015925757', 0, 0, 0, NULL, NULL, 1),
	(490, 'Salon SPA Крем Антицеллюлит 200 мл', 2, '4823015916984', 0, 0, 0, NULL, NULL, 1),
	(491, 'Salon SPA Крем для ног питательный Красная водоросль 150 мл', 2, '4823015915468', 0, 0, 0, NULL, NULL, 1),
	(492, 'Dr.Sante Cыворотка против выпадения волос Алоэ Вера 150 мл', 2, '4823015929021', 0, 0, 0, NULL, NULL, 1),
	(493, 'Dr.Sante Молочко для интимной гигиены Мягкое прикосновение 230 мл', 2, '4823015922954', 0, 0, 0, NULL, NULL, 1),
	(494, 'Dr.Sante Молочко для интимной гигиены Успокаивающее 230 мл', 2, '4823015922947', 0, 0, 0, NULL, NULL, 1),
	(495, 'Elfa.Pharm Сыворотка стимулирующая 7в1 протиы выпад.волос 100 мл', 2, '5901845500593', 0, 0, 0, NULL, NULL, 1),
	(496, 'Bio Naturell Шампунь Ромашка 1000 мл', 2, '4820168431227', 0, 0, 0, NULL, NULL, 1),
	(497, 'Bio Naturell Шампунь Лопух 1000 мл', 2, '4820168431234', 0, 0, 0, NULL, NULL, 1),
	(498, 'Bio Naturell Шампунь Яичный 1000 мл', 2, '4820168431272', 0, 0, 0, NULL, NULL, 1),
	(499, 'Bio Naturell Шампунь Крапива 500 мл', 2, '4820168431258', 0, 0, 0, NULL, NULL, 1),
	(500, 'Bio Naturell Шампунь Лопух 500 мл', 2, '4820168431241', 0, 0, 0, NULL, NULL, 1),
	(501, 'Bio Naturell Шампунь Крапива 1000 мл', 2, '4820168431265', 0, 0, 0, NULL, NULL, 1),
	(502, 'S.P Кондиционер для тонких волос 750 мл', 2, '4823015922343', 0, 0, 0, NULL, NULL, 1),
	(503, 'Dr.Sante Baby Увлажняющее молочко для тела 300 мл', 2, '4823015932335', 0, 0, 0, NULL, NULL, 1),
	(504, 'Elfa.Pharm Маска для лица Против пингментных пятен 20 мл', 2, '4823015933240', 0, 0, 0, NULL, NULL, 1),
	(505, 'Elfa.Pharm Маска для лица Противоугревая 20 мл', 2, '4823015933318', 0, 0, 0, NULL, NULL, 1),
	(506, 'Воск  для эпиляции зоны бикини ', 2, '4823015924903', 0, 0, 0, NULL, NULL, 1),
	(507, 'Bio Naturell Пена для ванн Мед и молоко 1000 мл', 2, '4820168431753', 0, 0, 0, NULL, NULL, 1),
	(508, 'Bio Naturell Пена для ванн Оливка и молоко 1000 мл', 2, '4820168431746', 0, 0, 0, NULL, NULL, 1),
	(509, 'Скребок Металлический Копейка', 2, '4823058302874', 0, 0, 0, NULL, NULL, 1),
	(510, 'ДД Соль для ванн Морская с экстрактами череды и шалфея 1000 мл', 2, '4823015927904', 0, 0, 0, NULL, NULL, 1),
	(511, 'ДД Соль для ванн Морская Йодобромная 1000 мл', 2, '4823015927959', 0, 0, 0, NULL, NULL, 1),
	(512, 'ДД Соль для ванн Морская Хвойная 1000 мл', 2, '4823015927898', 0, 0, 0, NULL, NULL, 1),
	(513, 'ДД Соль для ванн Морская с эфирным маслом пихты 1000 мл', 2, '4823015927973', 0, 0, 0, NULL, NULL, 1),
	(514, 'ДД Соль для ванн Морская с магнезией 1000 мл', 2, '4823015927881', 0, 0, 0, NULL, NULL, 1),
	(515, 'ДД Соль для ванн Морская с эфирным маслом лаванды 1000 мл', 2, '4823015927911', 0, 0, 0, NULL, NULL, 1),
	(516, 'ДД Соль для ванн Морская с эфирным маслом можжевельника1000 мл', 2, '4823015927966', 0, 0, 0, NULL, NULL, 1),
	(517, 'ДД Соль для ванн Морская с экстрактами ромашки и календулы 1000 мл', 2, '4823015927928', 0, 0, 0, NULL, NULL, -1),
	(518, 'ДД Соль для ванн Морская с белой глиной и шиповником 1000 мл', 2, '4823015927935', 0, 0, 0, NULL, NULL, 1),
	(519, 'ДД Соль для ванн натуральная морская 1000 мл ', 2, '4823015927874', 0, 0, 0, NULL, NULL, 1),
	(520, 'ДД Соль для ванн Морская с медом и прополисом 1000 мл', 2, '4823015927942', 0, 0, 0, NULL, NULL, 1),
	(521, 'ДД Соль для ванн Морская с медом и прополисом 500 мл', 2, '4823015923388', 0, 0, 0, NULL, NULL, 1),
	(522, 'ДД Соль для ванн Морская с белой глиной и шиповником 500 мл', 2, '4823015923401', 0, 0, 0, NULL, NULL, 1),
	(523, 'ДД Соль для ванн Морская с эфирным маслом пихты 500 мл', 2, '4823015921704', 0, 0, 0, NULL, NULL, 1),
	(524, 'ДД Соль для ванн Морская с магнезией 500 мл', 2, '4823015921742', 0, 0, 0, NULL, NULL, 1),
	(525, 'ДД Крем для рук и ногтей Алоэ 250 мл', 2, '4823015924507', 0, 0, 0, NULL, NULL, 1),
	(526, 'ДД Крем для ног Конский каштан и хвощ полевой 250 мл', 2, '4823015924477', 0, 0, 0, NULL, NULL, 1),
	(527, 'ДД Крем для рук и ногтей Пчелиный воск 250 мл', 2, '4823015924521', 0, 0, 0, NULL, NULL, 1),
	(528, 'ДД Крем для рук и ногтей Ромашка аптечная 250 мл', 2, '4823015924538', 0, 0, 0, NULL, NULL, 1),
	(529, 'ДД Крем Мед и облепиха 250 мл', 2, '4823015924552', 0, 0, 0, NULL, NULL, 1),
	(530, 'ДД Крем для ног кора дуба  250 мл', 2, '4823015924484', 0, 0, 0, NULL, NULL, 1),
	(531, 'ДД Крем Голубика и шалфей 250 мл', 2, '4823015924576', 0, 0, 0, NULL, NULL, 1),
	(532, 'ДД Крем Лимонник китайский 250 мл', 2, '4823015924569', 0, 0, 0, NULL, NULL, 1),
	(533, 'ДД Крем для рук и ногтей Лаванда 250 мл ', 2, '4823015924514', 0, 0, 0, NULL, NULL, 1),
	(534, 'ДД Крем для ног Ментол  250 мл', 2, '4823015924613', 0, 0, 0, NULL, NULL, 1),
	(535, 'ДД Детское крем-мыло Алоэ 70 мл', 2, '8588006035056', 0, 0, 0, NULL, NULL, 1),
	(536, 'ДД Детское крем-мыло Календула 70 мл', 2, '8588006035025', 0, 0, 0, NULL, NULL, 1),
	(537, 'ДД Детское крем-мыло Ромашка 70 мл', 2, '8588006035018', 0, 0, 0, NULL, NULL, 1),
	(538, 'ДД Детское крем-мыло Ромашка без отдушки 70 мл', 2, '8588006035032', 0, 0, 0, NULL, NULL, 1),
	(539, 'ДД Тоник для лица Алоэ вера и женьшень 300 мл', 2, '4823015924408', 0, 0, 0, NULL, NULL, 1),
	(540, 'ДД Тоник для лица Ромашка и чабрец 300 мл', 2, '4823015924354', 0, 0, 0, NULL, NULL, 1),
	(541, 'ДД Тоник для лица Мед и облепиха 300 мл', 2, '4823015924361', 0, 0, 0, NULL, NULL, 1),
	(542, 'ДД Тоник для лица Брусника и можжевельник 300 мл', 2, '4823015924392', 0, 0, 0, NULL, NULL, 1),
	(543, 'ДД Молочко для лица Брусника и можжевельник 300 мл', 2, '4823015924453', 0, 0, 0, NULL, NULL, 1),
	(544, 'ДД Молочко для лица Алоэ вера и женьшень 300 мл', 2, '4823015924460', 0, 0, 0, NULL, NULL, 1),
	(545, 'ДД Молочко для лица Ромашка и чабрец 300 мл', 2, '4823015924415', 0, 0, 0, NULL, NULL, 1),
	(546, 'ДД Гигиеническая помада Эвкалипт и Алоэ 3,6 мл', 2, '8588006037234', 0, 0, 0, NULL, NULL, 1),
	(547, 'ДД Бальзам Окопник и Сабельник болотный 75 мл', 2, '4823015926518', 0, 0, 0, NULL, NULL, 1),
	(548, 'ДД Бальзам Эвкалипт и Камфора 42 мл', 2, '4823015926471', 0, 0, 0, NULL, NULL, 1),
	(549, 'ДД Бальзам Горчичный согревающий 42 мл', 2, '4823015926433', 0, 0, 0, NULL, NULL, 1),
	(550, 'ДД Бальзам Растирка для тела 42 мл', 2, '4823015926419', 0, 0, 0, NULL, NULL, 1),
	(551, 'ДД Крем-бальзам Пчелиный яд и хондроитин 75 мл', 2, '4823015926525', 0, 0, 0, NULL, NULL, 1),
	(552, 'ДД Бальзам Растирка для ног 75 мл', 2, '4823015926501', 0, 0, 0, NULL, NULL, 1),
	(553, 'ДД Бальзам Живокост с маслом облепихи 42 мл', 2, '4823015926495', 0, 0, 0, NULL, NULL, 1),
	(554, 'ДД Бальзам Бишофит с золотым усом 42 мл', 2, '4823015926488', 0, 0, 0, NULL, NULL, 1),
	(555, 'ДД Крем Мумиё Алтайское 30 мл', 2, '4823015929298', 0, 0, 0, NULL, NULL, 1),
	(556, 'ДД Крем На все случаи жизни 30 мл', 2, '4823015929267', 0, 0, 0, NULL, NULL, 1),
	(557, 'ДД Крем Секрет молодости 30 мл', 2, '4823015929274', 0, 0, 0, NULL, NULL, 1),
	(558, 'ДД Крем Чистая кажа 30 мл', 2, '4823015929281', 0, 0, 0, NULL, NULL, 1),
	(559, 'ДД Крем для рук с Алоэ вера 42 мл', 2, '4823015918582', 0, 0, 0, NULL, NULL, 1),
	(560, 'ДД Крем для рук и ногтей с Арникой горной 42 мл', 2, '4823015918599', 0, 0, 0, NULL, NULL, 1),
	(561, 'ДД Крем для лица с Алоэ вера 42 мл', 2, '4823015918643', 0, 0, 0, NULL, NULL, 1),
	(562, 'ДД Детский крем гигиенический с пантенолом 42 мл', 2, '4823015930423', 0, 0, 0, NULL, NULL, 1),
	(563, 'ДД Крем для рук Силиконовый с пчелиным воском 42 мл', 2, '4823015926402', 0, 0, 0, NULL, NULL, 1),
	(564, 'ДД Крем для лица с облепихой 42 мл', 2, '4823015918636', 0, 0, 0, NULL, NULL, 1),
	(565, 'ДД Крем для лица с женьщенем 42 мл', 2, '4823015918629', 0, 0, 0, NULL, NULL, 1),
	(566, 'ДД Крем для лица с календулой лекарственной 42 мл', 2, '4823015918612', 0, 0, 0, NULL, NULL, 1),
	(567, 'ДД Крем для профилактики врикоза с конским каштаном 42 мл', 2, '4823015918544', 0, 0, 0, NULL, NULL, 1),
	(568, 'ДД Крем для рук и ноктей с чистотелом 42 мл', 2, '4823015918605', 0, 0, 0, NULL, NULL, 1),
	(569, 'ДД Детский крем с ромашкой лекарственной 42 мл', 2, '4823015918520', 0, 0, 0, NULL, NULL, 1),
	(570, 'ДД Детский крем гигиенический сбор трав 42 мл', 2, '4823015930416', 0, 0, 0, NULL, NULL, 1),
	(571, 'ДД Репейное масло против перхоти 100 мл', 2, '4823015919565', 0, 0, 0, NULL, NULL, 1),
	(572, 'COOL MEN ULTRASENSITIVE Крем после бритья 200 мл', 2, '4823015926303', 0, 0, 0, NULL, NULL, 1),
	(573, 'COOL MEN ULTRASENSITIVE Гель после бритья Антистесс 200 мл', 2, '4823015926297', 0, 0, 0, NULL, NULL, 1),
	(574, 'COOL MEN ULTRASENSITIVE Бальзам после бритья 200 мл', 2, '4823015926310', 0, 0, 0, NULL, NULL, 1),
	(575, 'COOL MEN ULTRASENSITIVE Гель шампунь 2в1 400 мл', 2, '4823015936180', 0, 0, 0, NULL, NULL, 1),
	(576, 'COOL MEN ULTRASENSITIVE Гель для душа 4в1 250 мл', 2, '4823015926174', 0, 0, 0, NULL, NULL, 1),
	(577, 'COOL MEN ULTRASENSITIVE Гель шампунь 3в1 250 мл', 2, '4823015935305', 0, 0, 0, NULL, NULL, 1),
	(578, 'COOL MEN ULTRASENSITIVE Гель шампунь 2в1 250 мл ', 2, '4823015935299', 0, 0, 0, NULL, NULL, 1),
	(579, 'COOL MEN ULTRASENSITIVE Шампунь против перхоти 250 мл', 2, '4823015935282', 0, 0, 0, NULL, NULL, 1),
	(580, 'COOL MEN ULTRASENSITIVE Антипирспирант 50мл', 2, '4823015936722', 0, 0, 0, NULL, NULL, 1),
	(581, 'COOL MEN ULTRAMINT Антипирспирант 50 мл', 2, '4823015936715', 0, 0, 0, NULL, NULL, 1),
	(582, 'COOL MEN ULTRAMINT Гель-Шампунь 2в1 400 мл', 2, '4823015936203', 0, 0, 0, NULL, NULL, 1),
	(583, 'COOL MEN ULTRAMINT Гель после бритья 200 мл', 2, '4823015936210', 0, 0, 0, NULL, NULL, 1),
	(584, 'COOL MEN ULTRAMINT Гель-шампунь 2в1 250 мл', 2, '4823015936197', 0, 0, 0, NULL, NULL, 1),
	(585, 'COOL MEN ULTRAENERGY+SPORT Антипирспирант 50 мл', 2, '4823015936739', 0, 0, 0, NULL, NULL, 1),
	(586, 'COOL MEN ULTRAENERGY+SPORT Шампунь Укрепляющий 250 мл', 2, '4823015930539', 0, 0, 0, NULL, NULL, 1),
	(587, 'COOL MEN ULTRAENERGY+SPORT Шампунь против перхоти 250мл', 2, '4823015930522', 0, 0, 0, NULL, NULL, 1),
	(588, 'COOL MEN ULTRAENERGY+SPORT Бальзам после бритья 200 мл', 2, '4823015930553', 0, 0, 0, NULL, NULL, 1),
	(589, 'COOL MEN ULTRAENERGY+SPORT Гель-Шампунь 2в1 250 мл', 2, '4823015930560', 0, 0, 0, NULL, NULL, 1),
	(590, 'COOL MEN ULTRAENERGY+SPORT Гель для душа 4в1 250 мл', 2, '4823015930577', 0, 0, 0, NULL, NULL, 1),
	(591, 'COOL MEN ULTRAENERGY+SPORT Гель-шампунь 2в1 400 мл', 2, '4823015936227', 0, 0, 0, NULL, NULL, 1),
	(592, 'COOL MEN ULTRAENERGY+SPORT Гель после бритья 200мл', 2, '4823015930546', 0, 0, 0, NULL, NULL, 1);
/*!40000 ALTER TABLE `product` ENABLE KEYS */;

-- Дамп структуры для представление sklad.productview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `productview` (
	`productId` INT(11) NOT NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`providerId` INT(11) NULL,
	`price` INT(11) NULL,
	`barcode` VARCHAR(50) NULL COLLATE 'utf8_general_ci',
	`expiry` VARCHAR(50) NULL COLLATE 'utf8_general_ci',
	`balanceDate` DATE NULL,
	`endCount` FLOAT NULL
) ENGINE=MyISAM;

-- Дамп структуры для таблица sklad.provider
CREATE TABLE IF NOT EXISTS `provider` (
  `providerId` int(11) NOT NULL AUTO_INCREMENT,
  `orgName` varchar(100) DEFAULT NULL,
  `phone` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`providerId`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.provider: ~1 rows (приблизительно)
/*!40000 ALTER TABLE `provider` DISABLE KEYS */;
INSERT INTO `provider` (`providerId`, `orgName`, `phone`) VALUES
	(1, 'Ktulhu', ' (  )     ');
/*!40000 ALTER TABLE `provider` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.realize
CREATE TABLE IF NOT EXISTS `realize` (
  `realizeId` int(11) NOT NULL AUTO_INCREMENT,
  `fakturaId` int(11) DEFAULT NULL,
  `prodId` int(11) DEFAULT NULL,
  `count` float DEFAULT NULL,
  `price` float DEFAULT NULL,
  `soldPrice` int(11) DEFAULT NULL,
  `expiryDate` date DEFAULT NULL,
  PRIMARY KEY (`realizeId`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT=' ';

-- Дамп данных таблицы sklad.realize: ~6 rows (приблизительно)
/*!40000 ALTER TABLE `realize` DISABLE KEYS */;
INSERT INTO `realize` (`realizeId`, `fakturaId`, `prodId`, `count`, `price`, `soldPrice`, `expiryDate`) VALUES
	(1, 1, 3, 5, 3500, 7500, NULL),
	(2, 1, 10, 10, 0, 0, NULL),
	(3, 1, 8, 1, 0, 3500, NULL),
	(4, 1, 11, 11, 0, 9500, NULL),
	(5, 1, 9, 1, 0, 0, NULL),
	(6, 1, 5, 21, 0, 18500, NULL);
/*!40000 ALTER TABLE `realize` ENABLE KEYS */;

-- Дамп структуры для представление sklad.realizeview
-- Создание временной таблицы для обработки ошибок зависимостей представлений
CREATE TABLE `realizeview` (
	`realizeId` INT(11) NOT NULL,
	`fakturaId` INT(11) NOT NULL,
	`name` VARCHAR(150) NULL COLLATE 'utf8_general_ci',
	`barcode` VARCHAR(50) NULL COLLATE 'utf8_general_ci',
	`providerId` INT(11) NULL,
	`fakturaDate` DATE NULL,
	`price` DOUBLE(17,0) NULL,
	`count` VARCHAR(41) NULL COLLATE 'utf8mb4_general_ci',
	`productId` INT(11) NOT NULL,
	`soldPrice` INT(11) NULL,
	`expiryDate` DATE NULL,
	`fakturaPrice` FLOAT NULL
) ENGINE=MyISAM;

-- Дамп структуры для процедура sklad.SetBalance
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `SetBalance`(IN `id` INT)
BEGIN
DECLARE prodID INT;
	DECLARE eCount float;
	DECLARE eCountTemp float;

	DECLARE back INT;
	DECLARE bCnt int DEFAULT(0);
	DECLARE result float DEFAULT(null);
	DECLARE cDate date DEFAULT(date(now()));

  


	IF id <> 0 THEN

				#WHILE i > 0 DO
				
				
					SET prodID = (select productId from product where productId = id);
					IF(prodID is not NULL) THEN
					
						#Приход продукта
						SET eCount = (select sum(r.count) from faktura f join realize r on r.fakturaId = f.fakturaId where r.prodId = prodID and date(f.fakturaDate) <= cDate limit 1);
						IF (eCOunt is null) THEN
							SET eCount = 0;
						END IF;
						
						#расход продукта
						SET eCountTemp = (select sum(o.packCount) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) <= cDate  and e.expType = 0  limit 1);
						IF (eCountTemp is null) THEN
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount - eCountTemp;
						
						#Возврат товара
						SET eCountTemp = (select sum(o.packCount) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) <= cDate  and e.expType = 1  limit 1);
						IF (eCountTemp is null) THEN
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount + eCountTemp;
						
						
						#Списание товара					
						SET eCountTemp = (select sum(o.packCount) from expense as e join orders as o on e.expenseId = o.expenseId where o.prodId = prodID and  date(e.expenseDate) <= cDate  and e.expType = 3  limit 1);
						IF (eCountTemp is null) THEN
							SET eCountTemp = 0;
						END IF;
						SET eCount = eCount - eCountTemp;
						
						update balance set endCount = eCount where balance.prodId = prodID; 
            END IF;
						

				
				
	END IF;
	
	
END//
DELIMITER ;

-- Дамп структуры для таблица sklad.transfer
CREATE TABLE IF NOT EXISTS `transfer` (
  `transferId` int(11) NOT NULL AUTO_INCREMENT,
  `summ` int(11) NOT NULL,
  `transferType` int(11) NOT NULL COMMENT 'type: 1- in cash, 2 - terminal, 3 - transfer form',
  `contragentId` int(11) NOT NULL,
  `expenseId` int(11) DEFAULT NULL,
  PRIMARY KEY (`transferId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.transfer: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `transfer` DISABLE KEYS */;
/*!40000 ALTER TABLE `transfer` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.user
CREATE TABLE IF NOT EXISTS `user` (
  `IDUser` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(25) NOT NULL,
  `password` varchar(255) NOT NULL,
  `email` varchar(25) DEFAULT NULL,
  `IDUserType` int(11) DEFAULT NULL,
  `phone` varchar(15) DEFAULT NULL,
  `ban` tinyint(4) NOT NULL DEFAULT '0',
  `role` varchar(255) NOT NULL,
  `IsActive` tinyint(4) DEFAULT NULL,
  `name` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`IDUser`),
  KEY `usertype` (`IDUserType`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.user: ~3 rows (приблизительно)
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` (`IDUser`, `username`, `password`, `email`, `IDUserType`, `phone`, `ban`, `role`, `IsActive`, `name`) VALUES
	(1, 'admin', '181c27e9fd350da69575904879131165', 'admin@admin.ru', 0, NULL, 0, 'admin', 0, NULL),
	(6, 'manager', 'd9b1d7db4cd6e70935368a1efb10e377', 'asd@asde.ru', 0, NULL, 0, 'manager', 0, NULL),
	(9, 'user', '1f32aa4c9a1d2ea010adcf2348166a04', NULL, 0, NULL, 0, 'user', 0, NULL);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;

-- Дамп структуры для таблица sklad.usertype
CREATE TABLE IF NOT EXISTS `usertype` (
  `IDUserType` int(11) NOT NULL AUTO_INCREMENT,
  `UserType` varchar(25) NOT NULL,
  PRIMARY KEY (`IDUserType`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Дамп данных таблицы sklad.usertype: ~0 rows (приблизительно)
/*!40000 ALTER TABLE `usertype` DISABLE KEYS */;
/*!40000 ALTER TABLE `usertype` ENABLE KEYS */;

-- Дамп структуры для представление sklad.backrealizeview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `backrealizeview`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `backrealizeview` AS select `r`.`backRealizeId` AS `backRealizeId`,`f`.`backFakturaId` AS `backFakturaId`,`p`.`name` AS `name`,cast(`f`.`fakturaDate` as date) AS `fakturaDate`,round((`r`.`count` * (select (case when (`p`.`pack` <> 0) then round((`r`.`price` / `p`.`pack`),2) else `r`.`price` end) AS `price` from `product` `p` where (`p`.`productId` = `r`.`prodId`) limit 1)),0) AS `price`,(case when (`p`.`pack` <> 0) then concat(floor((`r`.`count` / `p`.`pack`)),'/',(`r`.`count` - (floor((`r`.`count` / `p`.`pack`)) * `p`.`pack`))) else `r`.`count` end) AS `count`,`p`.`productId` AS `productId` from ((`backfaktura` `f` join `backrealize` `r` on((`r`.`backFakturaId` = `f`.`backFakturaId`))) join `product` `p` on((`p`.`productId` = `r`.`prodId`))) ;

-- Дамп структуры для представление sklad.backview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `backview`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `backview` AS select `e`.`expenseDate` AS `expenseDate`,`o`.`packCount` AS `count`,`p`.`name` AS `name`,`p`.`pack` AS `pack` from ((`expense` `e` join `orders` `o` on((`o`.`expenseId` = `e`.`expenseId`))) join `product` `p` on((`p`.`productId` = `o`.`prodId`))) where ((`e`.`debt` <> 1) and (`e`.`status` <> 1) and (`e`.`expType` <> 0)) group by `e`.`expenseDate` ;

-- Дамп структуры для представление sklad.balanceview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `balanceview`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `balanceview` AS select `b`.`balanceId` AS `balanceId`,`b`.`balanceDate` AS `balanceDate`,`b`.`prodId` AS `prodId`,
round(`b`.`endCount` * (select (case when (`p`.`pack` <> 0) then floor((`p`.`price` / `p`.`pack`)) 
else `p`.`price` end) AS `price` from `product` `p` where (`p`.`productId` = `b`.`prodId`) limit 1)) AS `curEndCount`,
`p`.`price` AS `price`,
(case when p.measureId=1 then round(`b`.`endCount`, 3) else b.endCount end) AS `endCount`,`p`.`productId` AS `productId`,`p`.`name` AS `name`,`p`.`measureId` AS `measureId`,`p`.`barcode` AS `barcode`,`p`.`status` AS `status`,`p`.`pack` AS `pack` 

from (`balance` `b` join `product` `p` on((`p`.`productId` = `b`.`prodId`))) where (`b`.`endCount` <> 0) order by `b`.`prodId` ;

-- Дамп структуры для представление sklad.curbalance
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `curbalance`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `curbalance` AS select `b`.`prodId` AS `prodId`,(`prodBalance`(`b`.`prodId`,(select `balance`.`balanceDate` from `balance` order by `balance`.`balanceDate` desc limit 1)) * (select (case when (`p`.`pack` <> 0) then floor((`p`.`price` / `p`.`pack`)) else `p`.`price` end) AS `price` from `product` `p` where (`p`.`productId` = `b`.`prodId`) limit 1)) AS `curEndCount`,(case when (`p`.`pack` <> 0) then concat(floor((`prodBalance`(`b`.`prodId`,(select `balance`.`balanceDate` from `balance` order by `balance`.`balanceDate` desc limit 1)) / `p`.`pack`)),'/',(`prodBalance`(`b`.`prodId`,(select `balance`.`balanceDate` from `balance` order by `balance`.`balanceDate` desc limit 1)) - (floor((`b`.`endCount` / `p`.`pack`)) * `p`.`pack`))) else convert(`prodBalance`(`b`.`prodId`,(select `balance`.`balanceDate` from `balance` order by `balance`.`balanceDate` desc limit 1)) using utf8mb4) end) AS `endCount`,`p`.`productId` AS `productId`,`p`.`name` AS `name`,`p`.`measureId` AS `measureId`,`p`.`barcode` AS `barcode`,`p`.`status` AS `status`,`p`.`price` AS `price`,`p`.`pack` AS `pack` from (`balance` `b` join `product` `p` on((`p`.`productId` = `b`.`prodId`))) where (`b`.`balanceDate` = (select `balance`.`balanceDate` from `balance` order by `balance`.`balanceDate` desc limit 1)) order by `b`.`prodId` ;

-- Дамп структуры для представление sklad.debtview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `debtview`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `debtview` AS select `e`.`expenseDate` AS `expenseDate`,`e`.`comment` AS `comment`,`e`.`expSum` AS `expSum` from `expense` `e` where ((`e`.`debt` = 1) and (`e`.`expType` <> 1)) ;

-- Дамп структуры для представление sklad.expenseview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `expenseview`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `expenseview` AS select 
cast(`e`.`expenseDate` as date) AS `expenseDate`,
`p`.`name` AS `name`,
`p`.`pack` AS `pack`,
(case when p.measureId=2 then sum(`o`.`packCount`) else Round(sum(`o`.`packCount`), 3) end) AS `count`, 
p.measureId
 from ((`expense` `e` join `orders` `o` on((`o`.`expenseId` = `e`.`expenseId`))) join `product` `p` 
on((`p`.`productId` = `o`.`prodId`))) where ((`e`.`debt` <> 1) and (`e`.`status` <> 1) and (`e`.`expType` <> 1)) group by cast(`e`.`expenseDate` as date),`o`.`prodId` ;

-- Дамп структуры для представление sklad.ordersview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `ordersview`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `ordersview` AS select `o`.`expenseId` AS `expenseId`,`p`.`name` AS `name`,`ex`.`expenseDate` AS `expenseDate`,`o`.`packCount` AS `cnt`,`o`.`orderSumm` AS `orderSumm` from ((`orders` `o` join `product` `p` on((`p`.`productId` = `o`.`prodId`))) join `expense` `ex` on((`ex`.`expenseId` = `o`.`expenseId`))) ;

-- Дамп структуры для представление sklad.productview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `productview`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `productview` AS select `p`.`productId` AS `productId`,
`p`.`name` AS `name`,
`p`.`providerId` AS `providerId`,
`p`.`price` AS `price`,
`p`.`barcode` AS `barcode`,
`p`.`expiry` AS `expiry`,
`b`.`balanceDate` AS `balanceDate`,
`b`.`endCount` AS `endCount` from (`product` `p` left join `balance` `b` on((`p`.`productId` = `b`.`prodId`))) where (`b`.`balanceDate` = '2000-01-01') ;

-- Дамп структуры для представление sklad.realizeview
-- Удаление временной таблицы и создание окончательной структуры представления
DROP TABLE IF EXISTS `realizeview`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `realizeview` AS select `r`.`realizeId` AS `realizeId`,`f`.`fakturaId` AS `fakturaId`,`p`.`name` AS `name`,`p`.barcode AS `barcode`,f.providerId,
cast(`f`.`fakturaDate` as date) AS `fakturaDate`,round((`r`.`count` * (select (case when (`p`.`pack` <> 0) then round((`r`.`price` / `p`.`pack`),2) else `r`.`price` end) AS `price`  

from `product` `p` where (`p`.`productId` = `r`.`prodId`) limit 1)),0) AS `price`,
(case when (`p`.`pack` <> 0) then concat(floor((`r`.`count` / `p`.`pack`)),'/',(`r`.`count` - (floor((`r`.`count` / `p`.`pack`)) * `p`.`pack`))) else `r`.`count` end) AS `count`,`p`.`productId` AS `productId`,`r`.`soldPrice` AS `soldPrice`,`r`.`expiryDate` AS `expiryDate`, r.price as fakturaPrice  from ((`faktura` `f` join `realize` `r` on((`r`.`fakturaId` = `f`.`fakturaId`))) join `product` `p` on((`p`.`productId` = `r`.`prodId`))) ;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
